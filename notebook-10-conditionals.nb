(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     99797,       2680]
NotebookOptionsPosition[     93280,       2466]
NotebookOutlinePosition[     94485,       2504]
CellTagsIndexPosition[     94406,       2499]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[2, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCEFxAJADBL8//8/
Qfzo0SP2GzduCF29elXs/Pnz0sgYn747d+5wA9VoArE/EB8B4uPoGJu+Fy9e
MF+4cEENKB8AxBeB+AMQ/wXif+gYi1tBdvoB8QUg/ghV9x8XRtb7/PlzFqje
t1D7cOrDpv/ixYvqUHuJ0ousHxpWAVA3E6UXWT80nC8S8i82/Q8ePOAgx26Y
/uvXrwsD2UdJ8Tey/kuXLolD0wNJbofpB6YVSUr0n4ek5QHTT6n7KQ0/SuOP
0vRDafqlRv6BxgPZ+Ret/HhHrBl4yi9QWHwiFB7Yyk+QO6B+CTxPYvmJjG/f
vs17nozyG1f9cR6t7gBhAPeiQ4A=
         "], {{0, 26}, {16, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2d9OVFcUB2DSNmkfQRFEiRQ1gCK1vW4fwT6BJu1tE9uk8fUUERE9aECC
qLGYEmKkErWxtont2mGdcDLVOpNgZijfJB9hzp+99j6zb9b5Hb3ww7nvP+rr
6/vxs/hz7vzPX1+8eP7St5/El28u/fTdhY/jn/6w8GlfXzlYVdWhDgyEwXT4
HQYbBho6qQMAAOxt/Q0HWxxo0TzX3xij7juGwpFwNAyHY2EkfB6OhxPhZBgL
42EinAqnw2SYSl+Es+HL9FWb6uvP5hj1eJNZ41TWHM85nMw5Hc85juSch3MN
R3JNdf/UfGbtPqf6WdW6/XsDAADsV7vd/7b2vqPV2/veuuc9k6Za1Mfr3vVt
feto9e+eVb9KL2tmz81M+n25dadZ9bU2zYXbYSmshNXwoOF+uJfn7obFcKfa
/twMN8L1MNtBTQAAYO+ZSVfTdLqSLreoj0/n9eXe0jeUHmQ+3AoL1XZ/UfqR
5Wq77yg9yMPwS3gcfg0b4Ul4Gn4LW+F5eBl+D6/CH+F1+DP99Q71+dd5z6sc
42WOuZU1nmbNjZzD45zTw5zjSs55KdewkGuazzXONp5Xu8+pflb185rpgd8d
AABgv/kQ/W/J4krGVvrIkruVDO5RWAvr1U7fuxmeVTt9b/Ei1d+38prNaqdv
Xc+xHuXY97LWYtbWr9Jryj4sGXPJmkvmXD7l/UrZsyWTLu9dyj4u72Ca2fVq
nivvY8renuug5ps2/b2L2q0JAADwX3azT/kQuv18AAAA2Pv0rOxn3djz3X6f
BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADsHW/a1I2aAAAAAAAAsJ91OyOEburGnr/W
prlwOyyFlbAaHjTcD/fy3N2wGO5U25+b4Ua4HmY7qAkAAAAAAAC9aCZdTdPp
Srrcoj4+ndeXe0tuVjK4+XCr2s7iSsa2XG3nbiWDexTWwnrYCE/CZngWtsLz
9CLV37fyms28ZyPHWMsxH2SN5ax5O+cwn3Oabayv3XXVa6vXN9MDvxN7W9mH
JWMuWXPJnMunZNBlz5ZMumTTZR+XrLqZXa/muZJtl70910HNQx0YCIPp8DsM
Ngw0dFIHAAAAAAAAel1/w8EWB1o0z/U3xqhzt6FwNAyHY2EkjIYT4WQYC+Nh
IpwOk+FMmmpRH5/Mayfy3rEc60SOPZK1hrP2ULWT9zXX2O666rXVuv378P/S
zJ6bmfT7cuuOsup/AFmW9vs=
         "], {{0, 26}, {2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lstOwkAUhhthQUJcuUBl5cr4GPoABvEJINGtCZoYng4Il4Z7gXAJYUHY
QAi3GlYQPZ5/4pCm0pYC2uSDaXvmn5lzzpzpVfQl/HyiKMqrj3/CkffbWCwS
f/TyzV387Snq4cYlc87gYbVaDbpB07SLRqMR6Pf7PiJSnOA+6h7kmBBz0+12
Tx30v/bgk9GZOvPAa7oejUYeC306AIz1wWjM/WAw8B9ZX4L1TDHGcDj02ulX
KpUNbt79jKHBV1b66Fcul3fCYgzEJNTr9fxmfaldKpWoUChQPp8X/8ViUWB8
BhuLMRCPGvJqmz76QWOxWFCtVqNsNku5XE6AdqfToclkImxga7cGuT/M+uw/
ms/ntF6vqdlsUjKZFKCNC/pynTZxyLbb7bNt/sHcMpkMzWYzoVev1wW4xuOx
WAdsbGIAH6ncJ7BNH/6FRjqdJl3XSV7T6VSsA76CDWxt9oSKOmLOH/RBLKEP
LVVVN/qJRGKjDxsnfSZoN3/4CPNfrVa/5n+IvtH/iDHu9/G/2T/G/JT5A41U
KiXm3Wq1xBhcx5zy0zK+Mj+Xy6XIf5n7EuQ/9sYh+Wneqy73r+3+2rX2OPh+
a31wqpHG5xbatvXtCDjW5wO1Z9UdzheXyPMRPrc6H49yvpvn/Y/fJ3/6ffUN
AyH/6w==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{3.647361175465108*^9},
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell["\<\
Notebook 10:
Conditionals\
\>", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.647331852839075*^9, 3.647331861295168*^9}, {
   3.647331922221755*^9, 3.647331924532915*^9}, {3.647332658962614*^9, 
   3.64733266480881*^9}, {3.6473611327373047`*^9, 3.647361139759391*^9}, {
   3.647448943135475*^9, 3.6474489472294493`*^9}, {3.658337416821965*^9, 
   3.65833742904038*^9}, {3.658337677781981*^9, 3.658337703010659*^9}, {
   3.662788438255704*^9, 3.662788443972288*^9}}],

Cell[TextData[{
 "William J Turkel, ",
 StyleBox["wturkel@uwo.ca",
  FontSlant->"Italic",
  FontColor->RGBColor[
   0.396078431372549, 0.596078431372549, 0.796078431372549]],
 "\nDigital Humanities 1011B"
}], "Subtitle",
 CellChangeTimes->{{3.647331955723979*^9, 3.6473319708190517`*^9}, 
   3.647332103720562*^9, {3.6583374336085033`*^9, 3.658337439311952*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Conditional expressions", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.662830149494809*^9, 3.662830152636696*^9}}],

Cell[TextData[{
 "Most programming languages have a way of expressing statements of the form \
\[OpenCurlyDoubleQuote]IF some condition THEN do something OTHERWISE do \
something else.\[CloseCurlyDoubleQuote] These kind of expressions are known \
as ",
 StyleBox["conditionals",
  FontSlant->"Italic"],
 ". ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has a number of them, including ",
 StyleBox["If",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Which",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.6627885552932787`*^9, 3.662788590110889*^9}, {
  3.662830157411997*^9, 3.662830228681633*^9}, {3.6628373133587437`*^9, 
  3.662837318652067*^9}}],

Cell[CellGroupData[{

Cell["If", "Subsection",
 CellChangeTimes->{{3.6628303493836813`*^9, 3.662830349840102*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["If",
  FontWeight->"Bold"],
 " command tests to see if a condition is ",
 StyleBox["True",
  FontWeight->"Bold"],
 ". If it is, it returns its second argument. If it is ",
 StyleBox["False",
  FontWeight->"Bold"],
 ", it returns its third argument."
}], "Text",
 CellChangeTimes->{{3.6628302694359827`*^9, 3.662830334481967*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"True", ",", " ", "Red", ",", "Blue"}], "]"}]], "Input",
 CellChangeTimes->{{3.6628302312722588`*^9, 3.6628302526780252`*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[1, 0, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1, 0, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6628302538165617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"False", ",", "Red", ",", "Blue"}], "]"}]], "Input",
 CellChangeTimes->{{3.6628302556396627`*^9, 3.662830260548971*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0., 0., 0.6666666666666666],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[0, 0, 1]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0, 0, 1],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.662830261003923*^9}]
}, Open  ]],

Cell[TextData[{
 "There is an alternate version of If which returns a fourth argument if the \
condition is neither ",
 StyleBox["True",
  FontWeight->"Bold"],
 " nor ",
 StyleBox["False",
  FontWeight->"Bold"],
 ". The ",
 StyleBox["Undefined",
  FontWeight->"Bold"],
 " value is neither ",
 StyleBox["True",
  FontWeight->"Bold"],
 " nor ",
 StyleBox["False",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.662830344529091*^9, 3.662830374683776*^9}, {
  3.662830424661223*^9, 3.662830440930438*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"Undefined", ",", "Red", ",", "Blue", ",", "Green"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.662830381691313*^9, 3.662830421861113*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[0, 1, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0, 1, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.662830422304461*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Which", "Subsection",
 CellChangeTimes->{{3.662831296141294*^9, 3.6628312967323008`*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["Which",
  FontWeight->"Bold"],
 " command lets us test as many conditions as we like. Each condition has a \
corresponding value. The value corresponding to the first condition to \
evaluate to ",
 StyleBox["True",
  FontWeight->"Bold"],
 " is returned."
}], "Text",
 CellChangeTimes->{{3.662831299971621*^9, 3.6628313520441093`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Which", "[", 
  RowBox[{
  "True", ",", "Red", ",", "True", ",", "Blue", ",", "True", ",", "Green", 
   ",", "True", ",", "Orange"}], "]"}]], "Input",
 CellChangeTimes->{{3.66283135674944*^9, 3.662831375128645*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[1, 0, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1, 0, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.662831376034657*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Which", "[", 
  RowBox[{
  "False", ",", "Red", ",", "True", ",", "Blue", ",", "True", ",", "Green", 
   ",", "True", ",", "Orange"}], "]"}]], "Input",
 CellChangeTimes->{{3.66283135674944*^9, 3.662831383967643*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0., 0., 0.6666666666666666],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[0, 0, 1]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0, 0, 1],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6628313844596443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Which", "[", 
  RowBox[{
  "False", ",", "Red", ",", "False", ",", "Blue", ",", "True", ",", "Green", 
   ",", "True", ",", "Orange"}], "]"}]], "Input",
 CellChangeTimes->{{3.66283135674944*^9, 3.662831415082942*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[0, 1, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0, 1, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.662831415719823*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Which", "[", 
  RowBox[{
  "False", ",", "Red", ",", "False", ",", "Blue", ",", "False", ",", "Green", 
   ",", "True", ",", "Orange"}], "]"}]], "Input",
 CellChangeTimes->{{3.66283135674944*^9, 3.662831422417944*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[1, 0.5, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1, 0.5, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.662831422792391*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Animating a stop sign", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.6628304833489532`*^9, 3.662830486731248*^9}}],

Cell["\<\
Here is an example of how we might use a conditional statement. Let\
\[CloseCurlyQuote]s start by designing a stop sign. We will use darker, less \
opaque versions of each colour to represent lights that are off.\
\>", "Text",
 CellChangeTimes->{{3.6628304892270823`*^9, 3.662830496865906*^9}, {
   3.662830527270293*^9, 3.662830560832584*^9}, {3.66283082670613*^9, 
   3.662830837072014*^9}, {3.662830872683489*^9, 3.66283087525025*^9}, 
   3.662831111225416*^9, {3.662831200731106*^9, 3.662831203570065*^9}, {
   3.6628314333519163`*^9, 3.662831447774127*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Darker", "[", "Gray", "]"}], ",", 
     RowBox[{"Rectangle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "22"}], "}"}]}], "]"}], ",", 
     RowBox[{"Opacity", "[", ".5", "]"}], ",", 
     RowBox[{"Darker", "[", "Green", "]"}], ",", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4"}], "}"}], ",", "3"}], "]"}], ",", 
     RowBox[{"Darker", "[", "Yellow", "]"}], ",", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "11"}], "}"}], ",", "3"}], "]"}], ",", 
     RowBox[{"Darker", "[", "Red", "]"}], ",", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "18"}], "}"}], ",", "3"}], "]"}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662830523806738*^9, 3.662830524573319*^9}, {
   3.662830563775908*^9, 3.662830797023139*^9}, {3.662830841080858*^9, 
   3.6628308649091253`*^9}, 3.6628311157922897`*^9, {3.662831208953861*^9, 
   3.662831215064641*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    RectangleBox[{0, 0}, {10, 22}]}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
    DiskBox[{5, 4}, 3], 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], DiskBox[{5, 11}, 3]}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], DiskBox[{5, 18}, 3]}}},
  Frame->True,
  GridLines->Automatic]], "Output",
 CellChangeTimes->{
  3.6628306347051907`*^9, {3.6628306797258472`*^9, 3.662830747499892*^9}, {
   3.6628307922614717`*^9, 3.662830797348283*^9}, {3.662830853862603*^9, 
   3.662830865330729*^9}, 3.662831116733111*^9, 3.662831215447879*^9}]
}, Open  ]],

Cell[TextData[{
 "Now we want to create a function that draws a stop light at a given \
position. We will also give our drawing function another parameter ",
 StyleBox["t",
  FontSlant->"Italic"],
 " that indicates time (in seconds). Then we will use a ",
 StyleBox["Which",
  FontWeight->"Bold"],
 " statement to use the time value to set the colour to green, amber or red."
}], "Text",
 CellChangeTimes->{{3.662830886153466*^9, 3.662831026180245*^9}, {
  3.6628314605723*^9, 3.6628314611082907`*^9}, {3.6628373388572693`*^9, 
  3.662837358579006*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"drawStopLight", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], ",", "t_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Darker", "[", "Gray", "]"}], ",", 
    RowBox[{"Rectangle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "+", "10"}], ",", 
        RowBox[{"y", "+", "22"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Opacity", "[", ".5", "]"}], ",", 
    RowBox[{"Darker", "[", "Green", "]"}], ",", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "+", "5"}], ",", 
        RowBox[{"y", "+", "4"}]}], "}"}], ",", "3"}], "]"}], ",", 
    RowBox[{"Darker", "[", "Yellow", "]"}], ",", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "+", "5"}], ",", 
        RowBox[{"y", "+", "11"}]}], "}"}], ",", "3"}], "]"}], ",", 
    RowBox[{"Darker", "[", "Red", "]"}], ",", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "+", "5"}], ",", 
        RowBox[{"y", "+", "18"}]}], "}"}], ",", "3"}], "]"}], ",", 
    RowBox[{"Opacity", "[", "1", "]"}], ",", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"t", "\[LessEqual]", "4"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", "5"}], ",", 
            RowBox[{"y", "+", "4"}]}], "}"}], ",", "3"}], "]"}]}], "}"}], ",", 
      RowBox[{"t", "\[LessEqual]", "6"}], ",", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", "5"}], ",", 
            RowBox[{"y", "+", "11"}]}], "}"}], ",", "3"}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"t", "\[LessEqual]", "10"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", "5"}], ",", 
            RowBox[{"y", "+", "18"}]}], "}"}], ",", "3"}], "]"}]}], "}"}]}], 
     "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6628309977442303`*^9, 3.662831042053389*^9}, {
  3.662831075077146*^9, 3.6628310964022217`*^9}, {3.662831136716804*^9, 
  3.662831141643447*^9}, {3.662831173482132*^9, 3.662831192724362*^9}, {
  3.6628312318018007`*^9, 3.662831248877347*^9}, {3.662831466588428*^9, 
  3.662831634411014*^9}}],

Cell["Let\[CloseCurlyQuote]s test our three conditions", "Text",
 CellChangeTimes->{{3.662831652800487*^9, 3.662831657991129*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"drawStopLight", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"drawStopLight", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "5"}], "]"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"drawStopLight", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "7"}], "]"}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.6628316482915287`*^9, 3.662831718151062*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[
      0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
      RectangleBox[{0, 0}, {10, 22}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
      DiskBox[{5, 4}, 3], 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], DiskBox[{5, 11}, 3]}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], DiskBox[{5, 18}, 3], 
       {Opacity[1], 
        {RGBColor[0, 1, 0], DiskBox[{5, 4}, 3]}}}}}], ",", 
   GraphicsBox[{
     {RGBColor[
      0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
      RectangleBox[{0, 0}, {10, 22}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
      DiskBox[{5, 4}, 3], 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], DiskBox[{5, 11}, 3]}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], DiskBox[{5, 18}, 3], 
       {Opacity[1], 
        {RGBColor[1, 1, 0], DiskBox[{5, 11}, 3]}}}}}], ",", 
   GraphicsBox[{
     {RGBColor[
      0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
      RectangleBox[{0, 0}, {10, 22}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
      DiskBox[{5, 4}, 3], 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], DiskBox[{5, 11}, 3]}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], DiskBox[{5, 18}, 3], 
       {Opacity[1], 
        {RGBColor[1, 0, 0], DiskBox[{5, 18}, 3]}}}}}]}], "}"}]], "Output",
 CellChangeTimes->{3.662831686750437*^9, 3.662831719191078*^9}]
}, Open  ]],

Cell[TextData[{
 "Now we can use ",
 StyleBox["Table",
  FontWeight->"Bold"],
 " and ",
 StyleBox["ListAnimate",
  FontWeight->"Bold"],
 " to create an animation"
}], "Text",
 CellChangeTimes->{{3.6628317332439127`*^9, 3.662831753049037*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stopSignFrames", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"LightBlue", ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"50", ",", "50"}], "}"}]}], "]"}], ",", 
        RowBox[{"Darker", "[", "Gray", "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "48"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16", ",", "48"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16", ",", "43"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"14", ",", "43"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"14", ",", "46"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "46"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"drawStopLight", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", "22"}], "}"}], ",", "t"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662831756945444*^9, 3.6628321557093143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"stopSignFrames", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.662832158909737*^9, 3.662832164109025*^9}, {
  3.662834267447886*^9, 3.662834267510827*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i72$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i72$$ = 1}, 
     "\"max\"" :> {$CellContext`i72$$ = 10}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i72$$], 1, ""}, 1, 10, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i72$74154$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i72$$], {1, 10, 1},
                  AnimationRate->1,
                  AnimationRunTime->11.583844184875488`,
                  AnimationRunning->False,
                  AnimationTimeIndex->0.5838441848754883,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[{
                  {RGBColor[0.87, 0.94, 1], RectangleBox[{0, 0}, {50, 50}]}, 
                  {RGBColor[
                   0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                   PolygonBox[{{2, 2}, {2, 48}, {16, 48}, {16, 43}, {14, 
                    43}, {14, 46}, {4, 46}, {4, 2}}], {
                    {RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{10, 22}, {20, 44}]}, 
                    {RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
                    DiskBox[{15, 26}, 3], 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{15, 33}, 3]}, 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    DiskBox[{15, 40}, 3], 
                    {Opacity[1], 
                    {RGBColor[0, 1, 0], DiskBox[{15, 26}, 3]}}}}}}}], 2->
                GraphicsBox[{
                  {RGBColor[0.87, 0.94, 1], RectangleBox[{0, 0}, {50, 50}]}, 
                  {RGBColor[
                   0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                   PolygonBox[{{2, 2}, {2, 48}, {16, 48}, {16, 43}, {14, 
                    43}, {14, 46}, {4, 46}, {4, 2}}], {
                    {RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{10, 22}, {20, 44}]}, 
                    {RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
                    DiskBox[{15, 26}, 3], 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{15, 33}, 3]}, 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    DiskBox[{15, 40}, 3], 
                    {Opacity[1], 
                    {RGBColor[0, 1, 0], DiskBox[{15, 26}, 3]}}}}}}}], 3->
                GraphicsBox[{
                  {RGBColor[0.87, 0.94, 1], RectangleBox[{0, 0}, {50, 50}]}, 
                  {RGBColor[
                   0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                   PolygonBox[{{2, 2}, {2, 48}, {16, 48}, {16, 43}, {14, 
                    43}, {14, 46}, {4, 46}, {4, 2}}], {
                    {RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{10, 22}, {20, 44}]}, 
                    {RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
                    DiskBox[{15, 26}, 3], 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{15, 33}, 3]}, 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    DiskBox[{15, 40}, 3], 
                    {Opacity[1], 
                    {RGBColor[0, 1, 0], DiskBox[{15, 26}, 3]}}}}}}}], 4->
                GraphicsBox[{
                  {RGBColor[0.87, 0.94, 1], RectangleBox[{0, 0}, {50, 50}]}, 
                  {RGBColor[
                   0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                   PolygonBox[{{2, 2}, {2, 48}, {16, 48}, {16, 43}, {14, 
                    43}, {14, 46}, {4, 46}, {4, 2}}], {
                    {RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{10, 22}, {20, 44}]}, 
                    {RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
                    DiskBox[{15, 26}, 3], 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{15, 33}, 3]}, 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    DiskBox[{15, 40}, 3], 
                    {Opacity[1], 
                    {RGBColor[0, 1, 0], DiskBox[{15, 26}, 3]}}}}}}}], 5->
                GraphicsBox[{
                  {RGBColor[0.87, 0.94, 1], RectangleBox[{0, 0}, {50, 50}]}, 
                  {RGBColor[
                   0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                   PolygonBox[{{2, 2}, {2, 48}, {16, 48}, {16, 43}, {14, 
                    43}, {14, 46}, {4, 46}, {4, 2}}], {
                    {RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{10, 22}, {20, 44}]}, 
                    {RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
                    DiskBox[{15, 26}, 3], 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{15, 33}, 3]}, 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    DiskBox[{15, 40}, 3], 
                    {Opacity[1], 
                    {RGBColor[1, 1, 0], DiskBox[{15, 33}, 3]}}}}}}}], 6->
                GraphicsBox[{
                  {RGBColor[0.87, 0.94, 1], RectangleBox[{0, 0}, {50, 50}]}, 
                  {RGBColor[
                   0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                   PolygonBox[{{2, 2}, {2, 48}, {16, 48}, {16, 43}, {14, 
                    43}, {14, 46}, {4, 46}, {4, 2}}], {
                    {RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{10, 22}, {20, 44}]}, 
                    {RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
                    DiskBox[{15, 26}, 3], 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{15, 33}, 3]}, 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    DiskBox[{15, 40}, 3], 
                    {Opacity[1], 
                    {RGBColor[1, 1, 0], DiskBox[{15, 33}, 3]}}}}}}}], 7->
                GraphicsBox[{
                  {RGBColor[0.87, 0.94, 1], RectangleBox[{0, 0}, {50, 50}]}, 
                  {RGBColor[
                   0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                   PolygonBox[{{2, 2}, {2, 48}, {16, 48}, {16, 43}, {14, 
                    43}, {14, 46}, {4, 46}, {4, 2}}], {
                    {RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{10, 22}, {20, 44}]}, 
                    {RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
                    DiskBox[{15, 26}, 3], 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{15, 33}, 3]}, 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    DiskBox[{15, 40}, 3], 
                    {Opacity[1], 
                    {RGBColor[1, 0, 0], DiskBox[{15, 40}, 3]}}}}}}}], 8->
                GraphicsBox[{
                  {RGBColor[0.87, 0.94, 1], RectangleBox[{0, 0}, {50, 50}]}, 
                  {RGBColor[
                   0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                   PolygonBox[{{2, 2}, {2, 48}, {16, 48}, {16, 43}, {14, 
                    43}, {14, 46}, {4, 46}, {4, 2}}], {
                    {RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{10, 22}, {20, 44}]}, 
                    {RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
                    DiskBox[{15, 26}, 3], 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{15, 33}, 3]}, 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    DiskBox[{15, 40}, 3], 
                    {Opacity[1], 
                    {RGBColor[1, 0, 0], DiskBox[{15, 40}, 3]}}}}}}}], 9->
                GraphicsBox[{
                  {RGBColor[0.87, 0.94, 1], RectangleBox[{0, 0}, {50, 50}]}, 
                  {RGBColor[
                   0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                   PolygonBox[{{2, 2}, {2, 48}, {16, 48}, {16, 43}, {14, 
                    43}, {14, 46}, {4, 46}, {4, 2}}], {
                    {RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{10, 22}, {20, 44}]}, 
                    {RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
                    DiskBox[{15, 26}, 3], 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{15, 33}, 3]}, 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    DiskBox[{15, 40}, 3], 
                    {Opacity[1], 
                    {RGBColor[1, 0, 0], DiskBox[{15, 40}, 3]}}}}}}}], 10->
                GraphicsBox[{
                  {RGBColor[0.87, 0.94, 1], RectangleBox[{0, 0}, {50, 50}]}, 
                  {RGBColor[
                   0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                   PolygonBox[{{2, 2}, {2, 48}, {16, 48}, {16, 43}, {14, 
                    43}, {14, 46}, {4, 46}, {4, 2}}], {
                    {RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{10, 22}, {20, 44}]}, 
                    {RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5], 
                    DiskBox[{15, 26}, 3], 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{15, 33}, 3]}, 
                    {RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    DiskBox[{15, 40}, 3], 
                    {Opacity[1], 
                    {RGBColor[1, 0, 0], DiskBox[{15, 40}, 3]}}}}}}}]}, 
                Dynamic[$CellContext`i72$$],
                Alignment->Automatic,
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i72$$, \
$CellContext`i72$74154$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 10, 1}, 10, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{491., {259.16754150390625`, 266.33245849609375`}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.662832167514122*^9, 3.6628342681325407`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Collision detection", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.662832283707471*^9, 3.662832286330065*^9}}],

Cell[TextData[{
 "In an animation or video game, you often want to know when one graphic \
element enters the same space as another. This goes by the general name of ",
 StyleBox["collision detection",
  FontSlant->"Italic"],
 ", although the interaction doesn\[CloseCurlyQuote]t have to be a collision \
as such."
}], "Text",
 CellChangeTimes->{{3.6477163758185587`*^9, 3.647716376530898*^9}, {
  3.66283229411275*^9, 3.662832386723164*^9}}],

Cell[CellGroupData[{

Cell["The balloon pops", "Subsection",
 CellChangeTimes->{{3.6628330947795963`*^9, 3.662833100490753*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s try this idea in an animation. We will make drawing \
functions for a balloon, before and after being popped. We will also need an \
arrow to pop the balloon.\
\>", "Text",
 CellChangeTimes->{{3.66283310434544*^9, 3.662833111360753*^9}, {
  3.662833842796319*^9, 3.6628338654961863`*^9}, {3.662835009375371*^9, 
  3.662835009709825*^9}, {3.66283506785279*^9, 3.662835082569293*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drawBalloon", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Gray", ",", 
     RowBox[{"Thickness", "[", ".01", "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"y", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"y", "-", "5"}]}], "}"}]}], "}"}], "]"}], ",", "Red", ",", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", "1"}], "]"}], ",", 
     RowBox[{"Triangle", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"y", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "-", ".25"}], ",", 
          RowBox[{"y", "-", "1.25"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "+", ".25"}], ",", 
          RowBox[{"y", "-", "1.25"}]}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.662833113825831*^9, 3.6628333605223417`*^9}, {
  3.662833520425735*^9, 3.662833520504778*^9}, {3.662833940958972*^9, 
  3.662833953365127*^9}, {3.6628352597182083`*^9, 3.662835266276037*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drawPoppedBalloon", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Gray", ",", 
     RowBox[{"Thickness", "[", ".01", "]"}], ",", 
     RowBox[{"BezierCurve", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"y", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "+", ".5"}], ",", 
          RowBox[{"y", "-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "-", ".5"}], ",", 
          RowBox[{"y", "-", "4"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"y", "-", "5"}]}], "}"}]}], "}"}], "]"}], ",", "Red", ",", 
     RowBox[{"Thickness", "[", ".025", "]"}], ",", 
     RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", 
     RowBox[{"BezierCurve", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"y", "+", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "+", ".5"}], ",", 
          RowBox[{"y", "+", ".2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "-", ".5"}], ",", 
          RowBox[{"y", "-", ".2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"y", "-", ".9"}]}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Triangle", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"y", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "-", ".25"}], ",", 
          RowBox[{"y", "-", "1.25"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "+", ".25"}], ",", 
          RowBox[{"y", "-", "1.25"}]}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.662833113825831*^9, 3.662833389542102*^9}, {
   3.662833465241283*^9, 3.6628334918131237`*^9}, {3.662833533999436*^9, 
   3.6628335741518393`*^9}, {3.662833624952775*^9, 3.662833671492094*^9}, {
   3.662833729120091*^9, 3.662833777751655*^9}, 3.6628339650363607`*^9, {
   3.662835269915689*^9, 3.662835274578835*^9}, {3.662835312942005*^9, 
   3.662835314092176*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"drawArrow", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{"Blue", ",", 
    RowBox[{"Thickness", "[", ".01", "]"}], ",", 
    RowBox[{"Arrowheads", "[", ".05", "]"}], ",", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "-", "4"}], ",", "y"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "}"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.662833867871687*^9, 3.662833937836834*^9}, {
  3.662833976278261*^9, 3.662833977334144*^9}, {3.66283402000003*^9, 
  3.66283408529309*^9}, {3.662834174733903*^9, 3.6628341772694674`*^9}, {
  3.662835450974257*^9, 3.6628354712519503`*^9}}],

Cell["Here are what the individual elements look like", "Text",
 CellChangeTimes->{{3.6628340903959417`*^9, 3.662834094522739*^9}, {
  3.662837410992146*^9, 3.662837412191113*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"drawBalloon", "[", 
      RowBox[{"{", 
       RowBox[{"5", ",", "5"}], "}"}], "]"}], ",", 
     RowBox[{"drawPoppedBalloon", "[", 
      RowBox[{"{", 
       RowBox[{"7", ",", "5"}], "}"}], "]"}], ",", 
     RowBox[{"drawArrow", "[", 
      RowBox[{"{", 
       RowBox[{"12", ",", "5"}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662833119722909*^9, 3.662833133066964*^9}, {
   3.6628332322632732`*^9, 3.662833245836907*^9}, {3.662833431064076*^9, 
   3.6628334551950493`*^9}, 3.662833559923005*^9, {3.662833988164589*^9, 
   3.6628339985464697`*^9}, {3.662834101554923*^9, 3.6628341045531807`*^9}, {
   3.662834181516959*^9, 3.6628341817124033`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.5], Thickness[0.01], LineBox[{{5, 4}, {5, 0}}], 
    {RGBColor[1, 0, 0], DiskBox[{5, 5}], 
     TagBox[PolygonBox[{{5, 4}, {4.75, 3.75}, {5.25, 3.75}}],
      "Triangle"]}}, {
    {GrayLevel[0.5], Thickness[0.01], 
     BezierCurveBox[{{7, 4}, {7.5, 3}, {6.5, 1}, {7, 0}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.025], CapForm["Round"], 
     BezierCurveBox[{{7, 6}, {7.5, 5.2}, {6.5, 4.8}, {7, 4.1}}], 
     TagBox[PolygonBox[{{7, 4}, {6.75, 3.75}, {7.25, 3.75}}],
      "Triangle"]}}, 
   {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
    ArrowBox[{{8, 5}, {12, 5}}]}},
  Frame->True,
  GridLines->Automatic]], "Output",
 CellChangeTimes->{{3.662833240795352*^9, 3.662833275615653*^9}, {
   3.662833339400823*^9, 3.662833362556316*^9}, {3.662833495915327*^9, 
   3.662833575876307*^9}, {3.662833648536819*^9, 3.6628336754849653`*^9}, {
   3.6628337349800873`*^9, 3.662833783589375*^9}, {3.662833950120747*^9, 
   3.6628339683134203`*^9}, {3.662833999235765*^9, 3.662834041811013*^9}, {
   3.662834086737895*^9, 3.662834104896703*^9}, 3.6628341821391153`*^9, 
   3.662835279842115*^9, 3.662835318190483*^9, {3.6628354539079847`*^9, 
   3.662835473317572*^9}}]
}, Open  ]],

Cell[TextData[{
 "Once again, we use ",
 StyleBox["Table",
  FontWeight->"Bold"],
 " and ",
 StyleBox["ListAnimate",
  FontWeight->"Bold"],
 " to create our animation. An ",
 StyleBox["If",
  FontWeight->"Bold"],
 " condition tests whether the arrow has reached the balloon or not. We want \
this animation to run more quickly than the Stop Light animation, so we set \
the frames per second to 10."
}], "Text",
 CellChangeTimes->{{3.6628341243982077`*^9, 3.662834149225861*^9}, {
  3.662835359677311*^9, 3.662835390719533*^9}, {3.6628355217072372`*^9, 
  3.662835522714151*^9}, {3.662837424325819*^9, 3.6628374255162086`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"balloonFrames", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"LightBlue", ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"20", ",", "10"}], "}"}]}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", "<", "16"}], ",", 
          RowBox[{"drawBalloon", "[", 
           RowBox[{"{", 
            RowBox[{"16", ",", "5"}], "}"}], "]"}], ",", 
          RowBox[{"drawPoppedBalloon", "[", 
           RowBox[{"{", 
            RowBox[{"16", ",", "5"}], "}"}], "]"}]}], "]"}], ",", 
        RowBox[{"drawArrow", "[", 
         RowBox[{"{", 
          RowBox[{"x", ",", "5"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "20"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662834217288892*^9, 3.662834240443067*^9}, {
   3.6628342811019783`*^9, 3.662834285963835*^9}, {3.662834334199362*^9, 
   3.662834494442046*^9}, {3.662834536580873*^9, 3.6628346140552692`*^9}, {
   3.662835031435104*^9, 3.66283504095294*^9}, 3.662835226243309*^9, {
   3.6628354055748253`*^9, 3.6628354222198067`*^9}, {3.66283549438456*^9, 
   3.662835498006008*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"balloonFrames", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.6628351831637363`*^9, 3.6628352151331587`*^9}, 
   3.6628353499429197`*^9, {3.662835381672998*^9, 3.6628353936951723`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i85$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i85$$ = 1}, 
     "\"max\"" :> {$CellContext`i85$$ = 20}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i85$$], 1, ""}, 1, 20, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i85$84062$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i85$$], {1, 20, 1},
                  AnimationRate->10,
                  AnimationRunTime->4.798459053039551,
                  AnimationRunning->False,
                  AnimationTimeIndex->0.6984590530394605,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{-3, 5}, {1, 5}}]}}], 2->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{-2, 5}, {2, 5}}]}}], 3->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{-1, 5}, {3, 5}}]}}], 4->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{0, 5}, {4, 5}}]}}], 5->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{1, 5}, {5, 5}}]}}], 6->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{2, 5}, {6, 5}}]}}], 7->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{3, 5}, {7, 5}}]}}], 8->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{4, 5}, {8, 5}}]}}], 9->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{5, 5}, {9, 5}}]}}], 10->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{6, 5}, {10, 5}}]}}], 11->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{7, 5}, {11, 5}}]}}], 12->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{8, 5}, {12, 5}}]}}], 13->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{9, 5}, {13, 5}}]}}], 14->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{10, 5}, {14, 5}}]}}], 15->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], 
                  {GrayLevel[0.5], Thickness[0.01], 
                   LineBox[{{16, 4}, {16, 0}}], 
                   {RGBColor[1, 0, 0], DiskBox[{16, 5}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{11, 5}, {15, 5}}]}}], 16->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], {
                   {GrayLevel[0.5], Thickness[0.01], 
                    BezierCurveBox[{{16, 4}, {16.5, 3}, {15.5, 1}, {16, 0}}]}, 
                   {RGBColor[1, 0, 0], Thickness[0.025], CapForm["Round"], 
                    BezierCurveBox[{{16, 6}, {16.5, 5.2}, {15.5, 4.8}, {
                    16, 4.1}}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{12, 5}, {16, 5}}]}}], 17->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], {
                   {GrayLevel[0.5], Thickness[0.01], 
                    BezierCurveBox[{{16, 4}, {16.5, 3}, {15.5, 1}, {16, 0}}]}, 
                   {RGBColor[1, 0, 0], Thickness[0.025], CapForm["Round"], 
                    BezierCurveBox[{{16, 6}, {16.5, 5.2}, {15.5, 4.8}, {
                    16, 4.1}}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{13, 5}, {17, 5}}]}}], 18->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], {
                   {GrayLevel[0.5], Thickness[0.01], 
                    BezierCurveBox[{{16, 4}, {16.5, 3}, {15.5, 1}, {16, 0}}]}, 
                   {RGBColor[1, 0, 0], Thickness[0.025], CapForm["Round"], 
                    BezierCurveBox[{{16, 6}, {16.5, 5.2}, {15.5, 4.8}, {
                    16, 4.1}}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{14, 5}, {18, 5}}]}}], 19->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], {
                   {GrayLevel[0.5], Thickness[0.01], 
                    BezierCurveBox[{{16, 4}, {16.5, 3}, {15.5, 1}, {16, 0}}]}, 
                   {RGBColor[1, 0, 0], Thickness[0.025], CapForm["Round"], 
                    BezierCurveBox[{{16, 6}, {16.5, 5.2}, {15.5, 4.8}, {
                    16, 4.1}}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{15, 5}, {19, 5}}]}}], 20->
                GraphicsBox[
                 {RGBColor[0.87, 0.94, 1], RectangleBox[{-3, 0}, {20, 10}], {
                   {GrayLevel[0.5], Thickness[0.01], 
                    BezierCurveBox[{{16, 4}, {16.5, 3}, {15.5, 1}, {16, 0}}]}, 
                   {RGBColor[1, 0, 0], Thickness[0.025], CapForm["Round"], 
                    BezierCurveBox[{{16, 6}, {16.5, 5.2}, {15.5, 4.8}, {
                    16, 4.1}}], 
                    TagBox[PolygonBox[{{16, 4}, {15.75, 3.75}, {16.25, 3.75}}],
                    "Triangle"]}}, 
                  {RGBColor[0, 0, 1], Thickness[0.01], Arrowheads[0.05], 
                   ArrowBox[{{16, 5}, {20, 5}}]}}]}, 
                Dynamic[$CellContext`i85$$],
                Alignment->Automatic,
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i85$$, \
$CellContext`i85$84062$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 20, 1}, 20, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{491., {137.66754150390625`, 144.83245849609375`}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.662835193484173*^9, 3.662835215504201*^9}, 
   3.662835284831593*^9, {3.662835323942211*^9, 3.6628353509484863`*^9}, {
   3.662835382359564*^9, 3.662835425826827*^9}, {3.662835458172871*^9, 
   3.662835501726788*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["EuclideanDistance", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, 
   3.662835105929646*^9}],

Cell[TextData[{
 "A more general way to implement collision detection is to measure the ",
 StyleBox["EuclideanDistance",
  FontWeight->"Bold"],
 " between the centre points of two objects. If it is less than or equal to \
the sum of their radii, their edges are touching or overlapping. If either or \
both of the objects are not circles, we imagine the smallest circle they fit \
inside. (For objects that are long and thin or have irregular edges, we might \
have to come up with a more sophisticated algorithm)."
}], "Text",
 CellChangeTimes->{{3.662832409807722*^9, 3.662832611354357*^9}, {
  3.662832735224063*^9, 3.6628327453026447`*^9}, {3.662835118085001*^9, 
  3.6628351291304092`*^9}}],

Cell["\<\
Here is an example of two disks that are touching. They both have a radius of \
1, so the sum of their radii is 2.\
\>", "Text",
 CellChangeTimes->{{3.662832643597439*^9, 3.662832661226761*^9}, {
  3.662832711404263*^9, 3.662832726049192*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Orange", ",", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
     "Purple", ",", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662832632267686*^9, 3.6628326360477962`*^9}, {
  3.6628326661381617`*^9, 3.6628327048696012`*^9}, {3.6628371177950783`*^9, 
  3.662837138381608*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0.5, 0], DiskBox[{-1, 0}]}, 
   {RGBColor[0.5, 0, 0.5], DiskBox[{1, 0}]}},
  Frame->True,
  GridLines->Automatic]], "Output",
 CellChangeTimes->{{3.662832683393641*^9, 3.662832705449934*^9}, {
  3.6628371241578703`*^9, 3.662837138745186*^9}}]
}, Open  ]],

Cell["\<\
When we measure the EuclideanDistance between the centre points ({-1, 0} and \
{1, 0}) we find that it is exactly 2, so they are touching.\
\>", "Text",
 CellChangeTimes->{{3.6628327306012163`*^9, 3.662832769626906*^9}, {
  3.662832843672057*^9, 3.662832845079733*^9}, {3.6628374577658167`*^9, 
  3.662837461107995*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EuclideanDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6628327716834717`*^9, 3.66283278136126*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.6628327818019743`*^9}]
}, Open  ]],

Cell["\<\
What about a disk of radius 3 centred at {-3, 2} and a disk of radius 2.5 \
centred at {2, 0.75}? The calculation suggests that they are either touching \
or overlapping\
\>", "Text",
 CellChangeTimes->{{3.662832785705245*^9, 3.6628328499189377`*^9}, {
   3.6628328812825336`*^9, 3.662832898223974*^9}, 3.6628329811167*^9, {
   3.662837471209497*^9, 3.6628374740650883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EuclideanDistance", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0.75"}], "}"}]}], "]"}], "\[LessEqual]", 
  RowBox[{"(", 
   RowBox[{"3", "+", "2.5"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.66283285368795*^9, 3.662832876667935*^9}, 
   3.662832984147706*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.662832877847582*^9, 3.66283298528895*^9}]
}, Open  ]],

Cell["When we plot the figure we see that this is true", "Text",
 CellChangeTimes->{{3.662832901063501*^9, 3.6628329073346853`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Orange", ",", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "2"}], "}"}], ",", "3"}], "]"}], ",", 
     "Purple", ",", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "0.75"}], "}"}], ",", "2.5"}], "]"}]}], "}"}], ",", 
   
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662832632267686*^9, 3.6628326360477962`*^9}, {
  3.6628326661381617`*^9, 3.6628327048696012`*^9}, {3.662832944922413*^9, 
  3.662832975493854*^9}, {3.6628371211451178`*^9, 3.662837142635742*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0.5, 0], DiskBox[{-3, 2}, 3]}, 
   {RGBColor[0.5, 0, 0.5], DiskBox[{2, 0.75}, 2.5]}},
  Frame->True,
  GridLines->Automatic]], "Output",
 CellChangeTimes->{{3.6628329616271267`*^9, 3.662832990278928*^9}, {
  3.6628371265966578`*^9, 3.662837143008286*^9}}]
}, Open  ]],

Cell["\<\
The Euclidean distance is the length of the line between their two centre \
points\
\>", "Text",
 CellChangeTimes->{{3.66283748895821*^9, 3.662837511472686*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EuclideanDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0.75"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["5.153882032022076`"], "Output",
 CellChangeTimes->{3.662837519837378*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Orange", ",", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "2"}], "}"}], ",", "3"}], "]"}], ",", 
     "Purple", ",", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "0.75"}], "}"}], ",", "2.5"}], "]"}], ",", 
     "LightBlue", ",", "Thick", ",", "Dashed", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0.75"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662832632267686*^9, 3.6628326360477962`*^9}, {
  3.6628326661381617`*^9, 3.6628327048696012`*^9}, {3.662832944922413*^9, 
  3.662832975493854*^9}, {3.6628371211451178`*^9, 3.662837142635742*^9}, {
  3.662837530309252*^9, 3.662837559913802*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0.5, 0], DiskBox[{-3, 2}, 3]}, 
   {RGBColor[0.5, 0, 0.5], DiskBox[{2, 0.75}, 2.5]}, 
   {RGBColor[0.87, 0.94, 1], Thickness[Large], Dashing[{Small, Small}], 
    LineBox[{{-3, 2}, {2, 0.75}}]}},
  Frame->True,
  GridLines->Automatic]], "Output",
 CellChangeTimes->{3.66283756225987*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Fireflies", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, 
   3.662835105929646*^9, {3.662837214428151*^9, 3.6628372156671743`*^9}}],

Cell[TextData[{
 "Suppose we want two fireflies to light up when they come near to one \
another. We can use the ",
 StyleBox["EuclideanDistance",
  FontWeight->"Bold"],
 " and an ",
 StyleBox["If",
  FontWeight->"Bold"],
 " statement to program this behaviour."
}], "Text",
 CellChangeTimes->{{3.66283553843184*^9, 3.662835572369781*^9}, {
  3.662835642728084*^9, 3.662835644854085*^9}, {3.6628372743512783`*^9, 
  3.6628372970808907`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"drawFirefly", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], ",", "lit_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Lighter", "[", "Gray", "]"}], ",", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "+", "1"}], ",", "y"}], "}"}], ",", ".6"}], "]"}], ",", 
    RowBox[{"Rotate", "[", 
     RowBox[{
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"y", "+", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".3", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"45", "Degree"}]}], "]"}], ",", 
    RowBox[{"Thickness", "[", ".005", "]"}], ",", 
    RowBox[{"BezierCurve", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "+", "1.5"}], ",", "y"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "+", ".5"}], ",", 
         RowBox[{"y", "+", ".5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "+", ".8"}], ",", 
         RowBox[{"y", "+", ".8"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "+", "1.5"}], ",", 
         RowBox[{"y", "+", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.2", ",", ".8"}], "}"}]}], "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{"lit", ",", 
      RowBox[{"Lighter", "[", "Green", "]"}], ",", 
      RowBox[{"Darker", "[", "Green", "]"}]}], "]"}], ",", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", ".6"}], "}"}]}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.662836215768605*^9, 3.66283630156238*^9}, {
  3.662836361554294*^9, 3.6628363671210423`*^9}, {3.662836445147646*^9, 
  3.6628364856524267`*^9}}],

Cell["Here is our firefly, unlit and lit", "Text",
 CellChangeTimes->{{3.662836559999909*^9, 3.662836577901264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"drawFirefly", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5"}], "}"}], ",", "False"}], "]"}], ",", 
     RowBox[{"drawFirefly", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "5"}], "}"}], ",", "True"}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662836500395258*^9, 3.662836557921031*^9}, 
   3.662837642229043*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
    DiskBox[{6, 5}, 0.6], 
    GeometricTransformationBox[
     DiskBox[{5, 6}, {0.3, 1.}], {{{
      0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
      0.7071067811865475}}, Center}], 
    {Thickness[0.005], 
     BezierCurveBox[{{6.5, 5}, {5.5, 5.5}, {5.8, 5.8}, {6.5, 6}}], 
     DiskBox[{5, 5}, {1.2, 0.8}], 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      DiskBox[{5, 5}, {1., 0.6}]}}}, 
   {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
    DiskBox[{9, 5}, 0.6], 
    GeometricTransformationBox[
     DiskBox[{8, 6}, {0.3, 1.}], {{{
      0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
      0.7071067811865475}}, Center}], 
    {Thickness[0.005], 
     BezierCurveBox[{{9.5, 5}, {8.5, 5.5}, {8.8, 5.8}, {9.5, 6}}], 
     DiskBox[{8, 5}, {1.2, 0.8}], 
     {RGBColor[
       NCache[
        Rational[1, 3], 0.3333333333333333], 1, 
       NCache[
        Rational[1, 3], 0.3333333333333333]], DiskBox[{8, 5}, {1., 0.6}]}}}},
  Frame->True,
  GridLines->Automatic]], "Output",
 CellChangeTimes->{3.662836580519978*^9, 3.662837642579739*^9}]
}, Open  ]],

Cell[TextData[{
 "Now we can use a ",
 StyleBox["Manipulate",
  FontWeight->"Bold"],
 " to have one of them fly towards another. When the distance between them \
drops below a threshold (5 units in this case) they both light up."
}], "Text",
 CellChangeTimes->{{3.6628366074966307`*^9, 3.662836636307279*^9}, {
  3.6628368134074697`*^9, 3.6628368176702433`*^9}, {3.662837159425297*^9, 
  3.662837161399281*^9}, {3.662837622641149*^9, 3.662837634413208*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Darker", "[", "Gray", "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"22", ",", "10"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"EuclideanDistance", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"13", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "7"}], "}"}]}], "]"}], "<", "5"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"drawFirefly", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"13", ",", "3"}], "}"}], ",", "True"}], "]"}], ",", 
          RowBox[{"drawFirefly", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "7"}], "}"}], ",", "True"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"drawFirefly", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"13", ",", "3"}], "}"}], ",", "False"}], "]"}], ",", 
          RowBox[{"drawFirefly", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "7"}], "}"}], ",", "False"}], "]"}]}], "}"}]}],
        "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662835670003662*^9, 3.6628356833845873`*^9}, {
  3.662835810971567*^9, 3.6628362059311*^9}, {3.662836312881586*^9, 
  3.66283635015457*^9}, {3.662836380813504*^9, 3.662836401978867*^9}, {
  3.6628366439234753`*^9, 3.66283676728719*^9}, {3.662836806657517*^9, 
  3.662836844330714*^9}, {3.662836948666108*^9, 3.662837076043103*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 1, 20}}, Typeset`size$$ = {450., {99., 107.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$97484$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$97484$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         Darker[Gray], 
         Rectangle[{-1, 0}, {22, 10}], 
         If[EuclideanDistance[{13, 3}, {$CellContext`x$$, 7}] < 5, {
           $CellContext`drawFirefly[{13, 3}, True], 
           $CellContext`drawFirefly[{$CellContext`x$$, 7}, True]}, {
           $CellContext`drawFirefly[{13, 3}, False], 
           $CellContext`drawFirefly[{$CellContext`x$$, 7}, False]}]}], 
      "Specifications" :> {{$CellContext`x$$, 1, 20}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{505., {151., 158.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.662835849897455*^9, {3.662835881813675*^9, 3.6628358857086143`*^9}, {
   3.6628359268316393`*^9, 3.6628359343809834`*^9}, {3.662836003778014*^9, 
   3.662836206289546*^9}, {3.662836352241232*^9, 3.662836402321373*^9}, {
   3.6628367180126677`*^9, 3.662836767650823*^9}, {3.6628368364734077`*^9, 
   3.662836844815083*^9}, {3.6628370508196783`*^9, 3.662837076522381*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["In-Class Activity", "Section",
 CellChangeTimes->{{3.647716402186221*^9, 3.647716405353856*^9}, {
  3.6583374723271*^9, 3.658337478437811*^9}}],

Cell[CellGroupData[{

Cell["\<\
Draw a picture using the Graphics and either the ListAnimate or Manipulate \
command. Include a conditional statement to dynamically change the behaviour \
of graphic elements.\
\>", "Subsection",
 CellChangeTimes->{{3.66045777809417*^9, 3.660457780906083*^9}, {
   3.660665069786047*^9, 3.660665104240719*^9}, 3.660665206629046*^9, {
   3.662044847753364*^9, 3.662044851199024*^9}, {3.6620480456092377`*^9, 
   3.662048047873332*^9}, {3.662788469103819*^9, 3.662788487571056*^9}, {
   3.662837238206911*^9, 3.66283725926501*^9}}],

Cell["NAME:", "Subsubsection",
 CellChangeTimes->{{3.658337538475717*^9, 3.658337539778943*^9}}],

Cell["STUDENT NUMBER:", "Subsubsection",
 CellChangeTimes->{{3.658337543114833*^9, 3.658337546026588*^9}}],

Cell["DATE:", "Subsubsection",
 CellChangeTimes->{{3.6583375490023537`*^9, 3.658337550162354*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Upload your notebook", "Section",
 CellChangeTimes->{{3.649950784924818*^9, 3.649950788859275*^9}}],

Cell["\<\
Don\[CloseCurlyQuote]t forget to upload a copy of your notebook for this day\
\[CloseCurlyQuote]s class to the OWL Site for the course\
\>", "Text",
 CellChangeTimes->{{3.649950792779258*^9, 3.649950818634288*^9}, {
  3.658337509093232*^9, 3.658337512508254*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1422, 1107},
WindowMargins->{{Automatic, 325}, {Automatic, 45}},
TaggingRules->{"SlideShow" -> True},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4299, 96, 75, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[5769, 146, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[20008, 601, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[48585, 1324, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[75032, 1929, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[82125, 2151, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[91609, 2413, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[92782, 2449, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 93666, 2479}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4299, 96, 75, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[4882, 120, 485, 10, 183, "Title"],
Cell[5370, 132, 362, 9, 99, "Subtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5769, 146, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[5858, 151, 159, 2, 80, "Section"],
Cell[6020, 155, 672, 20, 61, "Text"],
Cell[CellGroupData[{
Cell[6717, 179, 92, 1, 54, "Subsection"],
Cell[6812, 182, 365, 12, 37, "Text"],
Cell[CellGroupData[{
Cell[7202, 198, 171, 3, 35, "Input"],
Cell[7376, 203, 1424, 40, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8837, 248, 165, 3, 35, "Input"],
Cell[9005, 253, 1422, 40, 35, "Output"]
}, Open  ]],
Cell[10442, 296, 516, 20, 37, "Text"],
Cell[CellGroupData[{
Cell[10983, 320, 184, 4, 35, "Input"],
Cell[11170, 326, 1422, 40, 35, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12641, 372, 95, 1, 54, "Subsection"],
Cell[12739, 375, 370, 11, 61, "Text"],
Cell[CellGroupData[{
Cell[13134, 390, 239, 5, 36, "Input"],
Cell[13376, 397, 1422, 40, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14835, 442, 240, 5, 36, "Input"],
Cell[15078, 449, 1424, 40, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16539, 494, 241, 5, 36, "Input"],
Cell[16783, 501, 1422, 40, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18242, 546, 242, 5, 36, "Input"],
Cell[18487, 553, 1448, 40, 35, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20008, 601, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[20097, 606, 159, 2, 80, "Section"],
Cell[20259, 610, 572, 9, 61, "Text"],
Cell[CellGroupData[{
Cell[20856, 623, 1272, 33, 57, "Input"],
Cell[22131, 658, 824, 22, 558, "Output"]
}, Open  ]],
Cell[22970, 683, 553, 12, 61, "Text"],
Cell[23526, 697, 2618, 76, 99, "Input"],
Cell[26147, 775, 130, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[26302, 780, 630, 19, 36, "Input"],
Cell[26935, 801, 2009, 57, 290, "Output"]
}, Open  ]],
Cell[28959, 861, 242, 9, 37, "Text"],
Cell[29204, 872, 1472, 41, 78, "Input"],
Cell[CellGroupData[{
Cell[30701, 917, 215, 4, 36, "Input"],
Cell[30919, 923, 17605, 394, 561, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48585, 1324, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[48674, 1329, 155, 2, 80, "Section"],
Cell[48832, 1333, 442, 9, 61, "Text"],
Cell[CellGroupData[{
Cell[49299, 1346, 106, 1, 54, "Subsection"],
Cell[49408, 1349, 415, 7, 37, "Text"],
Cell[49826, 1358, 1367, 39, 78, "Input"],
Cell[51196, 1399, 2356, 65, 99, "Input"],
Cell[53555, 1466, 803, 20, 57, "Input"],
Cell[54361, 1488, 180, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[54566, 1494, 873, 20, 36, "Input"],
Cell[55442, 1516, 1214, 23, 370, "Output"]
}, Open  ]],
Cell[56671, 1542, 627, 16, 61, "Text"],
Cell[57301, 1560, 1370, 34, 78, "Input"],
Cell[CellGroupData[{
Cell[58696, 1598, 246, 4, 35, "Input"],
Cell[58945, 1604, 16014, 317, 317, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75032, 1929, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[75121, 1934, 130, 2, 80, "Section"],
Cell[75254, 1938, 696, 12, 85, "Text"],
Cell[75953, 1952, 253, 5, 37, "Text"],
Cell[CellGroupData[{
Cell[76231, 1961, 695, 19, 36, "Input"],
Cell[76929, 1982, 287, 7, 256, "Output"]
}, Open  ]],
Cell[77231, 1992, 330, 6, 37, "Text"],
Cell[CellGroupData[{
Cell[77586, 2002, 279, 8, 35, "Input"],
Cell[77868, 2012, 72, 1, 35, "Output"]
}, Open  ]],
Cell[77955, 2016, 385, 7, 37, "Text"],
Cell[CellGroupData[{
Cell[78365, 2027, 395, 12, 35, "Input"],
Cell[78763, 2041, 94, 1, 35, "Output"]
}, Open  ]],
Cell[78872, 2045, 132, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[79029, 2050, 750, 20, 36, "Input"],
Cell[79782, 2072, 300, 7, 320, "Output"]
}, Open  ]],
Cell[80097, 2082, 171, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[80293, 2090, 215, 7, 35, "Input"],
Cell[80511, 2099, 87, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80635, 2105, 1094, 29, 57, "Input"],
Cell[81732, 2136, 332, 8, 320, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82125, 2151, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[82214, 2156, 170, 2, 80, "Section"],
Cell[82387, 2160, 441, 12, 37, "Text"],
Cell[82831, 2174, 2047, 62, 99, "Input"],
Cell[84881, 2238, 116, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[85022, 2243, 575, 16, 36, "Input"],
Cell[85600, 2261, 1252, 31, 268, "Output"]
}, Open  ]],
Cell[86867, 2295, 457, 9, 61, "Text"],
Cell[CellGroupData[{
Cell[87349, 2308, 1925, 52, 78, "Input"],
Cell[89277, 2362, 2271, 44, 329, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91609, 2413, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[91698, 2418, 149, 2, 80, "Section"],
Cell[CellGroupData[{
Cell[91872, 2424, 540, 9, 85, "Subsection"],
Cell[92415, 2435, 96, 1, 43, "Subsubsection"],
Cell[92514, 2438, 106, 1, 34, "Subsubsection"],
Cell[92623, 2441, 98, 1, 34, "Subsubsection"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92782, 2449, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[92871, 2454, 105, 1, 80, "Section"],
Cell[92979, 2457, 273, 5, 37, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
