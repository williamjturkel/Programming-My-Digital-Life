(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    437658,      10986]
NotebookOptionsPosition[    430069,      10735]
NotebookOutlinePosition[    431285,      10773]
CellTagsIndexPosition[    431204,      10768]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[2, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCEFxAJADBL8//8/
Qfzo0SP2GzduCF29elXs/Pnz0sgYn747d+5wA9VoArE/EB8B4uPoGJu+Fy9e
MF+4cEENKB8AxBeB+AMQ/wXif+gYi1tBdvoB8QUg/ghV9x8XRtb7/PlzFqje
t1D7cOrDpv/ixYvqUHuJ0ousHxpWAVA3E6UXWT80nC8S8i82/Q8ePOAgx26Y
/uvXrwsD2UdJ8Tey/kuXLolD0wNJbofpB6YVSUr0n4ek5QHTT6n7KQ0/SuOP
0vRDafqlRv6BxgPZ+Ret/HhHrBl4yi9QWHwiFB7Yyk+QO6B+CTxPYvmJjG/f
vs17nozyG1f9cR6t7gBhAPeiQ4A=
         "], {{0, 26}, {16, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2d9OVFcUB2DSNmkfQRFEiRQ1gCK1vW4fwT6BJu1tE9uk8fUUERE9aECC
qLGYEmKkErWxtont2mGdcDLVOpNgZijfJB9hzp+99j6zb9b5Hb3ww7nvP+rr
6/vxs/hz7vzPX1+8eP7St5/El28u/fTdhY/jn/6w8GlfXzlYVdWhDgyEwXT4
HQYbBho6qQMAAOxt/Q0HWxxo0TzX3xij7juGwpFwNAyHY2EkfB6OhxPhZBgL
42EinAqnw2SYSl+Es+HL9FWb6uvP5hj1eJNZ41TWHM85nMw5Hc85juSch3MN
R3JNdf/UfGbtPqf6WdW6/XsDAADsV7vd/7b2vqPV2/veuuc9k6Za1Mfr3vVt
feto9e+eVb9KL2tmz81M+n25dadZ9bU2zYXbYSmshNXwoOF+uJfn7obFcKfa
/twMN8L1MNtBTQAAYO+ZSVfTdLqSLreoj0/n9eXe0jeUHmQ+3AoL1XZ/UfqR
5Wq77yg9yMPwS3gcfg0b4Ul4Gn4LW+F5eBl+D6/CH+F1+DP99Q71+dd5z6sc
42WOuZU1nmbNjZzD45zTw5zjSs55KdewkGuazzXONp5Xu8+pflb185rpgd8d
AABgv/kQ/W/J4krGVvrIkruVDO5RWAvr1U7fuxmeVTt9b/Ei1d+38prNaqdv
Xc+xHuXY97LWYtbWr9Jryj4sGXPJmkvmXD7l/UrZsyWTLu9dyj4u72Ca2fVq
nivvY8renuug5ps2/b2L2q0JAADwX3azT/kQuv18AAAA2Pv0rOxn3djz3X6f
BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADsHW/a1I2aAAAAAAAAsJ91OyOEburGnr/W
prlwOyyFlbAaHjTcD/fy3N2wGO5U25+b4Ua4HmY7qAkAAAAAAAC9aCZdTdPp
Srrcoj4+ndeXe0tuVjK4+XCr2s7iSsa2XG3nbiWDexTWwnrYCE/CZngWtsLz
9CLV37fyms28ZyPHWMsxH2SN5ax5O+cwn3Oabayv3XXVa6vXN9MDvxN7W9mH
JWMuWXPJnMunZNBlz5ZMumTTZR+XrLqZXa/muZJtl70910HNQx0YCIPp8DsM
Ngw0dFIHAAAAAAAAel1/w8EWB1o0z/U3xqhzt6FwNAyHY2EkjIYT4WQYC+Nh
IpwOk+FMmmpRH5/Mayfy3rEc60SOPZK1hrP2ULWT9zXX2O666rXVuv378P/S
zJ6bmfT7cuuOsup/AFmW9vs=
         "], {{0, 26}, {2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lstOwkAUhhthQUJcuUBl5cr4GPoABvEJINGtCZoYng4Il4Z7gXAJYUHY
QAi3GlYQPZ5/4pCm0pYC2uSDaXvmn5lzzpzpVfQl/HyiKMqrj3/CkffbWCwS
f/TyzV387Snq4cYlc87gYbVaDbpB07SLRqMR6Pf7PiJSnOA+6h7kmBBz0+12
Tx30v/bgk9GZOvPAa7oejUYeC306AIz1wWjM/WAw8B9ZX4L1TDHGcDj02ulX
KpUNbt79jKHBV1b66Fcul3fCYgzEJNTr9fxmfaldKpWoUChQPp8X/8ViUWB8
BhuLMRCPGvJqmz76QWOxWFCtVqNsNku5XE6AdqfToclkImxga7cGuT/M+uw/
ms/ntF6vqdlsUjKZFKCNC/pynTZxyLbb7bNt/sHcMpkMzWYzoVev1wW4xuOx
WAdsbGIAH6ncJ7BNH/6FRjqdJl3XSV7T6VSsA76CDWxt9oSKOmLOH/RBLKEP
LVVVN/qJRGKjDxsnfSZoN3/4CPNfrVa/5n+IvtH/iDHu9/G/2T/G/JT5A41U
KiXm3Wq1xBhcx5zy0zK+Mj+Xy6XIf5n7EuQ/9sYh+Wneqy73r+3+2rX2OPh+
a31wqpHG5xbatvXtCDjW5wO1Z9UdzheXyPMRPrc6H49yvpvn/Y/fJ3/6ffUN
AyH/6w==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{3.647361175465108*^9},
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell["\<\
Notebook 07:
Colour\
\>", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.647331852839075*^9, 3.647331861295168*^9}, {
   3.647331922221755*^9, 3.647331924532915*^9}, {3.647332658962614*^9, 
   3.64733266480881*^9}, {3.6473611327373047`*^9, 3.647361139759391*^9}, {
   3.647448943135475*^9, 3.6474489472294493`*^9}, {3.658337416821965*^9, 
   3.65833742904038*^9}, {3.658337677781981*^9, 3.658337703010659*^9}, {
   3.660665144288293*^9, 3.660665148319092*^9}}],

Cell[TextData[{
 "William J Turkel, ",
 StyleBox["wturkel@uwo.ca",
  FontSlant->"Italic",
  FontColor->RGBColor[
   0.396078431372549, 0.596078431372549, 0.796078431372549]],
 "\nDigital Humanities 1011B"
}], "Subtitle",
 CellChangeTimes->{{3.647331955723979*^9, 3.6473319708190517`*^9}, 
   3.647332103720562*^9, {3.6583374336085033`*^9, 3.658337439311952*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Named colours", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.661451971867436*^9, 3.661451974457233*^9}}],

Cell[TextData[{
 "We have seen that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " understands the names of some colours, like LightBlue and Brown"
}], "Text",
 CellChangeTimes->{{3.661451976664804*^9, 3.661451995757883*^9}, {
  3.661452099191176*^9, 3.661452110932569*^9}, {3.661452562097096*^9, 
  3.661452570375023*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"LightBlue", ",", 
     RowBox[{"Triangle", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", "Brown", ",", 
     "Thick", ",", "Dashed", ",", " ", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661451999837078*^9, 3.661452053221538*^9}, {
  3.661452085169684*^9, 3.661452168883862*^9}, {3.6616259203466187`*^9, 
  3.661625921144492*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.87, 0.94, 1], 
    TagBox[PolygonBox[{{0, 0}, {2, 3}, {4, -1}}],
     "Triangle"]}, 
   {RGBColor[0.6, 0.4, 0.2], Thickness[Large], Dashing[{Small, Small}], 
    LineBox[{{0, 0}, {4, -1}}]}},
  ImageSize->Small]], "Output",
 CellChangeTimes->{{3.66145204277444*^9, 3.661452054163307*^9}, 
   3.661452094901539*^9, {3.661452151476358*^9, 3.66145216970957*^9}, 
   3.661621516493075*^9, 3.6616259216171293`*^9}]
}, Open  ]],

Cell["\<\
Here are colour chips for all of the named colours and their lighter variants\
\
\>", "Text",
 CellChangeTimes->{{3.661452599419191*^9, 3.66145261376046*^9}, {
  3.661452747500956*^9, 3.6614527548110647`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"namedColours", "=", 
  RowBox[{"{", 
   RowBox[{
   "Red", ",", "Blue", ",", "Green", ",", "Black", ",", "White", ",", "Gray", 
    ",", "Cyan", ",", "Magenta", ",", "Yellow", ",", "Brown", ",", "Orange", 
    ",", "Pink", ",", "Purple"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6614527405587473`*^9, 3.661452810518725*^9}, {
  3.661455044989313*^9, 3.661455048003766*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "GrayLevel[0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->GrayLevel[0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "GrayLevel[1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->GrayLevel[0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "GrayLevel[0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6, 0.4, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6, 0.4, 0.2]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.6, 0.4, 0.2]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6, 0.4, 0.2],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.33333333333333337`, 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5, 0, 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 0, 0.5],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.661452743716176*^9, 3.661452812066761*^9, 
  3.661455048616437*^9, 3.661621516600968*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"namedLightColours", "=", 
  RowBox[{"{", 
   RowBox[{
   "LightRed", ",", "LightBlue", ",", "LightGreen", ",", "LightGray", ",", 
    "LightCyan", ",", "LightMagenta", ",", "LightYellow", ",", "LightBrown", 
    ",", "LightOrange", ",", "LightPink", ",", "LightPurple"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6614527405587473`*^9, 3.661452851727726*^9}, {
  3.661455051171528*^9, 3.661455054362907*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.85, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.5666666666666667, 0.5666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.85, 0.85]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.85, 0.85]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.85, 0.85],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.87, 0.94, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5800000000000001, 0.6266666666666667, 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.87, 0.94, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.87, 0.94, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.87, 0.94, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.88, 1, 0.88], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5866666666666667, 0.6666666666666666, 0.5866666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.88, 1, 0.88]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.88, 1, 0.88]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.88, 1, 0.88],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0.85], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->GrayLevel[0.5666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "GrayLevel[0.85]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.85]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0.85],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6000000000000001, 0.6666666666666666, 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9, 1, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.9, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9, 1, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.9, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6000000000000001, 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.9, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.9, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6666666666666666, 0.5666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0.85]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.85]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0.85],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.94, 0.91, 0.88], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6266666666666667, 0.6066666666666667, 0.5866666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.94, 0.91, 0.88]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.94, 0.91, 0.88]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.94, 0.91, 0.88],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.9, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6000000000000001, 0.5333333333333334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.9, 0.8]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0.8]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.9, 0.8],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.925, 0.925], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6166666666666667, 0.6166666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.925, 0.925]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.925, 0.925]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.925, 0.925],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.94, 0.88, 0.94], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6266666666666667, 0.5866666666666667, 0.6266666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.94, 0.88, 0.94]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.94, 0.88, 0.94]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.94, 0.88, 0.94],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.661452853253377*^9, 3.66145505496803*^9, 
  3.661621516631604*^9}]
}, Open  ]],

Cell[TextData[{
 "When you have a list of named colours like this, you can use ",
 StyleBox["RandomChoice",
  FontWeight->"Bold"],
 " to choose one with equal probability"
}], "Text",
 CellChangeTimes->{{3.6614550189525623`*^9, 3.6614550276149693`*^9}, {
  3.661455069313246*^9, 3.661455078175284*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", "namedColours", "]"}]], "Input",
 CellChangeTimes->{{3.661455040633275*^9, 3.661455066345861*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[1, 1, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1, 1, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.661455066653184*^9, 3.661621516666108*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Randomly coloured objects", "Subsection",
 CellChangeTimes->{{3.661624937085758*^9, 3.661624945419739*^9}}],

Cell["\<\
Examples of graphics created by randomly choosing colours of rotated and \
translated objects\
\>", "Text",
 CellChangeTimes->{{3.661455603008573*^9, 3.6614556170777693`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomChoice", "[", "namedColours", "]"}], ",", 
       RowBox[{"Translate", "[", 
        RowBox[{
         RowBox[{"Rotate", "[", 
          RowBox[{
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{".3", ",", "5"}], "}"}]}], "]"}], ",", 
           RowBox[{"r", "*", "5", "Degree"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", "/", "2"}], ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "120"}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661455081756081*^9, 3.661455262075614*^9}, {
  3.6614553531577997`*^9, 3.661455362499942*^9}, {3.6614554501523323`*^9, 
  3.661455528123455*^9}, {3.661625937639044*^9, 3.6616259422063293`*^9}, {
  3.6616264641101437`*^9, 3.66162646458068*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{1, 0}, {0, 1}}, Center}], {0, 0}]}, 
   {RGBColor[1, 0.5, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.9961946980917455, -0.08715574274765817}, {0.08715574274765817, 
       0.9961946980917455}}, Center}], 
     NCache[{Rational[1, 2], 0}, {0.5, 0}]]}, 
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.984807753012208, -0.17364817766693033`}, {0.17364817766693033`, 
       0.984807753012208}}, Center}], {1, 0}]}, 
   {RGBColor[0, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.9659258262890682, -0.2588190451025207}, {0.2588190451025207, 
       0.9659258262890682}}, Center}], 
     NCache[{Rational[3, 2], 0}, {1.5, 0}]]}, 
   {RGBColor[1, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.9396926207859084, -0.3420201433256687}, {0.3420201433256687, 
       0.9396926207859084}}, Center}], {2, 0}]}, 
   {RGBColor[0, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.9063077870366499, -0.42261826174069944`}, {0.42261826174069944`, 
       0.9063077870366499}}, Center}], 
     NCache[{Rational[5, 2], 0}, {2.5, 0}]]}, 
   {RGBColor[0, 1, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.8660254037844386, -0.5}, {0.5, 
       0.8660254037844386}}, Center}], {3, 0}]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.8191520442889918, -0.573576436351046}, {0.573576436351046, 
       0.8191520442889918}}, Center}], 
     NCache[{Rational[7, 2], 0}, {3.5, 0}]]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
       0.766044443118978}}, Center}], {4, 0}]}, 
   {RGBColor[1, 0.5, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
       0.7071067811865475}}, Center}], 
     NCache[{Rational[9, 2], 0}, {4.5, 0}]]}, 
   {RGBColor[1, 0.5, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.6427876096865393, -0.766044443118978}, {0.766044443118978, 
       0.6427876096865393}}, Center}], {5, 0}]}, 
   {GrayLevel[0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.573576436351046, -0.8191520442889918}, {0.8191520442889918, 
       0.573576436351046}}, Center}], 
     NCache[{Rational[11, 2], 0}, {5.5, 0}]]}, 
   {RGBColor[1, 0.5, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.5, -0.8660254037844386}, {
       0.8660254037844386, 0.5}}, Center}], {6, 0}]}, 
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.42261826174069944`, -0.9063077870366499}, {0.9063077870366499, 
       0.42261826174069944`}}, Center}], 
     NCache[{Rational[13, 2], 0}, {6.5, 0}]]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.3420201433256687, -0.9396926207859084}, {0.9396926207859084, 
       0.3420201433256687}}, Center}], {7, 0}]}, 
   {RGBColor[0, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.2588190451025207, -0.9659258262890682}, {0.9659258262890682, 
       0.2588190451025207}}, Center}], 
     NCache[{Rational[15, 2], 0}, {7.5, 0}]]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.17364817766693033`, -0.984807753012208}, {0.984807753012208, 
       0.17364817766693033`}}, Center}], {8, 0}]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.08715574274765817, -0.9961946980917455}, {0.9961946980917455, 
       0.08715574274765817}}, Center}], 
     NCache[{Rational[17, 2], 0}, {8.5, 0}]]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0, -1}, {1, 0}}, Center}], {9, 
     0}]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.08715574274765817, \
-0.9961946980917455}, {0.9961946980917455, -0.08715574274765817}}, Center}], 
     NCache[{Rational[19, 2], 0}, {9.5, 0}]]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.17364817766693033`, \
-0.984807753012208}, {0.984807753012208, -0.17364817766693033`}}, Center}], {
     10, 0}]}, 
   {RGBColor[0, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.2588190451025207, \
-0.9659258262890682}, {0.9659258262890682, -0.2588190451025207}}, Center}], 
     NCache[{Rational[21, 2], 0}, {10.5, 0}]]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.3420201433256687, \
-0.9396926207859084}, {0.9396926207859084, -0.3420201433256687}}, Center}], {
     11, 0}]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.42261826174069944`, \
-0.9063077870366499}, {0.9063077870366499, -0.42261826174069944`}}, Center}], 
     NCache[{Rational[23, 2], 0}, {11.5, 0}]]}, 
   {RGBColor[1, 0.5, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.5, -0.8660254037844386}, {
       0.8660254037844386, -0.5}}, Center}], {12, 0}]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.573576436351046, \
-0.8191520442889918}, {0.8191520442889918, -0.573576436351046}}, Center}], 
     NCache[{Rational[25, 2], 0}, {12.5, 0}]]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.6427876096865393, \
-0.766044443118978}, {0.766044443118978, -0.6427876096865393}}, Center}], {13,
      0}]}, 
   {RGBColor[0, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.7071067811865475, \
-0.7071067811865475}, {0.7071067811865475, -0.7071067811865475}}, Center}], 
     NCache[{Rational[27, 2], 0}, {13.5, 0}]]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.766044443118978, \
-0.6427876096865393}, {0.6427876096865393, -0.766044443118978}}, Center}], {
     14, 0}]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.8191520442889918, \
-0.573576436351046}, {0.573576436351046, -0.8191520442889918}}, Center}], 
     NCache[{Rational[29, 2], 0}, {14.5, 0}]]}, 
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.8660254037844386, -0.5}, {
       0.5, -0.8660254037844386}}, Center}], {15, 0}]}, 
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9063077870366499, \
-0.42261826174069944`}, {0.42261826174069944`, -0.9063077870366499}}, 
       Center}], NCache[{Rational[31, 2], 0}, {15.5, 0}]]}, 
   {GrayLevel[1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9396926207859084, \
-0.3420201433256687}, {0.3420201433256687, -0.9396926207859084}}, Center}], {
     16, 0}]}, 
   {RGBColor[1, 0.5, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9659258262890682, \
-0.2588190451025207}, {0.2588190451025207, -0.9659258262890682}}, Center}], 
     NCache[{Rational[33, 2], 0}, {16.5, 0}]]}, 
   {RGBColor[1, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.984807753012208, \
-0.17364817766693033`}, {0.17364817766693033`, -0.984807753012208}}, 
       Center}], {17, 0}]}, 
   {RGBColor[1, 0.5, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9961946980917455, \
-0.08715574274765817}, {0.08715574274765817, -0.9961946980917455}}, Center}], 
     NCache[{Rational[35, 2], 0}, {17.5, 0}]]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-1, 0}, {0, -1}}, Center}], {18, 
     0}]}, 
   {GrayLevel[0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9961946980917455, 
       0.08715574274765817}, {-0.08715574274765817, -0.9961946980917455}}, 
       Center}], NCache[{Rational[37, 2], 0}, {18.5, 0}]]}, 
   {RGBColor[1, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.984807753012208, 
       0.17364817766693033`}, {-0.17364817766693033`, -0.984807753012208}}, 
       Center}], {19, 0}]}, 
   {RGBColor[1, 0.5, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9659258262890682, 
       0.2588190451025207}, {-0.2588190451025207, -0.9659258262890682}}, 
       Center}], NCache[{Rational[39, 2], 0}, {19.5, 0}]]}, 
   {RGBColor[1, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9396926207859084, 
       0.3420201433256687}, {-0.3420201433256687, -0.9396926207859084}}, 
       Center}], {20, 0}]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9063077870366499, 
       0.42261826174069944`}, {-0.42261826174069944`, -0.9063077870366499}}, 
       Center}], NCache[{Rational[41, 2], 0}, {20.5, 0}]]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.8660254037844386, 
       0.5}, {-0.5, -0.8660254037844386}}, Center}], {21, 0}]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.8191520442889918, 
       0.573576436351046}, {-0.573576436351046, -0.8191520442889918}}, 
       Center}], NCache[{Rational[43, 2], 0}, {21.5, 0}]]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.766044443118978, 
       0.6427876096865393}, {-0.6427876096865393, -0.766044443118978}}, 
       Center}], {22, 0}]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.7071067811865475, 
       0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}, 
       Center}], NCache[{Rational[45, 2], 0}, {22.5, 0}]]}, 
   {GrayLevel[0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.6427876096865393, 
       0.766044443118978}, {-0.766044443118978, -0.6427876096865393}}, 
       Center}], {23, 0}]}, 
   {GrayLevel[1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.573576436351046, 
       0.8191520442889918}, {-0.8191520442889918, -0.573576436351046}}, 
       Center}], NCache[{Rational[47, 2], 0}, {23.5, 0}]]}, 
   {RGBColor[1, 0.5, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.5, 
       0.8660254037844386}, {-0.8660254037844386, -0.5}}, Center}], {24, 0}]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.42261826174069944`, 
       0.9063077870366499}, {-0.9063077870366499, -0.42261826174069944`}}, 
       Center}], NCache[{Rational[49, 2], 0}, {24.5, 0}]]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.3420201433256687, 
       0.9396926207859084}, {-0.9396926207859084, -0.3420201433256687}}, 
       Center}], {25, 0}]}, 
   {GrayLevel[0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.2588190451025207, 
       0.9659258262890682}, {-0.9659258262890682, -0.2588190451025207}}, 
       Center}], NCache[{Rational[51, 2], 0}, {25.5, 0}]]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.17364817766693033`, 
       0.984807753012208}, {-0.984807753012208, -0.17364817766693033`}}, 
       Center}], {26, 0}]}, 
   {RGBColor[1, 0.5, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.08715574274765817, 
       0.9961946980917455}, {-0.9961946980917455, -0.08715574274765817}}, 
       Center}], NCache[{Rational[53, 2], 0}, {26.5, 0}]]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0, 1}, {-1, 0}}, Center}], {27, 0}]}, 
   {RGBColor[1, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.08715574274765817, 
       0.9961946980917455}, {-0.9961946980917455, 0.08715574274765817}}, 
       Center}], NCache[{Rational[55, 2], 0}, {27.5, 0}]]}, 
   {RGBColor[1, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.17364817766693033`, 
       0.984807753012208}, {-0.984807753012208, 0.17364817766693033`}}, 
       Center}], {28, 0}]}, 
   {RGBColor[1, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.2588190451025207, 
       0.9659258262890682}, {-0.9659258262890682, 0.2588190451025207}}, 
       Center}], NCache[{Rational[57, 2], 0}, {28.5, 0}]]}, 
   {RGBColor[1, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.3420201433256687, 
       0.9396926207859084}, {-0.9396926207859084, 0.3420201433256687}}, 
       Center}], {29, 0}]}, 
   {RGBColor[1, 0.5, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.42261826174069944`, 
       0.9063077870366499}, {-0.9063077870366499, 0.42261826174069944`}}, 
       Center}], NCache[{Rational[59, 2], 0}, {29.5, 0}]]}, 
   {RGBColor[1, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.5, 
       0.8660254037844386}, {-0.8660254037844386, 0.5}}, Center}], {30, 
     0}]}, 
   {RGBColor[1, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.573576436351046, 
       0.8191520442889918}, {-0.8191520442889918, 0.573576436351046}}, 
       Center}], NCache[{Rational[61, 2], 0}, {30.5, 0}]]}, 
   {RGBColor[0, 1, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.6427876096865393, 
       0.766044443118978}, {-0.766044443118978, 0.6427876096865393}}, 
       Center}], {31, 0}]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.7071067811865475, 
       0.7071067811865475}, {-0.7071067811865475, 0.7071067811865475}}, 
       Center}], NCache[{Rational[63, 2], 0}, {31.5, 0}]]}, 
   {RGBColor[0, 1, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.766044443118978, 
       0.6427876096865393}, {-0.6427876096865393, 0.766044443118978}}, 
       Center}], {32, 0}]}, 
   {GrayLevel[0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.8191520442889918, 
       0.573576436351046}, {-0.573576436351046, 0.8191520442889918}}, 
       Center}], NCache[{Rational[65, 2], 0}, {32.5, 0}]]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.8660254037844386, 0.5}, {-0.5, 
       0.8660254037844386}}, Center}], {33, 0}]}, 
   {RGBColor[1, 0.5, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.9063077870366499, 
       0.42261826174069944`}, {-0.42261826174069944`, 0.9063077870366499}}, 
       Center}], NCache[{Rational[67, 2], 0}, {33.5, 0}]]}, 
   {RGBColor[1, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.9396926207859084, 
       0.3420201433256687}, {-0.3420201433256687, 0.9396926207859084}}, 
       Center}], {34, 0}]}, 
   {RGBColor[0, 1, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.9659258262890682, 
       0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
       Center}], NCache[{Rational[69, 2], 0}, {34.5, 0}]]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.984807753012208, 
       0.17364817766693033`}, {-0.17364817766693033`, 0.984807753012208}}, 
       Center}], {35, 0}]}, 
   {GrayLevel[0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.9961946980917455, 
       0.08715574274765817}, {-0.08715574274765817, 0.9961946980917455}}, 
       Center}], NCache[{Rational[71, 2], 0}, {35.5, 0}]]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{1, 0}, {0, 1}}, Center}], {36, 
     0}]}, 
   {GrayLevel[0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.9961946980917455, -0.08715574274765817}, {0.08715574274765817, 
       0.9961946980917455}}, Center}], 
     NCache[{Rational[73, 2], 0}, {36.5, 0}]]}, 
   {RGBColor[1, 0.5, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.984807753012208, -0.17364817766693033`}, {0.17364817766693033`, 
       0.984807753012208}}, Center}], {37, 0}]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.9659258262890682, -0.2588190451025207}, {0.2588190451025207, 
       0.9659258262890682}}, Center}], 
     NCache[{Rational[75, 2], 0}, {37.5, 0}]]}, 
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.9396926207859084, -0.3420201433256687}, {0.3420201433256687, 
       0.9396926207859084}}, Center}], {38, 0}]}, 
   {RGBColor[1, 0.5, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.9063077870366499, -0.42261826174069944`}, {0.42261826174069944`, 
       0.9063077870366499}}, Center}], 
     NCache[{Rational[77, 2], 0}, {38.5, 0}]]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.8660254037844386, -0.5}, {0.5, 
       0.8660254037844386}}, Center}], {39, 0}]}, 
   {RGBColor[0, 1, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.8191520442889918, -0.573576436351046}, {0.573576436351046, 
       0.8191520442889918}}, Center}], 
     NCache[{Rational[79, 2], 0}, {39.5, 0}]]}, 
   {RGBColor[1, 0.5, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
       0.766044443118978}}, Center}], {40, 0}]}, 
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
       0.7071067811865475}}, Center}], 
     NCache[{Rational[81, 2], 0}, {40.5, 0}]]}, 
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.6427876096865393, -0.766044443118978}, {0.766044443118978, 
       0.6427876096865393}}, Center}], {41, 0}]}, 
   {RGBColor[0, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.573576436351046, -0.8191520442889918}, {0.8191520442889918, 
       0.573576436351046}}, Center}], 
     NCache[{Rational[83, 2], 0}, {41.5, 0}]]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0.5, -0.8660254037844386}, {
       0.8660254037844386, 0.5}}, Center}], {42, 0}]}, 
   {RGBColor[0, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.42261826174069944`, -0.9063077870366499}, {0.9063077870366499, 
       0.42261826174069944`}}, Center}], 
     NCache[{Rational[85, 2], 0}, {42.5, 0}]]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.3420201433256687, -0.9396926207859084}, {0.9396926207859084, 
       0.3420201433256687}}, Center}], {43, 0}]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.2588190451025207, -0.9659258262890682}, {0.9659258262890682, 
       0.2588190451025207}}, Center}], 
     NCache[{Rational[87, 2], 0}, {43.5, 0}]]}, 
   {RGBColor[1, 0.5, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.17364817766693033`, -0.984807753012208}, {0.984807753012208, 
       0.17364817766693033`}}, Center}], {44, 0}]}, 
   {RGBColor[1, 0.5, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{
       0.08715574274765817, -0.9961946980917455}, {0.9961946980917455, 
       0.08715574274765817}}, Center}], 
     NCache[{Rational[89, 2], 0}, {44.5, 0}]]}, 
   {GrayLevel[0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{0, -1}, {1, 0}}, Center}], {45, 0}]}, 
   {GrayLevel[1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.08715574274765817, \
-0.9961946980917455}, {0.9961946980917455, -0.08715574274765817}}, Center}], 
     NCache[{Rational[91, 2], 0}, {45.5, 0}]]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.17364817766693033`, \
-0.984807753012208}, {0.984807753012208, -0.17364817766693033`}}, Center}], {
     46, 0}]}, 
   {GrayLevel[0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.2588190451025207, \
-0.9659258262890682}, {0.9659258262890682, -0.2588190451025207}}, Center}], 
     NCache[{Rational[93, 2], 0}, {46.5, 0}]]}, 
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.3420201433256687, \
-0.9396926207859084}, {0.9396926207859084, -0.3420201433256687}}, Center}], {
     47, 0}]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.42261826174069944`, \
-0.9063077870366499}, {0.9063077870366499, -0.42261826174069944`}}, Center}], 
     NCache[{Rational[95, 2], 0}, {47.5, 0}]]}, 
   {RGBColor[1, 0.5, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.5, -0.8660254037844386}, {
       0.8660254037844386, -0.5}}, Center}], {48, 0}]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.573576436351046, \
-0.8191520442889918}, {0.8191520442889918, -0.573576436351046}}, Center}], 
     NCache[{Rational[97, 2], 0}, {48.5, 0}]]}, 
   {GrayLevel[1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.6427876096865393, \
-0.766044443118978}, {0.766044443118978, -0.6427876096865393}}, Center}], {49,
      0}]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.7071067811865475, \
-0.7071067811865475}, {0.7071067811865475, -0.7071067811865475}}, Center}], 
     NCache[{Rational[99, 2], 0}, {49.5, 0}]]}, 
   {GrayLevel[0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.766044443118978, \
-0.6427876096865393}, {0.6427876096865393, -0.766044443118978}}, Center}], {
     50, 0}]}, 
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.8191520442889918, \
-0.573576436351046}, {0.573576436351046, -0.8191520442889918}}, Center}], 
     NCache[{Rational[101, 2], 0}, {50.5, 0}]]}, 
   {RGBColor[0, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.8660254037844386, -0.5}, {
       0.5, -0.8660254037844386}}, Center}], {51, 0}]}, 
   {GrayLevel[0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9063077870366499, \
-0.42261826174069944`}, {0.42261826174069944`, -0.9063077870366499}}, 
       Center}], NCache[{Rational[103, 2], 0}, {51.5, 0}]]}, 
   {GrayLevel[0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9396926207859084, \
-0.3420201433256687}, {0.3420201433256687, -0.9396926207859084}}, Center}], {
     52, 0}]}, 
   {RGBColor[1, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9659258262890682, \
-0.2588190451025207}, {0.2588190451025207, -0.9659258262890682}}, Center}], 
     NCache[{Rational[105, 2], 0}, {52.5, 0}]]}, 
   {RGBColor[1, 0.5, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.984807753012208, \
-0.17364817766693033`}, {0.17364817766693033`, -0.984807753012208}}, 
       Center}], {53, 0}]}, 
   {RGBColor[1, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9961946980917455, \
-0.08715574274765817}, {0.08715574274765817, -0.9961946980917455}}, Center}], 
     NCache[{Rational[107, 2], 0}, {53.5, 0}]]}, 
   {RGBColor[0, 1, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-1, 0}, {0, -1}}, Center}], {54, 
     0}]}, 
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9961946980917455, 
       0.08715574274765817}, {-0.08715574274765817, -0.9961946980917455}}, 
       Center}], NCache[{Rational[109, 2], 0}, {54.5, 0}]]}, 
   {RGBColor[0, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.984807753012208, 
       0.17364817766693033`}, {-0.17364817766693033`, -0.984807753012208}}, 
       Center}], {55, 0}]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9659258262890682, 
       0.2588190451025207}, {-0.2588190451025207, -0.9659258262890682}}, 
       Center}], NCache[{Rational[111, 2], 0}, {55.5, 0}]]}, 
   {RGBColor[0, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9396926207859084, 
       0.3420201433256687}, {-0.3420201433256687, -0.9396926207859084}}, 
       Center}], {56, 0}]}, 
   {RGBColor[0, 0, 1], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.9063077870366499, 
       0.42261826174069944`}, {-0.42261826174069944`, -0.9063077870366499}}, 
       Center}], NCache[{Rational[113, 2], 0}, {56.5, 0}]]}, 
   {RGBColor[1, 0.5, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.8660254037844386, 
       0.5}, {-0.5, -0.8660254037844386}}, Center}], {57, 0}]}, 
   {RGBColor[1, 0, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.8191520442889918, 
       0.573576436351046}, {-0.573576436351046, -0.8191520442889918}}, 
       Center}], NCache[{Rational[115, 2], 0}, {57.5, 0}]]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.766044443118978, 
       0.6427876096865393}, {-0.6427876096865393, -0.766044443118978}}, 
       Center}], {58, 0}]}, 
   {RGBColor[0.6, 0.4, 0.2], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.7071067811865475, 
       0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}, 
       Center}], NCache[{Rational[117, 2], 0}, {58.5, 0}]]}, 
   {RGBColor[0.5, 0, 0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.6427876096865393, 
       0.766044443118978}, {-0.766044443118978, -0.6427876096865393}}, 
       Center}], {59, 0}]}, 
   {GrayLevel[0.5], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.573576436351046, 
       0.8191520442889918}, {-0.8191520442889918, -0.573576436351046}}, 
       Center}], NCache[{Rational[119, 2], 0}, {59.5, 0}]]}, 
   {RGBColor[0, 1, 0], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 5}], {{{-0.5, 
       0.8660254037844386}, {-0.8660254037844386, -0.5}}, Center}], {60, 0}]}},
  ImageSize->Full]], "Output",
 CellChangeTimes->{{3.661455472238166*^9, 3.661455528883952*^9}, 
   3.661621516724676*^9, 3.661625942731132*^9, 3.661626464919726*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomChoice", "[", "namedLightColours", "]"}], ",", 
       RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"Translate", "[", 
          RowBox[{
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r", "/", "2"}], ",", 
             RowBox[{"r", "/", "5"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"r", "*", "15", "Degree"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "60"}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661455081756081*^9, 3.6614553404968767`*^9}, {
   3.6614553776912937`*^9, 3.6614554244522467`*^9}, {3.661455543578207*^9, 
   3.6614555868664637`*^9}, 3.661455625277227*^9, {3.661625947013533*^9, 
   3.661625967993822*^9}, {3.661626459918724*^9, 3.6616264603495283`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.9, 1, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], {0, 0}], {{{1, 
      0}, {0, 1}}, Center}]}, 
   {RGBColor[0.87, 0.94, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[1, 2], Rational[1, 5]}, {0.5, 0.2}]], {{{
      0.9659258262890682, -0.2588190451025207}, {0.2588190451025207, 
      0.9659258262890682}}, Center}]}, 
   {RGBColor[0.88, 1, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{1, Rational[2, 5]}, {1, 0.4}]], {{{0.8660254037844386, -0.5}, {
      0.5, 0.8660254037844386}}, Center}]}, 
   {RGBColor[1, 1, 0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[3, 2], Rational[3, 5]}, {1.5, 0.6}]], {{{
      0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
      0.7071067811865475}}, Center}]}, 
   {RGBColor[1, 0.925, 0.925], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{2, Rational[4, 5]}, {2, 0.8}]], {{{0.5, -0.8660254037844386}, {
      0.8660254037844386, 0.5}}, Center}]}, 
   {RGBColor[0.87, 0.94, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[5, 2], 1}, {2.5, 1}]], {{{
      0.2588190451025207, -0.9659258262890682}, {0.9659258262890682, 
      0.2588190451025207}}, Center}]}, 
   {RGBColor[0.88, 1, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{3, Rational[6, 5]}, {3, 1.2}]], {{{0, -1}, {1, 0}}, Center}]}, 
   {GrayLevel[0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[7, 2], Rational[7, 5]}, {3.5, 
       1.4}]], {{{-0.2588190451025207, -0.9659258262890682}, {
      0.9659258262890682, -0.2588190451025207}}, Center}]}, 
   {RGBColor[1, 0.9, 0.8], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{4, Rational[8, 5]}, {4, 1.6}]], {{{-0.5, -0.8660254037844386}, {
      0.8660254037844386, -0.5}}, Center}]}, 
   {RGBColor[1, 1, 0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[9, 2], Rational[9, 5]}, {4.5, 
       1.8}]], {{{-0.7071067811865475, -0.7071067811865475}, {
      0.7071067811865475, -0.7071067811865475}}, Center}]}, 
   {RGBColor[1, 0.9, 0.8], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], {5, 
      2}], {{{-0.8660254037844386, -0.5}, {0.5, -0.8660254037844386}}, 
      Center}]}, 
   {RGBColor[1, 0.9, 0.8], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[11, 2], Rational[11, 5]}, {5.5, 
       2.2}]], {{{-0.9659258262890682, -0.2588190451025207}, {
      0.2588190451025207, -0.9659258262890682}}, Center}]}, 
   {RGBColor[0.94, 0.91, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{6, Rational[12, 5]}, {6, 2.4}]], {{{-1, 0}, {0, -1}}, Center}]}, 
   {GrayLevel[0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[13, 2], Rational[13, 5]}, {6.5, 
       2.6}]], {{{-0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, -0.9659258262890682}}, 
      Center}]}, 
   {RGBColor[1, 0.9, 0.8], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{7, Rational[14, 5]}, {7, 2.8}]], {{{-0.8660254037844386, 
      0.5}, {-0.5, -0.8660254037844386}}, Center}]}, 
   {RGBColor[0.88, 1, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[15, 2], 3}, {7.5, 3}]], {{{-0.7071067811865475, 
      0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}, 
      Center}]}, 
   {RGBColor[0.94, 0.91, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{8, Rational[16, 5]}, {8, 3.2}]], {{{-0.5, 
      0.8660254037844386}, {-0.8660254037844386, -0.5}}, Center}]}, 
   {RGBColor[1, 0.9, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[17, 2], Rational[17, 5]}, {8.5, 
       3.4}]], {{{-0.2588190451025207, 
      0.9659258262890682}, {-0.9659258262890682, -0.2588190451025207}}, 
      Center}]}, 
   {RGBColor[0.94, 0.88, 0.94], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{9, Rational[18, 5]}, {9, 3.6}]], {{{0, 1}, {-1, 0}}, 
      Center}]}, 
   {RGBColor[0.88, 1, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[19, 2], Rational[19, 5]}, {9.5, 3.8}]], {{{
      0.2588190451025207, 0.9659258262890682}, {-0.9659258262890682, 
      0.2588190451025207}}, Center}]}, 
   {RGBColor[1, 0.9, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], {10, 4}], {{{0.5, 
      0.8660254037844386}, {-0.8660254037844386, 0.5}}, Center}]}, 
   {RGBColor[1, 1, 0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[21, 2], Rational[21, 5]}, {10.5, 4.2}]], {{{
      0.7071067811865475, 0.7071067811865475}, {-0.7071067811865475, 
      0.7071067811865475}}, Center}]}, 
   {RGBColor[1, 0.925, 0.925], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{11, Rational[22, 5]}, {11, 4.4}]], {{{0.8660254037844386, 
      0.5}, {-0.5, 0.8660254037844386}}, Center}]}, 
   {RGBColor[1, 0.9, 0.8], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[23, 2], Rational[23, 5]}, {11.5, 4.6}]], {{{
      0.9659258262890682, 0.2588190451025207}, {-0.2588190451025207, 
      0.9659258262890682}}, Center}]}, 
   {RGBColor[0.94, 0.91, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{12, Rational[24, 5]}, {12, 4.8}]], {{{1, 0}, {0, 1}}, Center}]}, 
   {RGBColor[0.87, 0.94, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[25, 2], 5}, {12.5, 5}]], {{{
      0.9659258262890682, -0.2588190451025207}, {0.2588190451025207, 
      0.9659258262890682}}, Center}]}, 
   {GrayLevel[0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{13, Rational[26, 5]}, {13, 5.2}]], {{{
      0.8660254037844386, -0.5}, {0.5, 0.8660254037844386}}, Center}]}, 
   {GrayLevel[0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[27, 2], Rational[27, 5]}, {13.5, 5.4}]], {{{
      0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
      0.7071067811865475}}, Center}]}, 
   {RGBColor[1, 0.925, 0.925], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{14, Rational[28, 5]}, {14, 5.6}]], {{{
      0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, Center}]}, 
   {RGBColor[0.9, 1, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[29, 2], Rational[29, 5]}, {14.5, 5.8}]], {{{
      0.2588190451025207, -0.9659258262890682}, {0.9659258262890682, 
      0.2588190451025207}}, Center}]}, 
   {RGBColor[0.94, 0.91, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], {15, 6}], {{{
      0, -1}, {1, 0}}, Center}]}, 
   {RGBColor[1, 1, 0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[31, 2], Rational[31, 5]}, {15.5, 
       6.2}]], {{{-0.2588190451025207, -0.9659258262890682}, {
      0.9659258262890682, -0.2588190451025207}}, Center}]}, 
   {RGBColor[0.87, 0.94, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{16, Rational[32, 5]}, {
       16, 6.4}]], {{{-0.5, -0.8660254037844386}, {0.8660254037844386, -0.5}},
       Center}]}, 
   {RGBColor[0.94, 0.91, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[33, 2], Rational[33, 5]}, {16.5, 
       6.6}]], {{{-0.7071067811865475, -0.7071067811865475}, {
      0.7071067811865475, -0.7071067811865475}}, Center}]}, 
   {RGBColor[1, 1, 0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{17, Rational[34, 5]}, {
       17, 6.8}]], {{{-0.8660254037844386, -0.5}, {0.5, -0.8660254037844386}},
       Center}]}, 
   {RGBColor[1, 1, 0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[35, 2], 7}, {
       17.5, 7}]], {{{-0.9659258262890682, -0.2588190451025207}, {
      0.2588190451025207, -0.9659258262890682}}, Center}]}, 
   {RGBColor[1, 0.85, 0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{18, Rational[36, 5]}, {18, 7.2}]], {{{-1, 0}, {0, -1}}, 
      Center}]}, 
   {RGBColor[1, 0.9, 0.8], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[37, 2], Rational[37, 5]}, {18.5, 
       7.4}]], {{{-0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, -0.9659258262890682}}, 
      Center}]}, 
   {GrayLevel[0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{19, Rational[38, 5]}, {19, 7.6}]], {{{-0.8660254037844386, 
      0.5}, {-0.5, -0.8660254037844386}}, Center}]}, 
   {RGBColor[0.94, 0.91, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[39, 2], Rational[39, 5]}, {19.5, 
       7.8}]], {{{-0.7071067811865475, 
      0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}, 
      Center}]}, 
   {RGBColor[0.94, 0.91, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], {20, 8}], {{{-0.5, 
      0.8660254037844386}, {-0.8660254037844386, -0.5}}, Center}]}, 
   {RGBColor[0.9, 1, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[41, 2], Rational[41, 5]}, {20.5, 
       8.2}]], {{{-0.2588190451025207, 
      0.9659258262890682}, {-0.9659258262890682, -0.2588190451025207}}, 
      Center}]}, 
   {RGBColor[0.88, 1, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{21, Rational[42, 5]}, {21, 8.4}]], {{{0, 1}, {-1, 0}}, 
      Center}]}, 
   {RGBColor[1, 0.925, 0.925], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[43, 2], Rational[43, 5]}, {21.5, 8.6}]], {{{
      0.2588190451025207, 0.9659258262890682}, {-0.9659258262890682, 
      0.2588190451025207}}, Center}]}, 
   {RGBColor[1, 0.925, 0.925], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{22, Rational[44, 5]}, {22, 8.8}]], {{{0.5, 
      0.8660254037844386}, {-0.8660254037844386, 0.5}}, Center}]}, 
   {RGBColor[0.87, 0.94, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[45, 2], 9}, {22.5, 9}]], {{{0.7071067811865475, 
      0.7071067811865475}, {-0.7071067811865475, 0.7071067811865475}}, 
      Center}]}, 
   {RGBColor[0.94, 0.88, 0.94], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{23, Rational[46, 5]}, {23, 9.2}]], {{{0.8660254037844386, 
      0.5}, {-0.5, 0.8660254037844386}}, Center}]}, 
   {RGBColor[0.87, 0.94, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[47, 2], Rational[47, 5]}, {23.5, 9.4}]], {{{
      0.9659258262890682, 0.2588190451025207}, {-0.2588190451025207, 
      0.9659258262890682}}, Center}]}, 
   {RGBColor[0.88, 1, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{24, Rational[48, 5]}, {24, 9.6}]], {{{1, 0}, {0, 1}}, Center}]}, 
   {RGBColor[0.94, 0.88, 0.94], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[49, 2], Rational[49, 5]}, {24.5, 9.8}]], {{{
      0.9659258262890682, -0.2588190451025207}, {0.2588190451025207, 
      0.9659258262890682}}, Center}]}, 
   {RGBColor[1, 0.85, 0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], {25, 10}], {{{
      0.8660254037844386, -0.5}, {0.5, 0.8660254037844386}}, Center}]}, 
   {RGBColor[1, 0.925, 0.925], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[51, 2], Rational[51, 5]}, {25.5, 10.2}]], {{{
      0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
      0.7071067811865475}}, Center}]}, 
   {RGBColor[0.94, 0.88, 0.94], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{26, Rational[52, 5]}, {26, 10.4}]], {{{
      0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, Center}]}, 
   {RGBColor[0.88, 1, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[53, 2], Rational[53, 5]}, {26.5, 10.6}]], {{{
      0.2588190451025207, -0.9659258262890682}, {0.9659258262890682, 
      0.2588190451025207}}, Center}]}, 
   {RGBColor[0.87, 0.94, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{27, Rational[54, 5]}, {27, 10.8}]], {{{0, -1}, {1, 0}}, 
      Center}]}, 
   {RGBColor[0.87, 0.94, 1], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[55, 2], 11}, {
       27.5, 11}]], {{{-0.2588190451025207, -0.9659258262890682}, {
      0.9659258262890682, -0.2588190451025207}}, Center}]}, 
   {RGBColor[1, 0.85, 0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{28, Rational[56, 5]}, {
       28, 11.2}]], {{{-0.5, -0.8660254037844386}, {
      0.8660254037844386, -0.5}}, Center}]}, 
   {RGBColor[0.94, 0.91, 0.88], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[57, 2], Rational[57, 5]}, {28.5, 
       11.4}]], {{{-0.7071067811865475, -0.7071067811865475}, {
      0.7071067811865475, -0.7071067811865475}}, Center}]}, 
   {GrayLevel[0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{29, Rational[58, 5]}, {
       29, 11.6}]], {{{-0.8660254037844386, -0.5}, {
      0.5, -0.8660254037844386}}, Center}]}, 
   {GrayLevel[0.85], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], 
      NCache[{Rational[59, 2], Rational[59, 5]}, {29.5, 
       11.8}]], {{{-0.9659258262890682, -0.2588190451025207}, {
      0.2588190451025207, -0.9659258262890682}}, Center}]}, 
   {RGBColor[0.94, 0.88, 0.94], EdgeForm[GrayLevel[0]], 
    GeometricTransformationBox[
     GeometricTransformationBox[DiskBox[{0, 0}, {1., 2.}], {30, 12}], {{{-1, 
      0}, {0, -1}}, Center}]}},
  ImageSize->Full]], "Output",
 CellChangeTimes->{{3.6614552906598463`*^9, 3.6614553408561687`*^9}, {
   3.661455382537467*^9, 3.6614554247788153`*^9}, {3.66145556487512*^9, 
   3.6614555872440042`*^9}, 3.661455625687604*^9, 3.6616215167618113`*^9, 
   3.661625968466428*^9, 3.6616264610112057`*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["RandomColor",
  FontWeight->"Bold"],
 " command chooses from a much wider set of possibilities"
}], "Text",
 CellChangeTimes->{{3.661456053604293*^9, 3.661456071905088*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomColor", "[", "]"}], ",", 
      RowBox[{"Translate", "[", 
       RowBox[{
        RowBox[{"Rotate", "[", 
         RowBox[{
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{".3", ",", "10"}], "}"}]}], "]"}], ",", 
          RowBox[{"r", "*", "5", "Degree"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"r", "/", "4"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "80"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.661455081756081*^9, 3.661455262075614*^9}, {
  3.6614553531577997`*^9, 3.661455362499942*^9}, {3.6614554501523323`*^9, 
  3.661455528123455*^9}, {3.6614560801687717`*^9, 3.661456166131023*^9}, {
  3.661456199631577*^9, 3.6614562034371567`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.8938956370769171, 0.4105257697820772, 0.13850766836001083`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{1, 0}, {0, 1}}, Center}], {0, 
     0}]}, 
   {RGBColor[0.07121184214897003, 0.3353448296791022, 0.9499993032517422], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.9961946980917455, -0.08715574274765817}, {0.08715574274765817, 
       0.9961946980917455}}, Center}], 
     NCache[{0, Rational[1, 4]}, {0, 0.25}]]}, 
   {RGBColor[0.2609439228743422, 0.5146403372388388, 0.5988577414644829], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.984807753012208, -0.17364817766693033`}, {0.17364817766693033`, 
       0.984807753012208}}, Center}], NCache[{0, Rational[1, 2]}, {0, 0.5}]]}, 
   {RGBColor[
    0.22935402398019056`, 0.028238653115603585`, 0.45016057156628464`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.9659258262890682, -0.2588190451025207}, {0.2588190451025207, 
       0.9659258262890682}}, Center}], 
     NCache[{0, Rational[3, 4]}, {0, 0.75}]]}, 
   {RGBColor[
    0.057807137973745926`, 0.15838522689641432`, 0.29597700475410793`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.9396926207859084, -0.3420201433256687}, {0.3420201433256687, 
       0.9396926207859084}}, Center}], {0, 1}]}, 
   {RGBColor[0.28825561031850055`, 0.02004425750036387, 0.06438913973640026], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.9063077870366499, -0.42261826174069944`}, {0.42261826174069944`, 
       0.9063077870366499}}, Center}], 
     NCache[{0, Rational[5, 4]}, {0, 1.25}]]}, 
   {RGBColor[0.26747309691486043`, 0.24230118959160385`, 0.05695837520318947],
     GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.8660254037844386, -0.5}, {0.5, 
       0.8660254037844386}}, Center}], 
     NCache[{0, Rational[3, 2]}, {0, 1.5}]]}, 
   {RGBColor[0.5170839814768042, 0.9263499890022404, 0.6350582046338589], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.8191520442889918, -0.573576436351046}, {0.573576436351046, 
       0.8191520442889918}}, Center}], 
     NCache[{0, Rational[7, 4]}, {0, 1.75}]]}, 
   {RGBColor[0.10399216313451554`, 0.8721206007645674, 0.2791880598660206], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
       0.766044443118978}}, Center}], {0, 2}]}, 
   {RGBColor[0.11681561659733752`, 0.38625152192488144`, 0.8804505532973961], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
       0.7071067811865475}}, Center}], 
     NCache[{0, Rational[9, 4]}, {0, 2.25}]]}, 
   {RGBColor[0.09788209133568904, 0.02901520196573415, 0.2793279005797533], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.6427876096865393, -0.766044443118978}, {0.766044443118978, 
       0.6427876096865393}}, Center}], 
     NCache[{0, Rational[5, 2]}, {0, 2.5}]]}, 
   {RGBColor[0.8253010645439265, 0.3810538991428436, 0.5554477967907578], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.573576436351046, -0.8191520442889918}, {0.8191520442889918, 
       0.573576436351046}}, Center}], 
     NCache[{0, Rational[11, 4]}, {0, 2.75}]]}, 
   {RGBColor[0.7267039218377189, 0.7528018662353224, 0.5502389813361215], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.5, -0.8660254037844386}, {
       0.8660254037844386, 0.5}}, Center}], {0, 3}]}, 
   {RGBColor[0.9186451867680276, 0.6989403789572968, 0.43542308243991434`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.42261826174069944`, -0.9063077870366499}, {0.9063077870366499, 
       0.42261826174069944`}}, Center}], 
     NCache[{0, Rational[13, 4]}, {0, 3.25}]]}, 
   {RGBColor[0.06294169456831611, 0.44692442968088963`, 0.07103915115282544], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.3420201433256687, -0.9396926207859084}, {0.9396926207859084, 
       0.3420201433256687}}, Center}], 
     NCache[{0, Rational[7, 2]}, {0, 3.5}]]}, 
   {RGBColor[0.6927097424193458, 0.5421948643736965, 0.8653819110940209], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.2588190451025207, -0.9659258262890682}, {0.9659258262890682, 
       0.2588190451025207}}, Center}], 
     NCache[{0, Rational[15, 4]}, {0, 3.75}]]}, 
   {RGBColor[0.2147532761345874, 0.4753952859184032, 0.4720921554894204], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.17364817766693033`, -0.984807753012208}, {0.984807753012208, 
       0.17364817766693033`}}, Center}], {0, 4}]}, 
   {RGBColor[0.3724578689338489, 0.8583209045135776, 0.4694778959466319], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.08715574274765817, -0.9961946980917455}, {0.9961946980917455, 
       0.08715574274765817}}, Center}], 
     NCache[{0, Rational[17, 4]}, {0, 4.25}]]}, 
   {RGBColor[0.1653157097009974, 0.8646845390477227, 0.522894620432774], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0, -1}, {1, 0}}, Center}], 
     NCache[{0, Rational[9, 2]}, {0, 4.5}]]}, 
   {RGBColor[0.9025893464418571, 0.469523701931718, 0.13179346623202148`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.08715574274765817, \
-0.9961946980917455}, {0.9961946980917455, -0.08715574274765817}}, Center}], 
     NCache[{0, Rational[19, 4]}, {0, 4.75}]]}, 
   {RGBColor[0.821304337611187, 0.36639535299531745`, 0.9958707035777887], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.17364817766693033`, \
-0.984807753012208}, {0.984807753012208, -0.17364817766693033`}}, Center}], {
     0, 5}]}, 
   {RGBColor[0.3170806559342747, 0.720230362670343, 0.8875513397988282], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.2588190451025207, \
-0.9659258262890682}, {0.9659258262890682, -0.2588190451025207}}, Center}], 
     NCache[{0, Rational[21, 4]}, {0, 5.25}]]}, 
   {RGBColor[0.5141911746925494, 0.6386729754216558, 0.850728712251906], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.3420201433256687, \
-0.9396926207859084}, {0.9396926207859084, -0.3420201433256687}}, Center}], 
     NCache[{0, Rational[11, 2]}, {0, 5.5}]]}, 
   {RGBColor[0.3397061362377445, 0.39181305126376875`, 0.8773768917138882], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.42261826174069944`, \
-0.9063077870366499}, {0.9063077870366499, -0.42261826174069944`}}, Center}], 
     NCache[{0, Rational[23, 4]}, {0, 5.75}]]}, 
   {RGBColor[0.22570938861891499`, 0.9817509517058696, 0.7186621641177011], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.5, -0.8660254037844386}, {
       0.8660254037844386, -0.5}}, Center}], {0, 6}]}, 
   {RGBColor[0.9952595394081523, 0.21432682372595013`, 0.31781210504573787`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.573576436351046, \
-0.8191520442889918}, {0.8191520442889918, -0.573576436351046}}, Center}], 
     NCache[{0, Rational[25, 4]}, {0, 6.25}]]}, 
   {RGBColor[0.640953736400856, 0.49683035040237034`, 0.9575640225310158], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.6427876096865393, \
-0.766044443118978}, {0.766044443118978, -0.6427876096865393}}, Center}], 
     NCache[{0, Rational[13, 2]}, {0, 6.5}]]}, 
   {RGBColor[0.11575519750151564`, 0.864664776521145, 0.32170731977356204`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.7071067811865475, \
-0.7071067811865475}, {0.7071067811865475, -0.7071067811865475}}, Center}], 
     NCache[{0, Rational[27, 4]}, {0, 6.75}]]}, 
   {RGBColor[0.8199694156677255, 0.7409236890631947, 0.5816563348630097], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.766044443118978, \
-0.6427876096865393}, {0.6427876096865393, -0.766044443118978}}, Center}], {0,
      7}]}, 
   {RGBColor[0.87815062274837, 0.3108187244705234, 0.08326844926281884], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.8191520442889918, \
-0.573576436351046}, {0.573576436351046, -0.8191520442889918}}, Center}], 
     NCache[{0, Rational[29, 4]}, {0, 7.25}]]}, 
   {RGBColor[0.8263045777701219, 0.4168933476738603, 0.8725237110957171], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.8660254037844386, -0.5}, {
       0.5, -0.8660254037844386}}, Center}], 
     NCache[{0, Rational[15, 2]}, {0, 7.5}]]}, 
   {RGBColor[0.7695752721010158, 0.6867775291720097, 0.7129828751095275], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.9063077870366499, \
-0.42261826174069944`}, {0.42261826174069944`, -0.9063077870366499}}, 
       Center}], NCache[{0, Rational[31, 4]}, {0, 7.75}]]}, 
   {RGBColor[0.39591014049973583`, 0.24035840697920996`, 0.3949555886056264], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.9396926207859084, \
-0.3420201433256687}, {0.3420201433256687, -0.9396926207859084}}, Center}], {
     0, 8}]}, 
   {RGBColor[0.4503367946683605, 0.17576354711900688`, 0.6443624284087099], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.9659258262890682, \
-0.2588190451025207}, {0.2588190451025207, -0.9659258262890682}}, Center}], 
     NCache[{0, Rational[33, 4]}, {0, 8.25}]]}, 
   {RGBColor[0.7279259831689198, 0.6918839249123281, 0.5624034214733107], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.984807753012208, \
-0.17364817766693033`}, {0.17364817766693033`, -0.984807753012208}}, Center}],
      NCache[{0, Rational[17, 2]}, {0, 8.5}]]}, 
   {RGBColor[0.9558227224662377, 0.18489092463420786`, 0.2362924755726643], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.9961946980917455, \
-0.08715574274765817}, {0.08715574274765817, -0.9961946980917455}}, Center}], 
     NCache[{0, Rational[35, 4]}, {0, 8.75}]]}, 
   {RGBColor[0.6412521808657288, 0.6217254410297424, 0.47096766042905336`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-1, 0}, {0, -1}}, Center}], {0, 
     9}]}, 
   {RGBColor[0.31828297727888244`, 0.21003238389793188`, 0.5436350802580947], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.9961946980917455, 
       0.08715574274765817}, {-0.08715574274765817, -0.9961946980917455}}, 
       Center}], NCache[{0, Rational[37, 4]}, {0, 9.25}]]}, 
   {RGBColor[0.45650215439780273`, 0.5146774732222916, 0.5549792556869215], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.984807753012208, 
       0.17364817766693033`}, {-0.17364817766693033`, -0.984807753012208}}, 
       Center}], NCache[{0, Rational[19, 2]}, {0, 9.5}]]}, 
   {RGBColor[0.14400209011652376`, 0.56766769963753, 0.25563933578570386`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.9659258262890682, 
       0.2588190451025207}, {-0.2588190451025207, -0.9659258262890682}}, 
       Center}], NCache[{0, Rational[39, 4]}, {0, 9.75}]]}, 
   {RGBColor[0.8933256797952545, 0.26926104834109843`, 0.6531768467731669], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.9396926207859084, 
       0.3420201433256687}, {-0.3420201433256687, -0.9396926207859084}}, 
       Center}], {0, 10}]}, 
   {RGBColor[0.7383217442141132, 0.6376192409439385, 0.9835538018265688], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.9063077870366499, 
       0.42261826174069944`}, {-0.42261826174069944`, -0.9063077870366499}}, 
       Center}], NCache[{0, Rational[41, 4]}, {0, 10.25}]]}, 
   {RGBColor[0.3592823660119442, 0.4035286533047435, 0.15403715058131073`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.8660254037844386, 
       0.5}, {-0.5, -0.8660254037844386}}, Center}], 
     NCache[{0, Rational[21, 2]}, {0, 10.5}]]}, 
   {RGBColor[0.06271370496871609, 0.7962653974147236, 0.09786267244830049], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.8191520442889918, 
       0.573576436351046}, {-0.573576436351046, -0.8191520442889918}}, 
       Center}], NCache[{0, Rational[43, 4]}, {0, 10.75}]]}, 
   {RGBColor[0.03570263621915504, 0.13607034412877672`, 0.4866636338149306], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.766044443118978, 
       0.6427876096865393}, {-0.6427876096865393, -0.766044443118978}}, 
       Center}], {0, 11}]}, 
   {RGBColor[0.28654667119790767`, 0.6206049066738877, 0.4089587360020517], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.7071067811865475, 
       0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}, 
       Center}], NCache[{0, Rational[45, 4]}, {0, 11.25}]]}, 
   {RGBColor[0.5608885506731782, 0.7420651953963118, 0.9538171601708723], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.6427876096865393, 
       0.766044443118978}, {-0.766044443118978, -0.6427876096865393}}, 
       Center}], NCache[{0, Rational[23, 2]}, {0, 11.5}]]}, 
   {RGBColor[0.591061474605155, 0.5781158940959432, 0.9916156812769084], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.573576436351046, 
       0.8191520442889918}, {-0.8191520442889918, -0.573576436351046}}, 
       Center}], NCache[{0, Rational[47, 4]}, {0, 11.75}]]}, 
   {RGBColor[0.5536183061196072, 0.5667013850537959, 0.759683839602973], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.5, 
       0.8660254037844386}, {-0.8660254037844386, -0.5}}, Center}], {0, 12}]}, 
   {RGBColor[0.9078608071419989, 0.831672694158681, 0.908396765027289], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.42261826174069944`, 
       0.9063077870366499}, {-0.9063077870366499, -0.42261826174069944`}}, 
       Center}], NCache[{0, Rational[49, 4]}, {0, 12.25}]]}, 
   {RGBColor[0.3335224153269922, 0.8906778411354939, 0.4085067495734358], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.3420201433256687, 
       0.9396926207859084}, {-0.9396926207859084, -0.3420201433256687}}, 
       Center}], NCache[{0, Rational[25, 2]}, {0, 12.5}]]}, 
   {RGBColor[0.08347509059864433, 0.9125436644405465, 0.267293806856709], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.2588190451025207, 
       0.9659258262890682}, {-0.9659258262890682, -0.2588190451025207}}, 
       Center}], NCache[{0, Rational[51, 4]}, {0, 12.75}]]}, 
   {RGBColor[0.41098855648946286`, 0.8241278399353467, 0.041204201809943664`],
     GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.17364817766693033`, 
       0.984807753012208}, {-0.984807753012208, -0.17364817766693033`}}, 
       Center}], {0, 13}]}, 
   {RGBColor[0.2864685065698591, 0.8710204947526337, 0.1687835085131919], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{-0.08715574274765817, 
       0.9961946980917455}, {-0.9961946980917455, -0.08715574274765817}}, 
       Center}], NCache[{0, Rational[53, 4]}, {0, 13.25}]]}, 
   {RGBColor[0.22759169121199485`, 0.01682812248595056, 0.33730177208353074`],
     GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0, 1}, {-1, 0}}, Center}], 
     NCache[{0, Rational[27, 2]}, {0, 13.5}]]}, 
   {RGBColor[0.9683046413105283, 0.08615262434258719, 0.10225050523601453`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.08715574274765817, 
       0.9961946980917455}, {-0.9961946980917455, 0.08715574274765817}}, 
       Center}], NCache[{0, Rational[55, 4]}, {0, 13.75}]]}, 
   {RGBColor[0.8212818983881873, 0.014988109926068915`, 0.42416973206002706`],
     GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.17364817766693033`, 
       0.984807753012208}, {-0.984807753012208, 0.17364817766693033`}}, 
       Center}], {0, 14}]}, 
   {RGBColor[0.570568155254916, 0.22316496214301806`, 0.5030321236226001], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.2588190451025207, 
       0.9659258262890682}, {-0.9659258262890682, 0.2588190451025207}}, 
       Center}], NCache[{0, Rational[57, 4]}, {0, 14.25}]]}, 
   {RGBColor[0.3882526348223019, 0.36981508367146465`, 0.2526967705119698], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.3420201433256687, 
       0.9396926207859084}, {-0.9396926207859084, 0.3420201433256687}}, 
       Center}], NCache[{0, Rational[29, 2]}, {0, 14.5}]]}, 
   {RGBColor[0.08298648450450252, 0.7022232793395151, 0.355526715480724], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.42261826174069944`, 
       0.9063077870366499}, {-0.9063077870366499, 0.42261826174069944`}}, 
       Center}], NCache[{0, Rational[59, 4]}, {0, 14.75}]]}, 
   {RGBColor[0.07848636914432294, 0.08766363341006467, 0.8042805415036041], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.5, 
       0.8660254037844386}, {-0.8660254037844386, 0.5}}, Center}], {0, 
     15}]}, 
   {RGBColor[0.8148957498580682, 0.10765973864409495`, 0.30187373086364544`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.573576436351046, 
       0.8191520442889918}, {-0.8191520442889918, 0.573576436351046}}, 
       Center}], NCache[{0, Rational[61, 4]}, {0, 15.25}]]}, 
   {RGBColor[0.9506556776478956, 0.07075714409188816, 0.9462109721611025], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.6427876096865393, 
       0.766044443118978}, {-0.766044443118978, 0.6427876096865393}}, 
       Center}], NCache[{0, Rational[31, 2]}, {0, 15.5}]]}, 
   {RGBColor[0.6048894901512503, 0.7711104734670235, 0.4770914266520294], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.7071067811865475, 
       0.7071067811865475}, {-0.7071067811865475, 0.7071067811865475}}, 
       Center}], NCache[{0, Rational[63, 4]}, {0, 15.75}]]}, 
   {RGBColor[0.7325604397327752, 0.8857685145676961, 0.5807620944554157], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.766044443118978, 
       0.6427876096865393}, {-0.6427876096865393, 0.766044443118978}}, 
       Center}], {0, 16}]}, 
   {RGBColor[0.44701029211685284`, 0.987919347673804, 0.08191134440466885], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.8191520442889918, 
       0.573576436351046}, {-0.573576436351046, 0.8191520442889918}}, 
       Center}], NCache[{0, Rational[65, 4]}, {0, 16.25}]]}, 
   {RGBColor[0.8364640513691084, 0.6974520577901224, 0.15790256672743475`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.8660254037844386, 0.5}, {-0.5, 
       0.8660254037844386}}, Center}], 
     NCache[{0, Rational[33, 2]}, {0, 16.5}]]}, 
   {RGBColor[0.37234405419478045`, 0.7723189149578882, 0.7983817193395519], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.9063077870366499, 
       0.42261826174069944`}, {-0.42261826174069944`, 0.9063077870366499}}, 
       Center}], NCache[{0, Rational[67, 4]}, {0, 16.75}]]}, 
   {RGBColor[0.5240059639072054, 0.06586151324430145, 0.9994024675573081], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.9396926207859084, 
       0.3420201433256687}, {-0.3420201433256687, 0.9396926207859084}}, 
       Center}], {0, 17}]}, 
   {RGBColor[0.9763087079208519, 0.29168043846095015`, 0.556752634786629], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.9659258262890682, 
       0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
       Center}], NCache[{0, Rational[69, 4]}, {0, 17.25}]]}, 
   {RGBColor[0.5631129002141408, 0.7823485111834672, 0.5550072830884323], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.984807753012208, 
       0.17364817766693033`}, {-0.17364817766693033`, 0.984807753012208}}, 
       Center}], NCache[{0, Rational[35, 2]}, {0, 17.5}]]}, 
   {RGBColor[0.35915748573573825`, 0.21507852089625046`, 0.7897920775941791], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.9961946980917455, 
       0.08715574274765817}, {-0.08715574274765817, 0.9961946980917455}}, 
       Center}], NCache[{0, Rational[71, 4]}, {0, 17.75}]]}, 
   {RGBColor[0.7389924985560823, 0.19246557062055425`, 0.9404373545509541], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{1, 0}, {0, 1}}, Center}], {0, 18}]}, 
   {RGBColor[0.6773550448521588, 0.7647867422745251, 0.3334557851721125], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.9961946980917455, -0.08715574274765817}, {0.08715574274765817, 
       0.9961946980917455}}, Center}], 
     NCache[{0, Rational[73, 4]}, {0, 18.25}]]}, 
   {RGBColor[0.15162754741560325`, 0.3255751419212851, 0.4085748672784022], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.984807753012208, -0.17364817766693033`}, {0.17364817766693033`, 
       0.984807753012208}}, Center}], 
     NCache[{0, Rational[37, 2]}, {0, 18.5}]]}, 
   {RGBColor[0.8806353801874505, 0.5421741967654077, 0.36333139223987243`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.9659258262890682, -0.2588190451025207}, {0.2588190451025207, 
       0.9659258262890682}}, Center}], 
     NCache[{0, Rational[75, 4]}, {0, 18.75}]]}, 
   {RGBColor[0.7155704014273525, 0.423349580057538, 0.16212306632073736`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.9396926207859084, -0.3420201433256687}, {0.3420201433256687, 
       0.9396926207859084}}, Center}], {0, 19}]}, 
   {RGBColor[0.1994782407036224, 0.6620502633445056, 0.23293278565735753`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.9063077870366499, -0.42261826174069944`}, {0.42261826174069944`, 
       0.9063077870366499}}, Center}], 
     NCache[{0, Rational[77, 4]}, {0, 19.25}]]}, 
   {RGBColor[0.44478157768614257`, 0.4732269060871732, 0.15301089844748428`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{0.8660254037844386, -0.5}, {0.5, 
       0.8660254037844386}}, Center}], 
     NCache[{0, Rational[39, 2]}, {0, 19.5}]]}, 
   {RGBColor[0.901559103483244, 0.30452656336093975`, 0.11300126067123561`], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.8191520442889918, -0.573576436351046}, {0.573576436351046, 
       0.8191520442889918}}, Center}], 
     NCache[{0, Rational[79, 4]}, {0, 19.75}]]}, 
   {RGBColor[0.0717613142164355, 0.6696192187313321, 0.7523156049069788], 
    GeometricTransformationBox[
     GeometricTransformationBox[
      RectangleBox[{0, 0}, {0.3, 10}], {{{
       0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
       0.766044443118978}}, Center}], {0, 20}]}}]], "Output",
 CellChangeTimes->{{3.661456083387628*^9, 3.661456166487523*^9}, 
   3.661456204123258*^9, 3.661621516814187*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["RGBColor", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.661452872010309*^9, 3.6614528739449387`*^9}}],

Cell["\<\
We can actually specify an arbitrary colour in a number of different ways. \
One of the most common methods is to describe the colour as a mixture of Red, \
Green and Blue, using a number between 0 and 1 for each of the three \
parameters.\
\>", "Text",
 CellChangeTimes->{{3.6477163758185587`*^9, 3.647716376530898*^9}, {
  3.6614528788960657`*^9, 3.6614529249128857`*^9}}],

Cell["\<\
The named colour Red corresponds to RGB values of {1, 0, 0}. RGB values for \
the named colours Green and Blue can be obtained in a similar way.\
\>", "Text",
 CellChangeTimes->{{3.661452927312422*^9, 3.661453032472336*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{"1", ",", "0", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.661452939049519*^9, 3.6614529474613028`*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[1, 0, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1, 0, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.661452948056172*^9, 3.661621516832135*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{"0", ",", "1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.6614529964750767`*^9, 3.661453001701208*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[0, 1, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0, 1, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.661453002075737*^9, 3.661621516864542*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{"0", ",", "0", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.661453004930574*^9, 3.661453009547793*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0., 0., 0.6666666666666666],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[0, 0, 1]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0, 0, 1],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.661453010020411*^9, 3.661621516893289*^9}]
}, Open  ]],

Cell[TextData[{
 "We can generate gradients by using ",
 StyleBox["Table",
  FontWeight->"Bold"],
 " to vary one or more of the three parameters, as shown in the text"
}], "Text",
 CellChangeTimes->{{3.661455882054533*^9, 3.6614558822375917`*^9}, {
  3.661455921391677*^9, 3.661455951067203*^9}, {3.66145602109662*^9, 
  3.661456024064135*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"RGBColor", "[", 
    RowBox[{"1", ",", "g", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"g", ",", "0", ",", "1", ",", ".05"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66145589608809*^9, 3.661455917416501*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0., 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0., 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0., 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.05, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.03333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.05, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.05, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.05, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.06666666666666668, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.15000000000000002`, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.10000000000000002`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.15000000000000002, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.15000000000000002`, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.15000000000000002`, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.2, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.13333333333333336`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.2, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.2, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.25, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.16666666666666669`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.25, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.25, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.25, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.30000000000000004`, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.20000000000000004`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.30000000000000004, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.30000000000000004`, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.30000000000000004`, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.35000000000000003`, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.23333333333333336`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.35000000000000003, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.35000000000000003`, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.35000000000000003`, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.4, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.2666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.4, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.4, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.45, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.30000000000000004`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.45, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.45, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.45, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.55, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.3666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.55, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.55, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.55, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.6000000000000001, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.4000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.6000000000000001, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.6000000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.6000000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.65, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.43333333333333335`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.65, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.65, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.65, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.7000000000000001, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.46666666666666673`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.7000000000000001, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.7000000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.7000000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.75, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.75, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.75, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.75, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.8, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.5333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.8, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.8, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.8500000000000001, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.5666666666666668, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.8500000000000001, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.8500000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.8500000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.9, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.9, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.9, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.9500000000000001, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.9500000000000001, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.9500000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.9500000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1., 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1., 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1., 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.661455917830298*^9, 3.66162151693703*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Colour grids", "Subsection",
 CellChangeTimes->{{3.661626282356595*^9, 3.6616262836196938`*^9}}],

Cell["\<\
If we vary two of the parameters at once, we get a grid of possibilities.\
\>", "Text",
 CellChangeTimes->{{3.661456012058445*^9, 3.661456033318775*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", "g", ",", "b"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "0", ",", "1", ",", ".1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", "1", ",", ".1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66145589608809*^9, 3.661455917416501*^9}, {
  3.6614559616588173`*^9, 3.661455999388241*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0.],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0.1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.06666666666666668],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0.1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0.1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0.1],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0.2], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.13333333333333336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0.2]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0.2]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0.2],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0.30000000000000004`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.20000000000000004`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0.30000000000000004]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0., 0.30000000000000004`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0.30000000000000004`],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0.4], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.2666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0.4]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0.4],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0.5],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0.6000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.4000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0.6000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0., 0.6000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0.6000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0.7000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.46666666666666673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0.7000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0., 0.7000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0.7000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0.8], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0.8],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0.9], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0.9],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 1.],
      Editable->False,
      Selectable->False]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.1, 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.06666666666666668, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.1, 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.1, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.1, 0.],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.1, 0.1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.06666666666666668, 0.06666666666666668],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.1, 0.1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.1, 0.1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.1, 0.1],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.1, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.06666666666666668, 0.13333333333333336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.1, 0.2]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.1, 0.2]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.1, 0.2],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.1, 0.30000000000000004`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.06666666666666668, 0.20000000000000004`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.1, 0.30000000000000004]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.1, 0.30000000000000004`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.1, 0.30000000000000004`],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.1, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.06666666666666668, 0.2666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.1, 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.1, 0.4]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.1, 0.4],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.1, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.06666666666666668, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.1, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.1, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.1, 0.5],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.1, 0.6000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.06666666666666668, 0.4000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.1, 0.6000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.1, 0.6000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.1, 0.6000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.1, 0.7000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.06666666666666668, 0.46666666666666673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.1, 0.7000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.1, 0.7000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.1, 0.7000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.1, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.06666666666666668, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.1, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.1, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.1, 0.8],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.1, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.06666666666666668, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.1, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.1, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.1, 0.9],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.1, 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.06666666666666668, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.1, 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.1, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.1, 1.],
      Editable->False,
      Selectable->False]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.2, 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.13333333333333336`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.2, 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.2, 0.],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.2, 0.1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.13333333333333336`, 0.06666666666666668],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.2, 0.1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 0.1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.2, 0.1],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.2, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.13333333333333336`, 0.13333333333333336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.2, 0.2]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 0.2]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.2, 0.2],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.2, 0.30000000000000004`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.13333333333333336`, 0.20000000000000004`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.2, 0.30000000000000004]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.2, 0.30000000000000004`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.2, 0.30000000000000004`],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.2, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.13333333333333336`, 0.2666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.2, 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 0.4]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.2, 0.4],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.2, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.13333333333333336`, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.2, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.2, 0.5],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.2, 0.6000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.13333333333333336`, 0.4000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.2, 0.6000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.2, 0.6000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.2, 0.6000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.2, 0.7000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.13333333333333336`, 0.46666666666666673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.2, 0.7000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.2, 0.7000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.2, 0.7000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.2, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.13333333333333336`, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.2, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.2, 0.8],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.2, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.13333333333333336`, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.2, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.2, 0.9],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.2, 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.13333333333333336`, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.2, 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.2, 1.],
      Editable->False,
      Selectable->False]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.30000000000000004`, 0.], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.20000000000000004`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.30000000000000004, 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.30000000000000004`, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.30000000000000004`, 0.],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.30000000000000004`, 0.1], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.20000000000000004`, 0.06666666666666668],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.30000000000000004, 0.1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.30000000000000004`, 0.1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.30000000000000004`, 0.1],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.30000000000000004`, 0.2], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.20000000000000004`, 0.13333333333333336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.30000000000000004, 0.2]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.30000000000000004`, 0.2]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.30000000000000004`, 0.2],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.30000000000000004`, 0.30000000000000004`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.20000000000000004`, 0.20000000000000004`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.30000000000000004, 0.30000000000000004]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.30000000000000004`, 0.30000000000000004`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.30000000000000004`, 0.30000000000000004`],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.30000000000000004`, 0.4], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.20000000000000004`, 0.2666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.30000000000000004, 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.30000000000000004`, 0.4]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.30000000000000004`, 0.4],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.30000000000000004`, 0.5], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.20000000000000004`, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.30000000000000004, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.30000000000000004`, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.30000000000000004`, 0.5],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.30000000000000004`, 0.6000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.20000000000000004`, 0.4000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.30000000000000004, 0.6000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.30000000000000004`, 0.6000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.30000000000000004`, 0.6000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.30000000000000004`, 0.7000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.20000000000000004`, 0.46666666666666673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.30000000000000004, 0.7000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.30000000000000004`, 0.7000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.30000000000000004`, 0.7000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.30000000000000004`, 0.8], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.20000000000000004`, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.30000000000000004, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.30000000000000004`, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.30000000000000004`, 0.8],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.30000000000000004`, 0.9], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.20000000000000004`, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.30000000000000004, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.30000000000000004`, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.30000000000000004`, 0.9],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.30000000000000004`, 1.], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.20000000000000004`, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.30000000000000004, 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.30000000000000004`, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.30000000000000004`, 1.],
      Editable->False,
      Selectable->False]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.4, 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.2666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.4, 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.4, 0.],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.4, 0.1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.2666666666666667, 0.06666666666666668],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.4, 0.1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 0.1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.4, 0.1],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.4, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.2666666666666667, 0.13333333333333336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.4, 0.2]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 0.2]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.4, 0.2],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.4, 0.30000000000000004`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.2666666666666667, 0.20000000000000004`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.4, 0.30000000000000004]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.4, 0.30000000000000004`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.4, 0.30000000000000004`],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.4, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.2666666666666667, 0.2666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.4, 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 0.4]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.4, 0.4],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.4, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.2666666666666667, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.4, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.4, 0.5],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.4, 0.6000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.2666666666666667, 0.4000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.4, 0.6000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.4, 0.6000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.4, 0.6000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.4, 0.7000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.2666666666666667, 0.46666666666666673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.4, 0.7000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.4, 0.7000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.4, 0.7000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.4, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.2666666666666667, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.4, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.4, 0.8],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.4, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.2666666666666667, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.4, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.4, 0.9],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.4, 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.2666666666666667, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.4, 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.4, 1.],
      Editable->False,
      Selectable->False]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0.],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0.1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.33333333333333337`, 0.06666666666666668],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0.1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0.1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0.1],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.33333333333333337`, 0.13333333333333336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0.2]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0.2]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0.2],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0.30000000000000004`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.33333333333333337`, 0.20000000000000004`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0.30000000000000004]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.5, 0.30000000000000004`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0.30000000000000004`],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.33333333333333337`, 0.2666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0.4]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0.4],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.33333333333333337`, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0.5],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0.6000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.33333333333333337`, 0.4000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0.6000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.5, 0.6000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0.6000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0.7000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.33333333333333337`, 0.46666666666666673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0.7000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.5, 0.7000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0.7000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.33333333333333337`, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0.8],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.33333333333333337`, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0.9],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.33333333333333337`, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 1.],
      Editable->False,
      Selectable->False]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6000000000000001, 0.], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.4000000000000001, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6000000000000001, 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.6000000000000001, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6000000000000001, 0.],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6000000000000001, 0.1], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.4000000000000001, 0.06666666666666668],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6000000000000001, 0.1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.6000000000000001, 0.1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6000000000000001, 0.1],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6000000000000001, 0.2], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.4000000000000001, 0.13333333333333336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6000000000000001, 0.2]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.6000000000000001, 0.2]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6000000000000001, 0.2],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6000000000000001, 0.30000000000000004`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.4000000000000001, 0.20000000000000004`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6000000000000001, 0.30000000000000004]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.6000000000000001, 0.30000000000000004`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6000000000000001, 0.30000000000000004`],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6000000000000001, 0.4], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.4000000000000001, 0.2666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6000000000000001, 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.6000000000000001, 0.4]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6000000000000001, 0.4],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6000000000000001, 0.5], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.4000000000000001, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6000000000000001, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.6000000000000001, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6000000000000001, 0.5],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6000000000000001, 0.6000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.4000000000000001, 0.4000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6000000000000001, 0.6000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.6000000000000001, 0.6000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6000000000000001, 0.6000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6000000000000001, 0.7000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.4000000000000001, 0.46666666666666673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6000000000000001, 0.7000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.6000000000000001, 0.7000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6000000000000001, 0.7000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6000000000000001, 0.8], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.4000000000000001, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6000000000000001, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.6000000000000001, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6000000000000001, 0.8],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6000000000000001, 0.9], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.4000000000000001, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6000000000000001, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.6000000000000001, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6000000000000001, 0.9],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6000000000000001, 1.], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.4000000000000001, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6000000000000001, 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.6000000000000001, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6000000000000001, 1.],
      Editable->False,
      Selectable->False]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7000000000000001, 0.], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.46666666666666673`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7000000000000001, 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.7000000000000001, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7000000000000001, 0.],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7000000000000001, 0.1], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.46666666666666673`, 0.06666666666666668],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7000000000000001, 0.1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.7000000000000001, 0.1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7000000000000001, 0.1],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7000000000000001, 0.2], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.46666666666666673`, 0.13333333333333336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7000000000000001, 0.2]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.7000000000000001, 0.2]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7000000000000001, 0.2],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7000000000000001, 0.30000000000000004`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.46666666666666673`, 0.20000000000000004`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7000000000000001, 0.30000000000000004]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.7000000000000001, 0.30000000000000004`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7000000000000001, 0.30000000000000004`],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7000000000000001, 0.4], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.46666666666666673`, 0.2666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7000000000000001, 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.7000000000000001, 0.4]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7000000000000001, 0.4],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7000000000000001, 0.5], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.46666666666666673`, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7000000000000001, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.7000000000000001, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7000000000000001, 0.5],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7000000000000001, 0.6000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.46666666666666673`, 0.4000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7000000000000001, 0.6000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.7000000000000001, 0.6000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7000000000000001, 0.6000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7000000000000001, 0.7000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.46666666666666673`, 0.46666666666666673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7000000000000001, 0.7000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.7000000000000001, 0.7000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7000000000000001, 0.7000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7000000000000001, 0.8], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.46666666666666673`, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7000000000000001, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.7000000000000001, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7000000000000001, 0.8],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7000000000000001, 0.9], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.46666666666666673`, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7000000000000001, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.7000000000000001, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7000000000000001, 0.9],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7000000000000001, 1.], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.46666666666666673`, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7000000000000001, 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.7000000000000001, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7000000000000001, 1.],
      Editable->False,
      Selectable->False]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.5333333333333334, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0.],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0.1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.5333333333333334, 0.06666666666666668],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0.1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0.1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0.1],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.5333333333333334, 0.13333333333333336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0.2]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0.2]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0.2],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0.30000000000000004`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.5333333333333334, 0.20000000000000004`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0.30000000000000004]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.8, 0.30000000000000004`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0.30000000000000004`],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.5333333333333334, 0.2666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0.4]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0.4],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.5333333333333334, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0.5],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0.6000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.5333333333333334, 0.4000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0.6000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.8, 0.6000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0.6000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0.7000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.5333333333333334, 0.46666666666666673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0.7000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.8, 0.7000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0.7000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.5333333333333334, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0.8],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.5333333333333334, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0.9],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.5333333333333334, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 1.],
      Editable->False,
      Selectable->False]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.6000000000000001, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0.],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0.1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6000000000000001, 0.06666666666666668],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0.1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0.1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0.1],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6000000000000001, 0.13333333333333336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0.2]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0.2]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0.2],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0.30000000000000004`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6000000000000001, 0.20000000000000004`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0.30000000000000004]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.9, 0.30000000000000004`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0.30000000000000004`],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6000000000000001, 0.2666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0.4]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0.4],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6000000000000001, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0.5],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0.6000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6000000000000001, 0.4000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0.6000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.9, 0.6000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0.6000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0.7000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6000000000000001, 0.46666666666666673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0.7000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.9, 0.7000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0.7000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6000000000000001, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0.8],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6000000000000001, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0.9],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6000000000000001, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 1.],
      Editable->False,
      Selectable->False]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0.],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0.1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6666666666666667, 0.06666666666666668],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0.1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0.1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0.1],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0.2], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6666666666666667, 0.13333333333333336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0.2]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0.2]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0.2],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0.30000000000000004`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6666666666666667, 0.20000000000000004`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0.30000000000000004]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 1., 0.30000000000000004`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0.30000000000000004`],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0.4], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6666666666666667, 0.2666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0.4]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0.4],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6666666666666667, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0.5],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0.6000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6666666666666667, 0.4000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0.6000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 1., 0.6000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0.6000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0.7000000000000001], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6666666666666667, 0.46666666666666673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0.7000000000000001]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 1., 0.7000000000000001]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0.7000000000000001],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0.8], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6666666666666667, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0.8],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0.9], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6666666666666667, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0.9],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666666, 0.6666666666666667, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 1.],
      Editable->False,
      Selectable->False]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6614559754918213`*^9, 3.661455999940423*^9}, 
   3.661621517049869*^9}]
}, Open  ]],

Cell[TextData[{
 "We can use the same ",
 StyleBox["Table",
  FontWeight->"Bold"],
 " command to generate a grid of rectangles or disks"
}], "Text",
 CellChangeTimes->{{3.661625997036208*^9, 3.6616260124171867`*^9}, {
  3.66162617684654*^9, 3.661626178589477*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "g", ",", "b"}], "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "*", "10"}], ",", 
          RowBox[{"b", "*", "10"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g", "-", ".1"}], ")"}], "*", "10"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", ".1"}], ")"}], "*", "10"}]}], "}"}]}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "0", ",", "1", ",", ".1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", "1", ",", ".1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6616260194964113`*^9, 3.66162614616327*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[1, 0., 0.], RectangleBox[{0., 0.}, {-1., -1.}]}, 
    {RGBColor[1, 0., 0.1], RectangleBox[{0., 1.}, {-1., 0.}]}, 
    {RGBColor[1, 0., 0.2], RectangleBox[{0., 2.}, {-1., 1.}]}, 
    {RGBColor[1, 0., 0.30000000000000004`], 
     RectangleBox[{0., 3.0000000000000004`}, {-1., 2.0000000000000004`}]}, 
    {RGBColor[1, 0., 0.4], 
     RectangleBox[{0., 4.}, {-1., 3.0000000000000004`}]}, 
    {RGBColor[1, 0., 0.5], RectangleBox[{0., 5.}, {-1., 4.}]}, 
    {RGBColor[1, 0., 0.6000000000000001], 
     RectangleBox[{0., 6.000000000000001}, {-1., 5.000000000000001}]}, 
    {RGBColor[1, 0., 0.7000000000000001], 
     RectangleBox[{0., 7.000000000000001}, {-1., 6.000000000000001}]}, 
    {RGBColor[1, 0., 0.8], 
     RectangleBox[{0., 8.}, {-1., 7.000000000000001}]}, 
    {RGBColor[1, 0., 0.9], RectangleBox[{0., 9.}, {-1., 8.}]}, 
    {RGBColor[1, 0., 1.], RectangleBox[{0., 10.}, {-1., 9.}]}}, {
    {RGBColor[1, 0.1, 0.], RectangleBox[{1., 0.}, {0., -1.}]}, 
    {RGBColor[1, 0.1, 0.1], RectangleBox[{1., 1.}, {0., 0.}]}, 
    {RGBColor[1, 0.1, 0.2], RectangleBox[{1., 2.}, {0., 1.}]}, 
    {RGBColor[1, 0.1, 0.30000000000000004`], 
     RectangleBox[{1., 3.0000000000000004`}, {0., 2.0000000000000004`}]}, 
    {RGBColor[1, 0.1, 0.4], 
     RectangleBox[{1., 4.}, {0., 3.0000000000000004`}]}, 
    {RGBColor[1, 0.1, 0.5], RectangleBox[{1., 5.}, {0., 4.}]}, 
    {RGBColor[1, 0.1, 0.6000000000000001], 
     RectangleBox[{1., 6.000000000000001}, {0., 5.000000000000001}]}, 
    {RGBColor[1, 0.1, 0.7000000000000001], 
     RectangleBox[{1., 7.000000000000001}, {0., 6.000000000000001}]}, 
    {RGBColor[1, 0.1, 0.8], 
     RectangleBox[{1., 8.}, {0., 7.000000000000001}]}, 
    {RGBColor[1, 0.1, 0.9], RectangleBox[{1., 9.}, {0., 8.}]}, 
    {RGBColor[1, 0.1, 1.], RectangleBox[{1., 10.}, {0., 9.}]}}, {
    {RGBColor[1, 0.2, 0.], RectangleBox[{2., 0.}, {1., -1.}]}, 
    {RGBColor[1, 0.2, 0.1], RectangleBox[{2., 1.}, {1., 0.}]}, 
    {RGBColor[1, 0.2, 0.2], RectangleBox[{2., 2.}, {1., 1.}]}, 
    {RGBColor[1, 0.2, 0.30000000000000004`], 
     RectangleBox[{2., 3.0000000000000004`}, {1., 2.0000000000000004`}]}, 
    {RGBColor[1, 0.2, 0.4], 
     RectangleBox[{2., 4.}, {1., 3.0000000000000004`}]}, 
    {RGBColor[1, 0.2, 0.5], RectangleBox[{2., 5.}, {1., 4.}]}, 
    {RGBColor[1, 0.2, 0.6000000000000001], 
     RectangleBox[{2., 6.000000000000001}, {1., 5.000000000000001}]}, 
    {RGBColor[1, 0.2, 0.7000000000000001], 
     RectangleBox[{2., 7.000000000000001}, {1., 6.000000000000001}]}, 
    {RGBColor[1, 0.2, 0.8], 
     RectangleBox[{2., 8.}, {1., 7.000000000000001}]}, 
    {RGBColor[1, 0.2, 0.9], RectangleBox[{2., 9.}, {1., 8.}]}, 
    {RGBColor[1, 0.2, 1.], RectangleBox[{2., 10.}, {1., 9.}]}}, {
    {RGBColor[1, 0.30000000000000004`, 0.], 
     RectangleBox[{3.0000000000000004`, 0.}, {2.0000000000000004`, -1.}]}, 
    {RGBColor[1, 0.30000000000000004`, 0.1], 
     RectangleBox[{3.0000000000000004`, 1.}, {2.0000000000000004`, 0.}]}, 
    {RGBColor[1, 0.30000000000000004`, 0.2], 
     RectangleBox[{3.0000000000000004`, 2.}, {2.0000000000000004`, 1.}]}, 
    {RGBColor[1, 0.30000000000000004`, 0.30000000000000004`], 
     RectangleBox[{3.0000000000000004`, 3.0000000000000004`}, \
{2.0000000000000004`, 2.0000000000000004`}]}, 
    {RGBColor[1, 0.30000000000000004`, 0.4], 
     RectangleBox[{3.0000000000000004`, 4.}, \
{2.0000000000000004`, 3.0000000000000004`}]}, 
    {RGBColor[1, 0.30000000000000004`, 0.5], 
     RectangleBox[{3.0000000000000004`, 5.}, {2.0000000000000004`, 4.}]}, 
    {RGBColor[1, 0.30000000000000004`, 0.6000000000000001], 
     RectangleBox[{3.0000000000000004`, 6.000000000000001}, \
{2.0000000000000004`, 5.000000000000001}]}, 
    {RGBColor[1, 0.30000000000000004`, 0.7000000000000001], 
     RectangleBox[{3.0000000000000004`, 7.000000000000001}, \
{2.0000000000000004`, 6.000000000000001}]}, 
    {RGBColor[1, 0.30000000000000004`, 0.8], 
     RectangleBox[{3.0000000000000004`, 8.}, \
{2.0000000000000004`, 7.000000000000001}]}, 
    {RGBColor[1, 0.30000000000000004`, 0.9], 
     RectangleBox[{3.0000000000000004`, 9.}, {2.0000000000000004`, 8.}]}, 
    {RGBColor[1, 0.30000000000000004`, 1.], 
     RectangleBox[{3.0000000000000004`, 10.}, {2.0000000000000004`, 9.}]}}, {
    {RGBColor[1, 0.4, 0.], 
     RectangleBox[{4., 0.}, {3.0000000000000004`, -1.}]}, 
    {RGBColor[1, 0.4, 0.1], 
     RectangleBox[{4., 1.}, {3.0000000000000004`, 0.}]}, 
    {RGBColor[1, 0.4, 0.2], 
     RectangleBox[{4., 2.}, {3.0000000000000004`, 1.}]}, 
    {RGBColor[1, 0.4, 0.30000000000000004`], 
     RectangleBox[{4., 3.0000000000000004`}, \
{3.0000000000000004`, 2.0000000000000004`}]}, 
    {RGBColor[1, 0.4, 0.4], 
     RectangleBox[{4., 4.}, {3.0000000000000004`, 3.0000000000000004`}]}, 
    {RGBColor[1, 0.4, 0.5], 
     RectangleBox[{4., 5.}, {3.0000000000000004`, 4.}]}, 
    {RGBColor[1, 0.4, 0.6000000000000001], 
     RectangleBox[{4., 6.000000000000001}, \
{3.0000000000000004`, 5.000000000000001}]}, 
    {RGBColor[1, 0.4, 0.7000000000000001], 
     RectangleBox[{4., 7.000000000000001}, \
{3.0000000000000004`, 6.000000000000001}]}, 
    {RGBColor[1, 0.4, 0.8], 
     RectangleBox[{4., 8.}, {3.0000000000000004`, 7.000000000000001}]}, 
    {RGBColor[1, 0.4, 0.9], 
     RectangleBox[{4., 9.}, {3.0000000000000004`, 8.}]}, 
    {RGBColor[1, 0.4, 1.], 
     RectangleBox[{4., 10.}, {3.0000000000000004`, 9.}]}}, {
    {RGBColor[1, 0.5, 0.], RectangleBox[{5., 0.}, {4., -1.}]}, 
    {RGBColor[1, 0.5, 0.1], RectangleBox[{5., 1.}, {4., 0.}]}, 
    {RGBColor[1, 0.5, 0.2], RectangleBox[{5., 2.}, {4., 1.}]}, 
    {RGBColor[1, 0.5, 0.30000000000000004`], 
     RectangleBox[{5., 3.0000000000000004`}, {4., 2.0000000000000004`}]}, 
    {RGBColor[1, 0.5, 0.4], 
     RectangleBox[{5., 4.}, {4., 3.0000000000000004`}]}, 
    {RGBColor[1, 0.5, 0.5], RectangleBox[{5., 5.}, {4., 4.}]}, 
    {RGBColor[1, 0.5, 0.6000000000000001], 
     RectangleBox[{5., 6.000000000000001}, {4., 5.000000000000001}]}, 
    {RGBColor[1, 0.5, 0.7000000000000001], 
     RectangleBox[{5., 7.000000000000001}, {4., 6.000000000000001}]}, 
    {RGBColor[1, 0.5, 0.8], 
     RectangleBox[{5., 8.}, {4., 7.000000000000001}]}, 
    {RGBColor[1, 0.5, 0.9], RectangleBox[{5., 9.}, {4., 8.}]}, 
    {RGBColor[1, 0.5, 1.], RectangleBox[{5., 10.}, {4., 9.}]}}, {
    {RGBColor[1, 0.6000000000000001, 0.], 
     RectangleBox[{6.000000000000001, 0.}, {5.000000000000001, -1.}]}, 
    {RGBColor[1, 0.6000000000000001, 0.1], 
     RectangleBox[{6.000000000000001, 1.}, {5.000000000000001, 0.}]}, 
    {RGBColor[1, 0.6000000000000001, 0.2], 
     RectangleBox[{6.000000000000001, 2.}, {5.000000000000001, 1.}]}, 
    {RGBColor[1, 0.6000000000000001, 0.30000000000000004`], 
     RectangleBox[{6.000000000000001, 3.0000000000000004`}, \
{5.000000000000001, 2.0000000000000004`}]}, 
    {RGBColor[1, 0.6000000000000001, 0.4], 
     RectangleBox[{6.000000000000001, 4.}, \
{5.000000000000001, 3.0000000000000004`}]}, 
    {RGBColor[1, 0.6000000000000001, 0.5], 
     RectangleBox[{6.000000000000001, 5.}, {5.000000000000001, 4.}]}, 
    {RGBColor[1, 0.6000000000000001, 0.6000000000000001], 
     RectangleBox[{6.000000000000001, 6.000000000000001}, \
{5.000000000000001, 5.000000000000001}]}, 
    {RGBColor[1, 0.6000000000000001, 0.7000000000000001], 
     RectangleBox[{6.000000000000001, 7.000000000000001}, \
{5.000000000000001, 6.000000000000001}]}, 
    {RGBColor[1, 0.6000000000000001, 0.8], 
     RectangleBox[{6.000000000000001, 8.}, \
{5.000000000000001, 7.000000000000001}]}, 
    {RGBColor[1, 0.6000000000000001, 0.9], 
     RectangleBox[{6.000000000000001, 9.}, {5.000000000000001, 8.}]}, 
    {RGBColor[1, 0.6000000000000001, 1.], 
     RectangleBox[{6.000000000000001, 10.}, {5.000000000000001, 9.}]}}, {
    {RGBColor[1, 0.7000000000000001, 0.], 
     RectangleBox[{7.000000000000001, 0.}, {6.000000000000001, -1.}]}, 
    {RGBColor[1, 0.7000000000000001, 0.1], 
     RectangleBox[{7.000000000000001, 1.}, {6.000000000000001, 0.}]}, 
    {RGBColor[1, 0.7000000000000001, 0.2], 
     RectangleBox[{7.000000000000001, 2.}, {6.000000000000001, 1.}]}, 
    {RGBColor[1, 0.7000000000000001, 0.30000000000000004`], 
     RectangleBox[{7.000000000000001, 3.0000000000000004`}, \
{6.000000000000001, 2.0000000000000004`}]}, 
    {RGBColor[1, 0.7000000000000001, 0.4], 
     RectangleBox[{7.000000000000001, 4.}, \
{6.000000000000001, 3.0000000000000004`}]}, 
    {RGBColor[1, 0.7000000000000001, 0.5], 
     RectangleBox[{7.000000000000001, 5.}, {6.000000000000001, 4.}]}, 
    {RGBColor[1, 0.7000000000000001, 0.6000000000000001], 
     RectangleBox[{7.000000000000001, 6.000000000000001}, \
{6.000000000000001, 5.000000000000001}]}, 
    {RGBColor[1, 0.7000000000000001, 0.7000000000000001], 
     RectangleBox[{7.000000000000001, 7.000000000000001}, \
{6.000000000000001, 6.000000000000001}]}, 
    {RGBColor[1, 0.7000000000000001, 0.8], 
     RectangleBox[{7.000000000000001, 8.}, \
{6.000000000000001, 7.000000000000001}]}, 
    {RGBColor[1, 0.7000000000000001, 0.9], 
     RectangleBox[{7.000000000000001, 9.}, {6.000000000000001, 8.}]}, 
    {RGBColor[1, 0.7000000000000001, 1.], 
     RectangleBox[{7.000000000000001, 10.}, {6.000000000000001, 9.}]}}, {
    {RGBColor[1, 0.8, 0.], 
     RectangleBox[{8., 0.}, {7.000000000000001, -1.}]}, 
    {RGBColor[1, 0.8, 0.1], 
     RectangleBox[{8., 1.}, {7.000000000000001, 0.}]}, 
    {RGBColor[1, 0.8, 0.2], 
     RectangleBox[{8., 2.}, {7.000000000000001, 1.}]}, 
    {RGBColor[1, 0.8, 0.30000000000000004`], 
     RectangleBox[{8., 3.0000000000000004`}, \
{7.000000000000001, 2.0000000000000004`}]}, 
    {RGBColor[1, 0.8, 0.4], 
     RectangleBox[{8., 4.}, {7.000000000000001, 3.0000000000000004`}]}, 
    {RGBColor[1, 0.8, 0.5], 
     RectangleBox[{8., 5.}, {7.000000000000001, 4.}]}, 
    {RGBColor[1, 0.8, 0.6000000000000001], 
     RectangleBox[{8., 6.000000000000001}, \
{7.000000000000001, 5.000000000000001}]}, 
    {RGBColor[1, 0.8, 0.7000000000000001], 
     RectangleBox[{8., 7.000000000000001}, \
{7.000000000000001, 6.000000000000001}]}, 
    {RGBColor[1, 0.8, 0.8], 
     RectangleBox[{8., 8.}, {7.000000000000001, 7.000000000000001}]}, 
    {RGBColor[1, 0.8, 0.9], 
     RectangleBox[{8., 9.}, {7.000000000000001, 8.}]}, 
    {RGBColor[1, 0.8, 1.], 
     RectangleBox[{8., 10.}, {7.000000000000001, 9.}]}}, {
    {RGBColor[1, 0.9, 0.], RectangleBox[{9., 0.}, {8., -1.}]}, 
    {RGBColor[1, 0.9, 0.1], RectangleBox[{9., 1.}, {8., 0.}]}, 
    {RGBColor[1, 0.9, 0.2], RectangleBox[{9., 2.}, {8., 1.}]}, 
    {RGBColor[1, 0.9, 0.30000000000000004`], 
     RectangleBox[{9., 3.0000000000000004`}, {8., 2.0000000000000004`}]}, 
    {RGBColor[1, 0.9, 0.4], 
     RectangleBox[{9., 4.}, {8., 3.0000000000000004`}]}, 
    {RGBColor[1, 0.9, 0.5], RectangleBox[{9., 5.}, {8., 4.}]}, 
    {RGBColor[1, 0.9, 0.6000000000000001], 
     RectangleBox[{9., 6.000000000000001}, {8., 5.000000000000001}]}, 
    {RGBColor[1, 0.9, 0.7000000000000001], 
     RectangleBox[{9., 7.000000000000001}, {8., 6.000000000000001}]}, 
    {RGBColor[1, 0.9, 0.8], 
     RectangleBox[{9., 8.}, {8., 7.000000000000001}]}, 
    {RGBColor[1, 0.9, 0.9], RectangleBox[{9., 9.}, {8., 8.}]}, 
    {RGBColor[1, 0.9, 1.], RectangleBox[{9., 10.}, {8., 9.}]}}, {
    {RGBColor[1, 1., 0.], RectangleBox[{10., 0.}, {9., -1.}]}, 
    {RGBColor[1, 1., 0.1], RectangleBox[{10., 1.}, {9., 0.}]}, 
    {RGBColor[1, 1., 0.2], RectangleBox[{10., 2.}, {9., 1.}]}, 
    {RGBColor[1, 1., 0.30000000000000004`], 
     RectangleBox[{10., 3.0000000000000004`}, {9., 2.0000000000000004`}]}, 
    {RGBColor[1, 1., 0.4], 
     RectangleBox[{10., 4.}, {9., 3.0000000000000004`}]}, 
    {RGBColor[1, 1., 0.5], RectangleBox[{10., 5.}, {9., 4.}]}, 
    {RGBColor[1, 1., 0.6000000000000001], 
     RectangleBox[{10., 6.000000000000001}, {9., 5.000000000000001}]}, 
    {RGBColor[1, 1., 0.7000000000000001], 
     RectangleBox[{10., 7.000000000000001}, {9., 6.000000000000001}]}, 
    {RGBColor[1, 1., 0.8], 
     RectangleBox[{10., 8.}, {9., 7.000000000000001}]}, 
    {RGBColor[1, 1., 0.9], RectangleBox[{10., 9.}, {9., 8.}]}, 
    {RGBColor[1, 1., 1.], RectangleBox[{10., 10.}, {9., 9.}]}}}]], "Output",
 CellChangeTimes->{{3.6616261282426443`*^9, 3.661626146609508*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "g", ",", "b"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "*", "10"}], ",", 
          RowBox[{"b", "*", "10"}]}], "}"}], ",", 
        RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "0", ",", "1", ",", ".1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", "1", ",", ".1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6616260194964113`*^9, 3.66162614616327*^9}, {
  3.661626186005131*^9, 3.661626207248661*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[1, 0., 0.], DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0., 0.1], DiskBox[{0., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0., 0.2], DiskBox[{0., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0., 0.30000000000000004`], 
     DiskBox[{0., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0., 0.4], DiskBox[{0., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0., 0.5], DiskBox[{0., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0., 0.6000000000000001], 
     DiskBox[{0., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0., 0.7000000000000001], 
     DiskBox[{0., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0., 0.8], DiskBox[{0., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0., 0.9], DiskBox[{0., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0., 1.], 
     DiskBox[{0., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {RGBColor[1, 0.1, 0.], DiskBox[{1., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.1, 0.1], DiskBox[{1., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.1, 0.2], DiskBox[{1., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.1, 0.30000000000000004`], 
     DiskBox[{1., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.1, 0.4], DiskBox[{1., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.1, 0.5], DiskBox[{1., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.1, 0.6000000000000001], 
     DiskBox[{1., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.1, 0.7000000000000001], 
     DiskBox[{1., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.1, 0.8], DiskBox[{1., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.1, 0.9], DiskBox[{1., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.1, 1.], DiskBox[{1., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {RGBColor[1, 0.2, 0.], DiskBox[{2., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.2, 0.1], DiskBox[{2., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.2, 0.2], DiskBox[{2., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.2, 0.30000000000000004`], 
     DiskBox[{2., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.2, 0.4], DiskBox[{2., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.2, 0.5], DiskBox[{2., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.2, 0.6000000000000001], 
     DiskBox[{2., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.2, 0.7000000000000001], 
     DiskBox[{2., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.2, 0.8], DiskBox[{2., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.2, 0.9], DiskBox[{2., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.2, 1.], DiskBox[{2., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {RGBColor[1, 0.30000000000000004`, 0.], 
     DiskBox[{3.0000000000000004`, 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.30000000000000004`, 0.1], 
     DiskBox[{3.0000000000000004`, 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.30000000000000004`, 0.2], 
     DiskBox[{3.0000000000000004`, 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.30000000000000004`, 0.30000000000000004`], 
     DiskBox[{3.0000000000000004`, 3.0000000000000004`}, NCache[
      Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.30000000000000004`, 0.4], 
     DiskBox[{3.0000000000000004`, 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.30000000000000004`, 0.5], 
     DiskBox[{3.0000000000000004`, 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.30000000000000004`, 0.6000000000000001], 
     DiskBox[{3.0000000000000004`, 6.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.30000000000000004`, 0.7000000000000001], 
     DiskBox[{3.0000000000000004`, 7.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.30000000000000004`, 0.8], 
     DiskBox[{3.0000000000000004`, 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.30000000000000004`, 0.9], 
     DiskBox[{3.0000000000000004`, 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.30000000000000004`, 1.], 
     DiskBox[{3.0000000000000004`, 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {RGBColor[1, 0.4, 0.], DiskBox[{4., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.4, 0.1], DiskBox[{4., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.4, 0.2], DiskBox[{4., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.4, 0.30000000000000004`], 
     DiskBox[{4., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.4, 0.4], DiskBox[{4., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.4, 0.5], DiskBox[{4., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.4, 0.6000000000000001], 
     DiskBox[{4., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.4, 0.7000000000000001], 
     DiskBox[{4., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.4, 0.8], DiskBox[{4., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.4, 0.9], DiskBox[{4., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.4, 1.], DiskBox[{4., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {RGBColor[1, 0.5, 0.], DiskBox[{5., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.5, 0.1], DiskBox[{5., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.5, 0.2], DiskBox[{5., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.5, 0.30000000000000004`], 
     DiskBox[{5., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.5, 0.4], DiskBox[{5., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.5, 0.5], DiskBox[{5., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.5, 0.6000000000000001], 
     DiskBox[{5., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.5, 0.7000000000000001], 
     DiskBox[{5., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.5, 0.8], DiskBox[{5., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.5, 0.9], DiskBox[{5., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.5, 1.], DiskBox[{5., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {RGBColor[1, 0.6000000000000001, 0.], 
     DiskBox[{6.000000000000001, 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.6000000000000001, 0.1], 
     DiskBox[{6.000000000000001, 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.6000000000000001, 0.2], 
     DiskBox[{6.000000000000001, 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.6000000000000001, 0.30000000000000004`], 
     DiskBox[{6.000000000000001, 3.0000000000000004`}, NCache[
      Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.6000000000000001, 0.4], 
     DiskBox[{6.000000000000001, 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.6000000000000001, 0.5], 
     DiskBox[{6.000000000000001, 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.6000000000000001, 0.6000000000000001], 
     DiskBox[{6.000000000000001, 6.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.6000000000000001, 0.7000000000000001], 
     DiskBox[{6.000000000000001, 7.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.6000000000000001, 0.8], 
     DiskBox[{6.000000000000001, 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.6000000000000001, 0.9], 
     DiskBox[{6.000000000000001, 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.6000000000000001, 1.], 
     DiskBox[{6.000000000000001, 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {RGBColor[1, 0.7000000000000001, 0.], 
     DiskBox[{7.000000000000001, 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.7000000000000001, 0.1], 
     DiskBox[{7.000000000000001, 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.7000000000000001, 0.2], 
     DiskBox[{7.000000000000001, 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.7000000000000001, 0.30000000000000004`], 
     DiskBox[{7.000000000000001, 3.0000000000000004`}, NCache[
      Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.7000000000000001, 0.4], 
     DiskBox[{7.000000000000001, 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.7000000000000001, 0.5], 
     DiskBox[{7.000000000000001, 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.7000000000000001, 0.6000000000000001], 
     DiskBox[{7.000000000000001, 6.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.7000000000000001, 0.7000000000000001], 
     DiskBox[{7.000000000000001, 7.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.7000000000000001, 0.8], 
     DiskBox[{7.000000000000001, 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.7000000000000001, 0.9], 
     DiskBox[{7.000000000000001, 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.7000000000000001, 1.], 
     DiskBox[{7.000000000000001, 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {RGBColor[1, 0.8, 0.], DiskBox[{8., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.8, 0.1], DiskBox[{8., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.8, 0.2], DiskBox[{8., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.8, 0.30000000000000004`], 
     DiskBox[{8., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.8, 0.4], DiskBox[{8., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.8, 0.5], DiskBox[{8., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.8, 0.6000000000000001], 
     DiskBox[{8., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.8, 0.7000000000000001], 
     DiskBox[{8., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.8, 0.8], DiskBox[{8., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.8, 0.9], DiskBox[{8., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.8, 1.], DiskBox[{8., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {RGBColor[1, 0.9, 0.], DiskBox[{9., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.9, 0.1], DiskBox[{9., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.9, 0.2], DiskBox[{9., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.9, 0.30000000000000004`], 
     DiskBox[{9., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.9, 0.4], DiskBox[{9., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.9, 0.5], DiskBox[{9., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.9, 0.6000000000000001], 
     DiskBox[{9., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.9, 0.7000000000000001], 
     DiskBox[{9., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.9, 0.8], DiskBox[{9., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.9, 0.9], DiskBox[{9., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 0.9, 1.], DiskBox[{9., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {RGBColor[1, 1., 0.], DiskBox[{10., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 1., 0.1], DiskBox[{10., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 1., 0.2], DiskBox[{10., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 1., 0.30000000000000004`], 
     DiskBox[{10., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 1., 0.4], DiskBox[{10., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 1., 0.5], DiskBox[{10., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 1., 0.6000000000000001], 
     DiskBox[{10., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 1., 0.7000000000000001], 
     DiskBox[{10., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 1., 0.8], DiskBox[{10., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 1., 0.9], DiskBox[{10., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {RGBColor[1, 1., 1.], 
     DiskBox[{10., 10.}, NCache[Rational[1, 2], 0.5]]}}}]], "Output",
 CellChangeTimes->{{3.6616261976349*^9, 3.661626207673894*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["ColorSetter and ColorSlider", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.6614572564923153`*^9, 3.661457261498452*^9}}],

Cell[TextData[{
 "If you aren\[CloseCurlyQuote]t sure how a colour like Brown is created from \
a mixture of Red, Green and Blue, it can sometimes be hard to find the \
parameter values. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " provides access to your operating system\[CloseCurlyQuote]s colour chooser \
via the ",
 StyleBox["ColorSetter",
  FontWeight->"Bold"],
 " and ",
 StyleBox["ColorSlider",
  FontWeight->"Bold"],
 " commands. In order to get them to output RGB values, I have included some \
code that we haven\[CloseCurlyQuote]t learned yet (the ",
 StyleBox["Dynamic",
  FontWeight->"Bold"],
 " command). For now, you can just copy one of these expressions when you \
need to discover RGB values."
}], "Text",
 CellChangeTimes->{{3.6614560380618258`*^9, 3.661456042013389*^9}, {
  3.6614570824505157`*^9, 3.661457130001483*^9}, {3.661457279463997*^9, 
  3.66145735648186*^9}, {3.6614575408973627`*^9, 3.661457543664996*^9}, {
  3.66162624982617*^9, 3.661626257880251*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorSetter", "[", 
  RowBox[{"Dynamic", "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6614571936395206`*^9, 3.66145719370252*^9}, {
  3.661457234520259*^9, 3.6614572438137293`*^9}, {3.661457360729678*^9, 
  3.661457361409095*^9}, {3.661457401330274*^9, 3.661457402961619*^9}, {
  3.6614575034488792`*^9, 3.661457508359138*^9}},
 CellID->420133799],

Cell[BoxData[
 ColorSetterBox[Dynamic[$CellContext`t], "Swatch"]], "Output",
 CellChangeTimes->{3.6614573619819*^9, 3.66145740380267*^9, 
  3.6614575090372057`*^9, 3.661621517178339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorSlider", "[", 
  RowBox[{"Dynamic", "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6614571936395206`*^9, 3.66145719370252*^9}, {
  3.661457234520259*^9, 3.6614572438137293`*^9}, {3.661457395962975*^9, 
  3.66145741707092*^9}, {3.6614574628400183`*^9, 3.661457466175412*^9}},
 CellID->19067990],

Cell[BoxData[
 ColorSetterBox[Dynamic[$CellContext`t], "SwatchSpectrum"]], "Output",
 CellChangeTimes->{
  3.661457153509891*^9, 3.661457194391965*^9, 3.661457238021783*^9, {
   3.661457417880752*^9, 3.661457471186655*^9}, 3.6616215171974382`*^9}]
}, Open  ]],

Cell["\<\
Once you find a colour you like, you use InputForm command to get the RGB \
values\
\>", "Text",
 CellChangeTimes->{{3.6614574796848097`*^9, 3.6614575253641663`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.661457454725774*^9, 3.66145745904838*^9}}],

Cell["RGBColor[0., 0., 0.]", "Output",
 CellChangeTimes->{{3.661457459488006*^9, 3.661457475227414*^9}, 
   3.661457516557797*^9, 3.66162151723251*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["The Blend command", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.6616251760861883`*^9, 3.6616251783565693`*^9}}],

Cell[TextData[{
 "Another way to generate a gradient is with the ",
 StyleBox["Blend",
  FontWeight->"Bold"],
 " command. The colour that is 3/8 of the way from Blue to Green is"
}], "Text",
 CellChangeTimes->{{3.661456959008542*^9, 3.661456968630406*^9}, {
  3.6614570079278517`*^9, 3.6614570367701483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Green"}], "}"}], ",", 
       RowBox[{"3", "/", "8"}]}], "]"}], ",", 
     RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661457045313528*^9, 3.661457070356089*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 
    NCache[
     Rational[3, 8], 0.375], 
    NCache[
     Rational[5, 8], 0.625]], DiskBox[{0, 0}]},
  ImageSize->Small]], "Output",
 CellChangeTimes->{{3.661457046411572*^9, 3.661457070694631*^9}, 
   3.6616215171282*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Blend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Green"}], "}"}], ",", 
        RowBox[{"x", "/", "8"}]}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "8"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.661624369773768*^9, 3.661624383280843*^9}, {
  3.66162464336654*^9, 3.6616247152032957`*^9}, {3.661624804444769*^9, 
  3.661624806803266*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 
     NCache[
      Rational[1, 8], 0.125], 
     NCache[
      Rational[7, 8], 0.875]], DiskBox[{1, 0}]}, 
   {RGBColor[0, 
     NCache[
      Rational[1, 4], 0.25], 
     NCache[
      Rational[3, 4], 0.75]], DiskBox[{2, 0}]}, 
   {RGBColor[0, 
     NCache[
      Rational[3, 8], 0.375], 
     NCache[
      Rational[5, 8], 0.625]], DiskBox[{3, 0}]}, 
   {RGBColor[0, 
     NCache[
      Rational[1, 2], 0.5], 
     NCache[
      Rational[1, 2], 0.5]], DiskBox[{4, 0}]}, 
   {RGBColor[0, 
     NCache[
      Rational[5, 8], 0.625], 
     NCache[
      Rational[3, 8], 0.375]], DiskBox[{5, 0}]}, 
   {RGBColor[0, 
     NCache[
      Rational[3, 4], 0.75], 
     NCache[
      Rational[1, 4], 0.25]], DiskBox[{6, 0}]}, 
   {RGBColor[0, 
     NCache[
      Rational[7, 8], 0.875], 
     NCache[
      Rational[1, 8], 0.125]], DiskBox[{7, 0}]}, 
   {RGBColor[0, 1, 0], DiskBox[{8, 0}]}}]], "Output",
 CellChangeTimes->{{3.661624706397505*^9, 3.661624715680214*^9}, 
   3.661624807464258*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["A more complicated example with Blend", "Subsection",
 CellChangeTimes->{{3.661624957106421*^9, 3.661624963552741*^9}}],

Cell[TextData[{
 "Recall that ",
 StyleBox["CirclePoints",
  FontWeight->"Bold"],
 " uses trigonometry to generate evenly spaced positions around a circle. The \
output is a list of pairs, such as"
}], "Text",
 CellChangeTimes->{{3.661624966847972*^9, 3.661624997627549*^9}, {
  3.661625031710189*^9, 3.661625048042756*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CirclePoints", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.661625049839841*^9, 3.661625055730056*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SqrtBox["3"], "2"], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.661625056076558*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["Part",
  FontWeight->"Bold"],
 " command allows us to choose an element from a list. It is usually \
abbreviated with double square brackets. To make those, use \[EscapeKey][[\
\[EscapeKey] and \[EscapeKey]]]\[EscapeKey]"
}], "Text",
 CellChangeTimes->{{3.661625062592279*^9, 3.661625119430884*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6616251241084967`*^9, 3.6616251320287437`*^9}}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.661625132561274*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.661625136152534*^9, 3.66162514216291*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.661625224045691*^9, 3.661625229940276*^9}}],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{3.661625230656191*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "\[LeftDoubleBracket]", "2", 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.661625232470495*^9, 3.661625236963238*^9}}],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{3.661625237688964*^9}]
}, Open  ]],

Cell[TextData[{
 "Study the following example carefully, until you understand how ",
 StyleBox["Part",
  FontWeight->"Bold"],
 " and ",
 StyleBox["CirclePoints",
  FontWeight->"Bold"],
 " are working together."
}], "Text",
 CellChangeTimes->{{3.661625245177547*^9, 3.6616252706373863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Blend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", "Yellow"}], "}"}], ",", 
        RowBox[{"x", "/", "24"}]}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CirclePoints", "[", "24", "]"}], "\[LeftDoubleBracket]", 
         "x", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "24"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.661624369773768*^9, 3.661624383280843*^9}, {
  3.66162464336654*^9, 3.66162482432024*^9}, {3.661625002443575*^9, 
  3.6616250245028353`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 
     NCache[
      Rational[1, 24], 0.041666666666666664`], 0], 
    DiskBox[NCache[{Sin[Rational[1, 24] Pi], -Cos[Rational[1, 24] Pi]}, {
      0.13052619222005157`, -0.9914448613738104}], NCache[
     Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[1, 12], 0.08333333333333333], 0], 
    DiskBox[NCache[{Sin[Rational[1, 8] Pi], -Cos[Rational[1, 8] Pi]}, {
      0.3826834323650898, -0.9238795325112867}], NCache[
     Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[1, 8], 0.125], 0], 
    DiskBox[NCache[{Sin[Rational[5, 24] Pi], -Cos[Rational[5, 24] Pi]}, {
      0.6087614290087207, -0.7933533402912352}], NCache[
     Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[1, 6], 0.16666666666666666`], 0], 
    DiskBox[NCache[{Cos[Rational[5, 24] Pi], -Sin[Rational[5, 24] Pi]}, {
      0.7933533402912352, -0.6087614290087207}], NCache[
     Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[5, 24], 0.20833333333333334`], 0], 
    DiskBox[NCache[{Cos[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi]}, {
      0.9238795325112867, -0.3826834323650898}], NCache[
     Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[1, 4], 0.25], 0], 
    DiskBox[NCache[{Cos[Rational[1, 24] Pi], -Sin[Rational[1, 24] Pi]}, {
      0.9914448613738104, -0.13052619222005157`}], NCache[
     Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[7, 24], 0.2916666666666667], 0], 
    DiskBox[NCache[{Cos[Rational[1, 24] Pi], Sin[Rational[1, 24] Pi]}, {
      0.9914448613738104, 0.13052619222005157`}], NCache[
     Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[1, 3], 0.3333333333333333], 0], 
    DiskBox[NCache[{Cos[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi]}, {
      0.9238795325112867, 0.3826834323650898}], NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[3, 8], 0.375], 0], 
    DiskBox[NCache[{Cos[Rational[5, 24] Pi], Sin[Rational[5, 24] Pi]}, {
      0.7933533402912352, 0.6087614290087207}], NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[5, 12], 0.4166666666666667], 0], 
    DiskBox[NCache[{Sin[Rational[5, 24] Pi], Cos[Rational[5, 24] Pi]}, {
      0.6087614290087207, 0.7933533402912352}], NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[11, 24], 0.4583333333333333], 0], 
    DiskBox[NCache[{Sin[Rational[1, 8] Pi], Cos[Rational[1, 8] Pi]}, {
      0.3826834323650898, 0.9238795325112867}], NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[1, 2], 0.5], 0], 
    DiskBox[NCache[{Sin[Rational[1, 24] Pi], Cos[Rational[1, 24] Pi]}, {
      0.13052619222005157`, 0.9914448613738104}], NCache[
     Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[13, 24], 0.5416666666666666], 0], 
    DiskBox[NCache[{-Sin[Rational[1, 24] Pi], Cos[
       Rational[1, 24] Pi]}, {-0.13052619222005157`, 0.9914448613738104}], 
     NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[7, 12], 0.5833333333333334], 0], 
    DiskBox[NCache[{-Sin[Rational[1, 8] Pi], Cos[
       Rational[1, 8] Pi]}, {-0.3826834323650898, 0.9238795325112867}], 
     NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[5, 8], 0.625], 0], 
    DiskBox[NCache[{-Sin[Rational[5, 24] Pi], Cos[
       Rational[5, 24] Pi]}, {-0.6087614290087207, 0.7933533402912352}], 
     NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], 
    DiskBox[NCache[{-Cos[Rational[5, 24] Pi], Sin[
       Rational[5, 24] Pi]}, {-0.7933533402912352, 0.6087614290087207}], 
     NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[17, 24], 0.7083333333333334], 0], 
    DiskBox[NCache[{-Cos[Rational[1, 8] Pi], Sin[
       Rational[1, 8] Pi]}, {-0.9238795325112867, 0.3826834323650898}], 
     NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[3, 4], 0.75], 0], 
    DiskBox[NCache[{-Cos[Rational[1, 24] Pi], Sin[
       Rational[1, 24] Pi]}, {-0.9914448613738104, 0.13052619222005157`}], 
     NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[19, 24], 0.7916666666666666], 0], 
    DiskBox[NCache[{-Cos[Rational[1, 24] Pi], -
       Sin[Rational[1, 24] 
         Pi]}, {-0.9914448613738104, -0.13052619222005157`}], NCache[
     Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[5, 6], 0.8333333333333334], 0], 
    DiskBox[NCache[{-Cos[Rational[1, 8] Pi], -
       Sin[Rational[1, 8] Pi]}, {-0.9238795325112867, -0.3826834323650898}], 
     NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[7, 8], 0.875], 0], 
    DiskBox[NCache[{-Cos[Rational[5, 24] Pi], -
       Sin[Rational[5, 24] Pi]}, {-0.7933533402912352, -0.6087614290087207}], 
     NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[11, 12], 0.9166666666666666], 0], 
    DiskBox[NCache[{-Sin[Rational[5, 24] Pi], -
       Cos[Rational[5, 24] Pi]}, {-0.6087614290087207, -0.7933533402912352}], 
     NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 
     NCache[
      Rational[23, 24], 0.9583333333333334], 0], 
    DiskBox[NCache[{-Sin[Rational[1, 8] Pi], -
       Cos[Rational[1, 8] Pi]}, {-0.3826834323650898, -0.9238795325112867}], 
     NCache[Rational[1, 2], 0.5]]}, 
   {RGBColor[1, 1, 0], 
    DiskBox[NCache[{-Sin[Rational[1, 24] Pi], -
       Cos[Rational[1, 24] 
         Pi]}, {-0.13052619222005157`, -0.9914448613738104}], NCache[
     Rational[1, 2], 0.5]]}}]], "Output",
 CellChangeTimes->{{3.661624757863003*^9, 3.661624824943285*^9}, {
  3.661625008058168*^9, 3.661625025020166*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Hue", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
   3.661457570805735*^9, 3.66145757104397*^9}, {3.6616252092412663`*^9, 
   3.661625210175488*^9}, 3.6616265334177237`*^9}],

Cell[TextData[{
 "The ",
 StyleBox["Hue",
  FontWeight->"Bold"],
 " command gives you a different way to specify colour, by providing \
parameters for its hue, saturation and brightness / value."
}], "Text",
 CellChangeTimes->{{3.6477163758185587`*^9, 3.647716376530898*^9}, {
  3.661457579723247*^9, 3.661457651581869*^9}}],

Cell[CellGroupData[{

Cell["Changing hue", "Subsection",
 CellChangeTimes->{{3.661626322078931*^9, 3.66162632847608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Hue", "[", 
        RowBox[{"h", ",", "1", ",", "1"}], "]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"h", "*", "10"}], ",", "0"}], "}"}], ",", 
         RowBox[{"1", "/", "3"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "0", ",", "1", ",", ".05"}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6616263486874733`*^9, 3.661626449751655*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0., 1, 1], 
    DiskBox[{0., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.05, 1, 1], 
    DiskBox[{0.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.1, 1, 1], 
    DiskBox[{1., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.15000000000000002`, 1, 1], 
    DiskBox[{1.5000000000000002`, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.2, 1, 1], 
    DiskBox[{2., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.25, 1, 1], 
    DiskBox[{2.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.30000000000000004`, 1, 1], 
    DiskBox[{3.0000000000000004`, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.35000000000000003`, 1, 1], 
    DiskBox[{3.5000000000000004`, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.4, 1, 1], 
    DiskBox[{4., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.45, 1, 1], 
    DiskBox[{4.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 1], 
    DiskBox[{5., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.55, 1, 1], 
    DiskBox[{5.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.6000000000000001, 1, 1], 
    DiskBox[{6.000000000000001, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.65, 1, 1], 
    DiskBox[{6.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.7000000000000001, 1, 1], 
    DiskBox[{7.000000000000001, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.75, 1, 1], 
    DiskBox[{7.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.8, 1, 1], 
    DiskBox[{8., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.8500000000000001, 1, 1], 
    DiskBox[{8.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.9, 1, 1], 
    DiskBox[{9., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.9500000000000001, 1, 1], 
    DiskBox[{9.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[1., 1, 1], 
    DiskBox[{10., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}},
  ImageSize->Full]], "Output",
 CellChangeTimes->{{3.661626402152811*^9, 3.661626450402457*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changing saturation", "Subsection",
 CellChangeTimes->{{3.6616263311156054`*^9, 3.66162633370689*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Hue", "[", 
        RowBox[{".5", ",", "s", ",", "1"}], "]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"s", "*", "10"}], ",", "0"}], "}"}], ",", 
         RowBox[{"1", "/", "3"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", "1", ",", ".05"}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6616263486874733`*^9, 3.661626449751655*^9}, {
  3.661626481602606*^9, 3.661626495039526*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.5, 0., 1], 
    DiskBox[{0., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.05, 1], 
    DiskBox[{0.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.1, 1], 
    DiskBox[{1., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.15000000000000002`, 1], 
    DiskBox[{1.5000000000000002`, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.2, 1], 
    DiskBox[{2., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.25, 1], 
    DiskBox[{2.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.30000000000000004`, 1], 
    DiskBox[{3.0000000000000004`, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.35000000000000003`, 1], 
    DiskBox[{3.5000000000000004`, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.4, 1], 
    DiskBox[{4., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.45, 1], 
    DiskBox[{4.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.5, 1], 
    DiskBox[{5., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.55, 1], 
    DiskBox[{5.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.6000000000000001, 1], 
    DiskBox[{6.000000000000001, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.65, 1], 
    DiskBox[{6.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.7000000000000001, 1], 
    DiskBox[{7.000000000000001, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.75, 1], 
    DiskBox[{7.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.8, 1], 
    DiskBox[{8., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.8500000000000001, 1], 
    DiskBox[{8.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.9, 1], 
    DiskBox[{9., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 0.9500000000000001, 1], 
    DiskBox[{9.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1., 1], 
    DiskBox[{10., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}},
  ImageSize->Full]], "Output",
 CellChangeTimes->{3.661626496961421*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changing brightness / value", "Subsection",
 CellChangeTimes->{{3.6616263367785187`*^9, 3.661626343681141*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Hue", "[", 
        RowBox[{".5", ",", "1", ",", "b"}], "]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"b", "*", "10"}], ",", "0"}], "}"}], ",", 
         RowBox[{"1", "/", "3"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "1", ",", ".05"}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6616263486874733`*^9, 3.661626449751655*^9}, {
  3.661626481602606*^9, 3.661626522610653*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.5, 1, 0.], 
    DiskBox[{0., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.05], 
    DiskBox[{0.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.1], 
    DiskBox[{1., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.15000000000000002`], 
    DiskBox[{1.5000000000000002`, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.2], 
    DiskBox[{2., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.25], 
    DiskBox[{2.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.30000000000000004`], 
    DiskBox[{3.0000000000000004`, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.35000000000000003`], 
    DiskBox[{3.5000000000000004`, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.4], 
    DiskBox[{4., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.45], 
    DiskBox[{4.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.5], 
    DiskBox[{5., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.55], 
    DiskBox[{5.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.6000000000000001], 
    DiskBox[{6.000000000000001, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.65], 
    DiskBox[{6.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.7000000000000001], 
    DiskBox[{7.000000000000001, 0}, NCache[
     Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.75], 
    DiskBox[{7.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.8], 
    DiskBox[{8., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.8500000000000001], 
    DiskBox[{8.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.9], 
    DiskBox[{9., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 0.9500000000000001], 
    DiskBox[{9.5, 0}, NCache[Rational[1, 3], 0.3333333333333333]]}, 
   {Hue[0.5, 1, 1.], 
    DiskBox[{10., 0}, NCache[Rational[1, 3], 0.3333333333333333]]}},
  ImageSize->Full]], "Output",
 CellChangeTimes->{3.6616265236319523`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A grid of disks with random brightness", "Subsection",
 CellChangeTimes->{{3.661626670713648*^9, 3.661626687550179*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["RandomReal",
  FontWeight->"Bold"],
 " command returns a random value between 0 and 1"
}], "Text",
 CellChangeTimes->{{3.661626689349983*^9, 3.6616267129301653`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hue", "[", 
       RowBox[{".9", ",", "1", ",", 
        RowBox[{"RandomReal", "[", "]"}]}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "*", "10"}], ",", 
          RowBox[{"b", "*", "10"}]}], "}"}], ",", 
        RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "0", ",", "1", ",", ".1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", "1", ",", ".1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6616260194964113`*^9, 3.66162614616327*^9}, {
  3.661626186005131*^9, 3.661626207248661*^9}, {3.661626585584977*^9, 
  3.6616266621797333`*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {Hue[0.9, 1, 0.10379576455309114`], 
     DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.8788051798380674], 
     DiskBox[{0., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.9161139182702263], 
     DiskBox[{0., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.4828956253474661], 
     DiskBox[{0., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.3230199196555561], 
     DiskBox[{0., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6312475616660773], 
     DiskBox[{0., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.8444786121004766], 
     DiskBox[{0., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6701634586427969], 
     DiskBox[{0., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.34531241242408384`], 
     DiskBox[{0., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.3517254803340022], 
     DiskBox[{0., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.21591163805419544`], 
     DiskBox[{0., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {Hue[0.9, 1, 0.295382804524841], 
     DiskBox[{1., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6430684182417339], 
     DiskBox[{1., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.7529675677045158], 
     DiskBox[{1., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.556509677206309], 
     DiskBox[{1., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.44463285350173787`], 
     DiskBox[{1., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.8022373398950553], 
     DiskBox[{1., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.3155366346887696], 
     DiskBox[{1., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.06937953067509439], 
     DiskBox[{1., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.2712947443648086], 
     DiskBox[{1., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.3020434063631785], 
     DiskBox[{1., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.1465645308080885], 
     DiskBox[{1., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {Hue[0.9, 1, 0.7511085590038173], 
     DiskBox[{2., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.9199205069229135], 
     DiskBox[{2., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.86791444905349], 
     DiskBox[{2., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.21811716715482454`], 
     DiskBox[{2., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.542346524480732], 
     DiskBox[{2., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6714964702565795], 
     DiskBox[{2., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.8197463181669771], 
     DiskBox[{2., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.9441034595598081], 
     DiskBox[{2., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6032927630151259], 
     DiskBox[{2., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.10756358146142686`], 
     DiskBox[{2., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.848783520865209], 
     DiskBox[{2., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {Hue[0.9, 1, 0.3757196090682835], 
     DiskBox[{3.0000000000000004`, 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.48348144486623346`], 
     DiskBox[{3.0000000000000004`, 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.014835813879183313`], 
     DiskBox[{3.0000000000000004`, 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.482289020335269], 
     DiskBox[{3.0000000000000004`, 3.0000000000000004`}, NCache[
      Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.9639423476838072], 
     DiskBox[{3.0000000000000004`, 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.2538355194732056], 
     DiskBox[{3.0000000000000004`, 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.2189428947820149], 
     DiskBox[{3.0000000000000004`, 6.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.1154714321542365], 
     DiskBox[{3.0000000000000004`, 7.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.03526506205151225], 
     DiskBox[{3.0000000000000004`, 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.3826603840434959], 
     DiskBox[{3.0000000000000004`, 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.11079378824589647`], 
     DiskBox[{3.0000000000000004`, 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {Hue[0.9, 1, 0.7932476991852744], 
     DiskBox[{4., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.5679236839514739], 
     DiskBox[{4., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.9629633946541061], 
     DiskBox[{4., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.37521149887003236`], 
     DiskBox[{4., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.4740952766749238], 
     DiskBox[{4., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.3960267273938074], 
     DiskBox[{4., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6337227022631613], 
     DiskBox[{4., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.002015010245683291], 
     DiskBox[{4., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.5447070040603499], 
     DiskBox[{4., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.45066646558991486`], 
     DiskBox[{4., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.720329808853782], 
     DiskBox[{4., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {Hue[0.9, 1, 0.11937557452387848`], 
     DiskBox[{5., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.45517324467425135`], 
     DiskBox[{5., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.4693891325912982], 
     DiskBox[{5., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.5094532717839921], 
     DiskBox[{5., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.49964518782779366`], 
     DiskBox[{5., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.7752704827650487], 
     DiskBox[{5., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.4408423212606556], 
     DiskBox[{5., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.7816020460767308], 
     DiskBox[{5., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6883191430170617], 
     DiskBox[{5., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.9149085112701034], 
     DiskBox[{5., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.5404847301075701], 
     DiskBox[{5., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {Hue[0.9, 1, 0.9952505083661243], 
     DiskBox[{6.000000000000001, 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.43311159258400234`], 
     DiskBox[{6.000000000000001, 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.19838755805035846`], 
     DiskBox[{6.000000000000001, 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6573137268304552], 
     DiskBox[{6.000000000000001, 3.0000000000000004`}, NCache[
      Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.3904442844489273], 
     DiskBox[{6.000000000000001, 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.4505596370016067], 
     DiskBox[{6.000000000000001, 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.5018659466621618], 
     DiskBox[{6.000000000000001, 6.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.9909594723572615], 
     DiskBox[{6.000000000000001, 7.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.2770250097080753], 
     DiskBox[{6.000000000000001, 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.4107273238903004], 
     DiskBox[{6.000000000000001, 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6148183051365812], 
     DiskBox[{6.000000000000001, 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {Hue[0.9, 1, 0.22694784658947853`], 
     DiskBox[{7.000000000000001, 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.1649056463218308], 
     DiskBox[{7.000000000000001, 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.02731468879705301], 
     DiskBox[{7.000000000000001, 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.8551599893683346], 
     DiskBox[{7.000000000000001, 3.0000000000000004`}, NCache[
      Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.26383008058309754`], 
     DiskBox[{7.000000000000001, 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.985182353846703], 
     DiskBox[{7.000000000000001, 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.35864724044869223`], 
     DiskBox[{7.000000000000001, 6.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.9650014095430928], 
     DiskBox[{7.000000000000001, 7.000000000000001}, NCache[
      Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.32717011977488997`], 
     DiskBox[{7.000000000000001, 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.27214744774496147`], 
     DiskBox[{7.000000000000001, 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.5547847799094769], 
     DiskBox[{7.000000000000001, 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {Hue[0.9, 1, 0.07269471888394974], 
     DiskBox[{8., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.08172329898154262], 
     DiskBox[{8., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6586714189046605], 
     DiskBox[{8., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.18574219974435446`], 
     DiskBox[{8., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.232632206472547], 
     DiskBox[{8., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.7686790570734792], 
     DiskBox[{8., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.8240244205515692], 
     DiskBox[{8., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6169451273170485], 
     DiskBox[{8., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.28085643362434154`], 
     DiskBox[{8., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.2695367339890693], 
     DiskBox[{8., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.5914706680268642], 
     DiskBox[{8., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {Hue[0.9, 1, 0.40011637552134727`], 
     DiskBox[{9., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.31259884843049157`], 
     DiskBox[{9., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.007546292238150176], 
     DiskBox[{9., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.7766591394418927], 
     DiskBox[{9., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.5076408495776761], 
     DiskBox[{9., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.9628857176218741], 
     DiskBox[{9., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.048814663017126], 
     DiskBox[{9., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.2531725009966359], 
     DiskBox[{9., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.7057033950088094], 
     DiskBox[{9., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.29499487723634066`], 
     DiskBox[{9., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.05809095673700937], 
     DiskBox[{9., 10.}, NCache[Rational[1, 2], 0.5]]}}, {
    {Hue[0.9, 1, 0.5891074015247562], 
     DiskBox[{10., 0.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.0015035740795528163`], 
     DiskBox[{10., 1.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.6135914076867128], 
     DiskBox[{10., 2.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.15153378451406785`], 
     DiskBox[{10., 3.0000000000000004`}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.35611708634723005`], 
     DiskBox[{10., 4.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.7144612165043567], 
     DiskBox[{10., 5.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.2309326572348871], 
     DiskBox[{10., 6.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.597508925722835], 
     DiskBox[{10., 7.000000000000001}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.35877198497801865`], 
     DiskBox[{10., 8.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.8485968612055528], 
     DiskBox[{10., 9.}, NCache[Rational[1, 2], 0.5]]}, 
    {Hue[0.9, 1, 0.8367051010036979], 
     DiskBox[{10., 10.}, NCache[Rational[1, 2], 0.5]]}}}]], "Output",
 CellChangeTimes->{{3.661626626685378*^9, 3.6616266630264387`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["In-Class Activity", "Section",
 CellChangeTimes->{{3.647716402186221*^9, 3.647716405353856*^9}, {
  3.6583374723271*^9, 3.658337478437811*^9}}],

Cell[CellGroupData[{

Cell["\<\
Draw a picture using the Graphics command. Use Table with RGBColor, Hue \
and/or Blend to generate a range of colours in your image.\
\>", "Subsection",
 CellChangeTimes->{{3.66045777809417*^9, 3.660457780906083*^9}, {
   3.660665069786047*^9, 3.660665104240719*^9}, 3.660665206629046*^9, {
   3.6614577828875427`*^9, 3.6614578368935013`*^9}}],

Cell["NAME:", "Subsubsection",
 CellChangeTimes->{{3.658337538475717*^9, 3.658337539778943*^9}}],

Cell["STUDENT NUMBER:", "Subsubsection",
 CellChangeTimes->{{3.658337543114833*^9, 3.658337546026588*^9}}],

Cell["DATE:", "Subsubsection",
 CellChangeTimes->{{3.6583375490023537`*^9, 3.658337550162354*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Upload your notebook", "Section",
 CellChangeTimes->{{3.649950784924818*^9, 3.649950788859275*^9}}],

Cell["\<\
Don\[CloseCurlyQuote]t forget to upload a copy of your notebook for this day\
\[CloseCurlyQuote]s class to the OWL Site for the course\
\>", "Text",
 CellChangeTimes->{{3.649950792779258*^9, 3.649950818634288*^9}, {
  3.658337509093232*^9, 3.658337512508254*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1422, 1107},
WindowMargins->{{37, Automatic}, {Automatic, 52}},
TaggingRules->{"SlideShow" -> True},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4299, 96, 75, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[5763, 146, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[126651, 2980, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[389072, 9635, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[392098, 9724, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[404689, 10119, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[428585, 10685, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[429571, 10718, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 430454, 10748}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4299, 96, 75, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[4882, 120, 479, 10, 183, "Title"],
Cell[5364, 132, 362, 9, 99, "Subtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5763, 146, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[5852, 151, 149, 2, 80, "Section"],
Cell[6004, 155, 331, 8, 37, "Text"],
Cell[CellGroupData[{
Cell[6360, 167, 952, 27, 36, "Input"],
Cell[7315, 196, 453, 10, 243, "Output"]
}, Open  ]],
Cell[7783, 209, 219, 5, 37, "Text"],
Cell[CellGroupData[{
Cell[8027, 218, 399, 8, 36, "Input"],
Cell[8429, 228, 19159, 525, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27625, 758, 435, 9, 57, "Input"],
Cell[28063, 769, 16742, 457, 35, "Output"]
}, Open  ]],
Cell[44820, 1229, 302, 7, 37, "Text"],
Cell[CellGroupData[{
Cell[45147, 1240, 142, 2, 35, "Input"],
Cell[45292, 1244, 1460, 40, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46789, 1289, 113, 1, 54, "Subsection"],
Cell[46905, 1292, 185, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[47115, 1300, 1121, 29, 57, "Input"],
Cell[48239, 1331, 31798, 725, 199, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80074, 2061, 1234, 30, 78, "Input"],
Cell[81311, 2093, 17712, 340, 676, "Output"]
}, Open  ]],
Cell[99038, 2436, 209, 6, 37, "Text"],
Cell[CellGroupData[{
Cell[99272, 2446, 1014, 26, 36, "Input"],
Cell[100289, 2474, 26289, 498, 558, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126651, 2980, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[126740, 2985, 146, 2, 80, "Section"],
Cell[126889, 2989, 384, 7, 61, "Text"],
Cell[127276, 2998, 234, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[127535, 3006, 162, 3, 35, "Input"],
Cell[127700, 3011, 1444, 40, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129181, 3056, 162, 3, 35, "Input"],
Cell[129346, 3061, 1444, 40, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130827, 3106, 160, 3, 35, "Input"],
Cell[130990, 3111, 1444, 40, 35, "Output"]
}, Open  ]],
Cell[132449, 3154, 344, 8, 37, "Text"],
Cell[CellGroupData[{
Cell[132818, 3166, 288, 7, 36, "Input"],
Cell[133109, 3175, 31586, 850, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164732, 4030, 102, 1, 54, "Subsection"],
Cell[164837, 4033, 163, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[165025, 4040, 464, 12, 36, "Input"],
Cell[165492, 4054, 197247, 5081, 270, "Output"]
}, Open  ]],
Cell[362754, 9138, 264, 7, 37, "Text"],
Cell[CellGroupData[{
Cell[363043, 9149, 921, 28, 36, "Input"],
Cell[363967, 9179, 12232, 229, 467, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376236, 9413, 733, 21, 36, "Input"],
Cell[376972, 9436, 12027, 191, 467, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[389072, 9635, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[389161, 9640, 165, 2, 80, "Section"],
Cell[389329, 9644, 997, 23, 109, "Text"],
Cell[CellGroupData[{
Cell[390351, 9671, 382, 7, 36, "Input",
 CellID->420133799],
Cell[390736, 9680, 186, 3, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390959, 9688, 331, 6, 36, "Input",
 CellID->19067990],
Cell[391293, 9696, 247, 4, 79, "Output"]
}, Open  ]],
Cell[391555, 9703, 176, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[391756, 9711, 127, 2, 36, "Input"],
Cell[391886, 9715, 151, 2, 49, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[392098, 9724, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[392187, 9729, 157, 2, 80, "Section"],
Cell[392347, 9733, 309, 7, 37, "Text"],
Cell[CellGroupData[{
Cell[392681, 9744, 424, 12, 36, "Input"],
Cell[393108, 9758, 267, 9, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393412, 9772, 645, 18, 36, "Input"],
Cell[394060, 9792, 1034, 39, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395131, 9836, 125, 1, 54, "Subsection"],
Cell[395259, 9839, 324, 8, 37, "Text"],
Cell[CellGroupData[{
Cell[395608, 9851, 131, 2, 35, "Input"],
Cell[395742, 9855, 467, 18, 60, "Output"]
}, Open  ]],
Cell[396224, 9876, 335, 8, 37, "Text"],
Cell[CellGroupData[{
Cell[396584, 9888, 209, 5, 35, "Input"],
Cell[396796, 9895, 70, 1, 35, "Output"]
}, Open  ]],
Cell[396881, 9899, 218, 5, 35, "Input"],
Cell[CellGroupData[{
Cell[397124, 9908, 205, 5, 35, "Input"],
Cell[397332, 9915, 70, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397439, 9921, 219, 5, 35, "Input"],
Cell[397661, 9928, 70, 1, 35, "Output"]
}, Open  ]],
Cell[397746, 9932, 290, 9, 37, "Text"],
Cell[CellGroupData[{
Cell[398061, 9945, 776, 21, 36, "Input"],
Cell[398840, 9968, 5776, 143, 467, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[404689, 10119, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[404778, 10124, 215, 3, 80, "Section"],
Cell[404996, 10129, 324, 8, 37, "Text"],
Cell[CellGroupData[{
Cell[405345, 10141, 99, 1, 54, "Subsection"],
Cell[CellGroupData[{
Cell[405469, 10146, 642, 18, 36, "Input"],
Cell[406114, 10166, 2229, 50, 144, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[408392, 10222, 108, 1, 54, "Subsection"],
Cell[CellGroupData[{
Cell[408525, 10227, 692, 19, 36, "Input"],
Cell[409220, 10248, 2247, 50, 144, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[411516, 10304, 117, 1, 54, "Subsection"],
Cell[CellGroupData[{
Cell[411658, 10309, 692, 19, 36, "Input"],
Cell[412353, 10330, 2249, 50, 144, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[414651, 10386, 126, 1, 54, "Subsection"],
Cell[414780, 10389, 202, 6, 37, "Text"],
Cell[CellGroupData[{
Cell[415007, 10399, 818, 23, 36, "Input"],
Cell[415828, 10424, 12684, 253, 467, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[428585, 10685, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[428674, 10690, 149, 2, 80, "Section"],
Cell[CellGroupData[{
Cell[428848, 10696, 353, 6, 85, "Subsection"],
Cell[429204, 10704, 96, 1, 43, "Subsubsection"],
Cell[429303, 10707, 106, 1, 34, "Subsubsection"],
Cell[429412, 10710, 98, 1, 34, "Subsubsection"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[429571, 10718, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[429660, 10723, 105, 1, 80, "Section"],
Cell[429768, 10726, 273, 5, 37, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
